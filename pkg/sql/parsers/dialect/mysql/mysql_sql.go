// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const VALUES = 57389
const NEXT = 57390
const VALUE = 57391
const SHARE = 57392
const MODE = 57393
const SQL_NO_CACHE = 57394
const SQL_CACHE = 57395
const JOIN = 57396
const STRAIGHT_JOIN = 57397
const LEFT = 57398
const RIGHT = 57399
const INNER = 57400
const OUTER = 57401
const CROSS = 57402
const NATURAL = 57403
const USE = 57404
const FORCE = 57405
const LOWER_THAN_ON = 57406
const ON = 57407
const USING = 57408
const SUBQUERY_AS_EXPR = 57409
const LOWER_THAN_STRING = 57410
const ID = 57411
const AT_ID = 57412
const AT_AT_ID = 57413
const STRING = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const QUOTE_ID = 57419
const INTEGRAL = 57420
const HEX = 57421
const BIT_LITERAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const NULL = 57425
const TRUE = 57426
const FALSE = 57427
const LOWER_THAN_CHARSET = 57428
const CHARSET = 57429
const UNIQUE = 57430
const KEY = 57431
const OR = 57432
const PIPE_CONCAT = 57433
const XOR = 57434
const AND = 57435
const NOT = 57436
const BETWEEN = 57437
const CASE = 57438
const WHEN = 57439
const THEN = 57440
const ELSE = 57441
const END = 57442
const ELSEIF = 57443
const LOWER_THAN_EQ = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT = 57453
const ILIKE = 57454
const SHIFT_LEFT = 57455
const SHIFT_RIGHT = 57456
const DIV = 57457
const MOD = 57458
const UNARY = 57459
const COLLATE = 57460
const BINARY = 57461
const UNDERSCORE_BINARY = 57462
const INTERVAL = 57463
const OUT = 57464
const INOUT = 57465
const BEGIN = 57466
const START = 57467
const TRANSACTION = 57468
const COMMIT = 57469
const ROLLBACK = 57470
const WORK = 57471
const CONSISTENT = 57472
const SNAPSHOT = 57473
const CHAIN = 57474
const NO = 57475
const RELEASE = 57476
const PRIORITY = 57477
const QUICK = 57478
const BIT = 57479
const TINYINT = 57480
const SMALLINT = 57481
const MEDIUMINT = 57482
const INT = 57483
const INTEGER = 57484
const BIGINT = 57485
const INTNUM = 57486
const REAL = 57487
const DOUBLE = 57488
const FLOAT_TYPE = 57489
const DECIMAL = 57490
const NUMERIC = 57491
const DECIMAL_VALUE = 57492
const TIME = 57493
const TIMESTAMP = 57494
const DATETIME = 57495
const YEAR = 57496
const CHAR = 57497
const VARCHAR = 57498
const BOOL = 57499
const CHARACTER = 57500
const VARBINARY = 57501
const NCHAR = 57502
const TEXT = 57503
const TINYTEXT = 57504
const MEDIUMTEXT = 57505
const LONGTEXT = 57506
const BLOB = 57507
const TINYBLOB = 57508
const MEDIUMBLOB = 57509
const LONGBLOB = 57510
const JSON = 57511
const ENUM = 57512
const UUID = 57513
const GEOMETRY = 57514
const POINT = 57515
const LINESTRING = 57516
const POLYGON = 57517
const GEOMETRYCOLLECTION = 57518
const MULTIPOINT = 57519
const MULTILINESTRING = 57520
const MULTIPOLYGON = 57521
const INT1 = 57522
const INT2 = 57523
const INT3 = 57524
const INT4 = 57525
const INT8 = 57526
const S3OPTION = 57527
const SQL_SMALL_RESULT = 57528
const SQL_BIG_RESULT = 57529
const SQL_BUFFER_RESULT = 57530
const LOW_PRIORITY = 57531
const HIGH_PRIORITY = 57532
const DELAYED = 57533
const CREATE = 57534
const ALTER = 57535
const DROP = 57536
const RENAME = 57537
const ANALYZE = 57538
const ADD = 57539
const RETURNS = 57540
const SCHEMA = 57541
const TABLE = 57542
const SEQUENCE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const CONSTRAINT = 57551
const SPATIAL = 57552
const FULLTEXT = 57553
const FOREIGN = 57554
const KEY_BLOCK_SIZE = 57555
const SHOW = 57556
const DESCRIBE = 57557
const EXPLAIN = 57558
const DATE = 57559
const ESCAPE = 57560
const REPAIR = 57561
const OPTIMIZE = 57562
const TRUNCATE = 57563
const MAXVALUE = 57564
const PARTITION = 57565
const REORGANIZE = 57566
const LESS = 57567
const THAN = 57568
const PROCEDURE = 57569
const TRIGGER = 57570
const STATUS = 57571
const VARIABLES = 57572
const ROLE = 57573
const PROXY = 57574
const AVG_ROW_LENGTH = 57575
const STORAGE = 57576
const DISK = 57577
const MEMORY = 57578
const CHECKSUM = 57579
const COMPRESSION = 57580
const DATA = 57581
const DIRECTORY = 57582
const DELAY_KEY_WRITE = 57583
const ENCRYPTION = 57584
const ENGINE = 57585
const MAX_ROWS = 57586
const MIN_ROWS = 57587
const PACK_KEYS = 57588
const ROW_FORMAT = 57589
const STATS_AUTO_RECALC = 57590
const STATS_PERSISTENT = 57591
const STATS_SAMPLE_PAGES = 57592
const DYNAMIC = 57593
const COMPRESSED = 57594
const REDUNDANT = 57595
const COMPACT = 57596
const FIXED = 57597
const COLUMN_FORMAT = 57598
const AUTO_RANDOM = 57599
const RESTRICT = 57600
const CASCADE = 57601
const ACTION = 57602
const PARTIAL = 57603
const SIMPLE = 57604
const CHECK = 57605
const ENFORCED = 57606
const RANGE = 57607
const LIST = 57608
const ALGORITHM = 57609
const LINEAR = 57610
const PARTITIONS = 57611
const SUBPARTITION = 57612
const SUBPARTITIONS = 57613
const CLUSTER = 57614
const TYPE = 57615
const ANY = 57616
const SOME = 57617
const EXTERNAL = 57618
const LOCALFILE = 57619
const URL = 57620
const PREPARE = 57621
const DEALLOCATE = 57622
const RESET = 57623
const EXTENSION = 57624
const INCREMENT = 57625
const CYCLE = 57626
const MINVALUE = 57627
const PUBLICATION = 57628
const SUBSCRIPTIONS = 57629
const PUBLICATIONS = 57630
const PROPERTIES = 57631
const PARSER = 57632
const VISIBLE = 57633
const INVISIBLE = 57634
const BTREE = 57635
const HASH = 57636
const RTREE = 57637
const BSI = 57638
const ZONEMAP = 57639
const LEADING = 57640
const BOTH = 57641
const TRAILING = 57642
const UNKNOWN = 57643
const EXPIRE = 57644
const ACCOUNT = 57645
const ACCOUNTS = 57646
const UNLOCK = 57647
const DAY = 57648
const NEVER = 57649
const PUMP = 57650
const MYSQL_COMPATIBILITY_MODE = 57651
const SECOND = 57652
const ASCII = 57653
const COALESCE = 57654
const COLLATION = 57655
const HOUR = 57656
const MICROSECOND = 57657
const MINUTE = 57658
const MONTH = 57659
const QUARTER = 57660
const REPEAT = 57661
const REVERSE = 57662
const ROW_COUNT = 57663
const WEEK = 57664
const REVOKE = 57665
const FUNCTION = 57666
const PRIVILEGES = 57667
const TABLESPACE = 57668
const EXECUTE = 57669
const SUPER = 57670
const GRANT = 57671
const OPTION = 57672
const REFERENCES = 57673
const REPLICATION = 57674
const SLAVE = 57675
const CLIENT = 57676
const USAGE = 57677
const RELOAD = 57678
const FILE = 57679
const TEMPORARY = 57680
const ROUTINE = 57681
const EVENT = 57682
const SHUTDOWN = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const ENGINES = 57690
const LOW_CARDINALITY = 57691
const ADMIN_NAME = 57692
const RANDOM = 57693
const SUSPEND = 57694
const ATTRIBUTE = 57695
const HISTORY = 57696
const REUSE = 57697
const CURRENT = 57698
const OPTIONAL = 57699
const FAILED_LOGIN_ATTEMPTS = 57700
const PASSWORD_LOCK_TIME = 57701
const UNBOUNDED = 57702
const SECONDARY = 57703
const RESTRICTED = 57704
const USER = 57705
const IDENTIFIED = 57706
const CIPHER = 57707
const ISSUER = 57708
const X509 = 57709
const SUBJECT = 57710
const SAN = 57711
const REQUIRE = 57712
const SSL = 57713
const NONE = 57714
const PASSWORD = 57715
const MAX_QUERIES_PER_HOUR = 57716
const MAX_UPDATES_PER_HOUR = 57717
const MAX_CONNECTIONS_PER_HOUR = 57718
const MAX_USER_CONNECTIONS = 57719
const FORMAT = 57720
const VERBOSE = 57721
const CONNECTION = 57722
const TRIGGERS = 57723
const PROFILES = 57724
const LOAD = 57725
const INFILE = 57726
const TERMINATED = 57727
const OPTIONALLY = 57728
const ENCLOSED = 57729
const ESCAPED = 57730
const STARTING = 57731
const LINES = 57732
const ROWS = 57733
const IMPORT = 57734
const MODUMP = 57735
const OVER = 57736
const PRECEDING = 57737
const FOLLOWING = 57738
const GROUPS = 57739
const DATABASES = 57740
const TABLES = 57741
const SEQUENCES = 57742
const EXTENDED = 57743
const FULL = 57744
const PROCESSLIST = 57745
const FIELDS = 57746
const COLUMNS = 57747
const OPEN = 57748
const ERRORS = 57749
const WARNINGS = 57750
const INDEXES = 57751
const SCHEMAS = 57752
const NODE = 57753
const LOCKS = 57754
const ROLES = 57755
const TABLE_NUMBER = 57756
const COLUMN_NUMBER = 57757
const TABLE_VALUES = 57758
const TABLE_SIZE = 57759
const NAMES = 57760
const GLOBAL = 57761
const PERSIST = 57762
const SESSION = 57763
const ISOLATION = 57764
const LEVEL = 57765
const READ = 57766
const WRITE = 57767
const ONLY = 57768
const REPEATABLE = 57769
const COMMITTED = 57770
const UNCOMMITTED = 57771
const SERIALIZABLE = 57772
const LOCAL = 57773
const EVENTS = 57774
const PLUGINS = 57775
const CURRENT_TIMESTAMP = 57776
const DATABASE = 57777
const CURRENT_TIME = 57778
const LOCALTIME = 57779
const LOCALTIMESTAMP = 57780
const UTC_DATE = 57781
const UTC_TIME = 57782
const UTC_TIMESTAMP = 57783
const REPLACE = 57784
const CONVERT = 57785
const SEPARATOR = 57786
const TIMESTAMPDIFF = 57787
const CURRENT_DATE = 57788
const CURRENT_USER = 57789
const CURRENT_ROLE = 57790
const SECOND_MICROSECOND = 57791
const MINUTE_MICROSECOND = 57792
const MINUTE_SECOND = 57793
const HOUR_MICROSECOND = 57794
const HOUR_SECOND = 57795
const HOUR_MINUTE = 57796
const DAY_MICROSECOND = 57797
const DAY_SECOND = 57798
const DAY_MINUTE = 57799
const DAY_HOUR = 57800
const YEAR_MONTH = 57801
const SQL_TSI_HOUR = 57802
const SQL_TSI_DAY = 57803
const SQL_TSI_WEEK = 57804
const SQL_TSI_MONTH = 57805
const SQL_TSI_QUARTER = 57806
const SQL_TSI_YEAR = 57807
const SQL_TSI_SECOND = 57808
const SQL_TSI_MINUTE = 57809
const RECURSIVE = 57810
const CONFIG = 57811
const DRAINER = 57812
const MATCH = 57813
const AGAINST = 57814
const BOOLEAN = 57815
const LANGUAGE = 57816
const WITH = 57817
const QUERY = 57818
const EXPANSION = 57819
const ADDDATE = 57820
const BIT_AND = 57821
const BIT_OR = 57822
const BIT_XOR = 57823
const CAST = 57824
const COUNT = 57825
const APPROX_COUNT_DISTINCT = 57826
const APPROX_PERCENTILE = 57827
const CURDATE = 57828
const CURTIME = 57829
const DATE_ADD = 57830
const DATE_SUB = 57831
const EXTRACT = 57832
const GROUP_CONCAT = 57833
const MAX = 57834
const MID = 57835
const MIN = 57836
const NOW = 57837
const POSITION = 57838
const SESSION_USER = 57839
const STD = 57840
const STDDEV = 57841
const MEDIAN = 57842
const STDDEV_POP = 57843
const STDDEV_SAMP = 57844
const SUBDATE = 57845
const SUBSTR = 57846
const SUBSTRING = 57847
const SUM = 57848
const SYSDATE = 57849
const SYSTEM_USER = 57850
const TRANSLATE = 57851
const TRIM = 57852
const VARIANCE = 57853
const VAR_POP = 57854
const VAR_SAMP = 57855
const AVG = 57856
const RANK = 57857
const ROW_NUMBER = 57858
const DENSE_RANK = 57859
const NEXTVAL = 57860
const SETVAL = 57861
const CURRVAL = 57862
const LASTVAL = 57863
const ARROW = 57864
const ROW = 57865
const OUTFILE = 57866
const HEADER = 57867
const MAX_FILE_SIZE = 57868
const FORCE_QUOTE = 57869
const PARALLEL = 57870
const UNUSED = 57871
const BINDINGS = 57872
const DO = 57873
const DECLARE = 57874
const LOOP = 57875
const WHILE = 57876
const LEAVE = 57877
const ITERATE = 57878
const UNTIL = 57879
const CALL = 57880
const SPBEGIN = 57881
const BACKEND = 57882
const SERVERS = 57883
const KILL = 57884
const BACKUP = 57885
const FILESYSTEM = 57886
const QUERY_RESULT = 57887

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9672

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 112,
	21, 652,
	-2, 633,
	-1, 127,
	219, 872,
	-2, 943,
	-1, 149,
	42, 475,
	219, 475,
	246, 482,
	247, 482,
	426, 475,
	-2, 508,
	-1, 185,
	566, 1614,
	-2, 393,
	-1, 510,
	295, 133,
	401, 133,
	-2, 1526,
	-1, 573,
	68, 1329,
	-2, 1668,
	-1, 574,
	68, 1347,
	-2, 1639,
	-1, 578,
	68, 1348,
	-2, 1667,
	-1, 603,
	68, 1259,
	-2, 1732,
	-1, 604,
	68, 1260,
	-2, 1731,
	-1, 605,
	68, 1261,
	-2, 1721,
	-1, 606,
	68, 1696,
	-2, 1716,
	-1, 607,
	68, 1697,
	-2, 1717,
	-1, 608,
	68, 1698,
	-2, 1723,
	-1, 609,
	68, 1699,
	-2, 1706,
	-1, 610,
	68, 1700,
	-2, 1714,
	-1, 611,
	68, 1701,
	-2, 1724,
	-1, 612,
	68, 1702,
	-2, 1725,
	-1, 613,
	68, 1703,
	-2, 1730,
	-1, 614,
	68, 1704,
	-2, 1735,
	-1, 615,
	68, 1705,
	-2, 1736,
	-1, 617,
	68, 1326,
	-2, 1518,
	-1, 621,
	68, 1331,
	-2, 1527,
	-1, 624,
	68, 1335,
	-2, 1545,
	-1, 628,
	68, 1339,
	-2, 1585,
	-1, 629,
	68, 1340,
	-2, 1663,
	-1, 637,
	68, 1350,
	-2, 1648,
	-1, 638,
	68, 1351,
	-2, 1693,
	-1, 639,
	68, 1352,
	-2, 1658,
	-1, 640,
	68, 1353,
	-2, 1683,
	-1, 651,
	68, 1237,
	-2, 1726,
	-1, 652,
	68, 1238,
	-2, 1727,
	-1, 653,
	68, 1239,
	-2, 1728,
	-1, 657,
	21, 653,
	-2, 616,
	-1, 728,
	421, 508,
	422, 508,
	-2, 476,
	-1, 771,
	106, 1518,
	117, 1518,
	137, 1518,
	-2, 1493,
	-1, 871,
	21, 653,
	-2, 616,
	-1, 971,
	21, 652,
	-2, 1137,
	-1, 1324,
	68, 1397,
	-2, 1665,
	-1, 1325,
	68, 1398,
	-2, 1666,
	-1, 1461,
	69, 796,
	-2, 802,
	-1, 1801,
	69, 1479,
	138, 1479,
	-2, 1650,
	-1, 1802,
	69, 1479,
	138, 1479,
	-2, 1649,
	-1, 1803,
	69, 1457,
	138, 1457,
	-2, 1636,
	-1, 1804,
	69, 1458,
	138, 1458,
	-2, 1641,
	-1, 1805,
	69, 1459,
	138, 1459,
	-2, 1573,
	-1, 1806,
	69, 1460,
	138, 1460,
	-2, 1567,
	-1, 1807,
	69, 1461,
	138, 1461,
	-2, 1509,
	-1, 1808,
	69, 1462,
	138, 1462,
	-2, 1638,
	-1, 1809,
	69, 1463,
	138, 1463,
	-2, 1571,
	-1, 1810,
	69, 1464,
	138, 1464,
	-2, 1566,
	-1, 1811,
	69, 1465,
	138, 1465,
	-2, 1559,
	-1, 1813,
	69, 1468,
	138, 1468,
	-2, 1683,
	-1, 1814,
	69, 1448,
	138, 1448,
	-2, 1668,
	-1, 1815,
	69, 1477,
	138, 1477,
	-2, 1639,
	-1, 1816,
	69, 1477,
	138, 1477,
	-2, 1667,
	-1, 1817,
	69, 1477,
	138, 1477,
	-2, 1528,
	-1, 1818,
	69, 1475,
	138, 1475,
	-2, 1658,
	-1, 1819,
	69, 1472,
	138, 1472,
	-2, 1550,
	-1, 1820,
	68, 1430,
	69, 1430,
	138, 1430,
	362, 1430,
	363, 1430,
	364, 1430,
	-2, 1508,
	-1, 1821,
	68, 1431,
	69, 1431,
	138, 1431,
	362, 1431,
	363, 1431,
	364, 1431,
	-2, 1510,
	-1, 1822,
	68, 1434,
	69, 1434,
	138, 1434,
	362, 1434,
	363, 1434,
	364, 1434,
	-2, 1640,
	-1, 1823,
	68, 1436,
	69, 1436,
	138, 1436,
	362, 1436,
	363, 1436,
	364, 1436,
	-2, 1623,
	-1, 1824,
	68, 1438,
	69, 1438,
	138, 1438,
	362, 1438,
	363, 1438,
	364, 1438,
	-2, 1572,
	-1, 1825,
	68, 1440,
	69, 1440,
	138, 1440,
	362, 1440,
	363, 1440,
	364, 1440,
	-2, 1555,
	-1, 1826,
	68, 1441,
	69, 1441,
	138, 1441,
	362, 1441,
	363, 1441,
	364, 1441,
	-2, 1556,
	-1, 1827,
	68, 1443,
	69, 1443,
	138, 1443,
	362, 1443,
	363, 1443,
	364, 1443,
	-2, 1507,
	-1, 1828,
	69, 1482,
	138, 1482,
	362, 1482,
	363, 1482,
	364, 1482,
	-2, 1533,
	-1, 1829,
	69, 1482,
	138, 1482,
	362, 1482,
	363, 1482,
	364, 1482,
	-2, 1546,
	-1, 1830,
	69, 1485,
	138, 1485,
	362, 1485,
	363, 1485,
	364, 1485,
	-2, 1529,
	-1, 1831,
	69, 1482,
	138, 1482,
	362, 1482,
	363, 1482,
	364, 1482,
	-2, 1608,
	-1, 1844,
	89, 907,
	133, 907,
	172, 907,
	175, 907,
	259, 907,
	-2, 900,
	-1, 1958,
	21, 652,
	-2, 746,
	-1, 2147,
	89, 907,
	133, 907,
	172, 907,
	175, 907,
	259, 907,
	-2, 901,
	-1, 2159,
	66, 562,
	138, 562,
	-2, 1038,
	-1, 2181,
	280, 1105,
	-2, 1084,
	-1, 2452,
	280, 1105,
	-2, 1085,
	-1, 2583,
	89, 907,
	133, 907,
	172, 907,
	175, 907,
	-2, 986,
	-1, 2586,
	89, 907,
	133, 907,
	172, 907,
	175, 907,
	-2, 986,
	-1, 2596,
	66, 562,
	138, 562,
	-2, 1039,
	-1, 2695,
	89, 907,
	133, 907,
	172, 907,
	175, 907,
	-2, 987,
	-1, 2996,
	69, 958,
	138, 958,
	-2, 907,
	-1, 3000,
	69, 958,
	138, 958,
	-2, 907,
	-1, 3014,
	69, 962,
	138, 962,
	-2, 907,
	-1, 3019,
	69, 963,
	138, 963,
	-2, 907,
}

const yyPrivate = 57344

const yyLast = 35991

var yyAct = [...]int{
	540, 3000, 1524, 2999, 3008, 2979, 176, 1305, 519, 2890,
	521, 2938, 542, 514, 2908, 529, 2930, 2667, 2819, 2662,
	2464, 2846, 2727, 2847, 1776, 2830, 2811, 2834, 2541, 2688,
	1243, 2749, 1002, 2687, 2542, 2776, 2739, 2665, 1234, 2820,
	426, 1110, 2822, 658, 1482, 2716, 570, 2162, 1308, 433,
	2694, 438, 438, 2424, 1484, 1301, 2657, 438, 454, 463,
	1593, 1168, 463, 161, 2606, 2250, 2249, 2248, 1590, 2567,
	2234, 2476, 523, 2453, 2242, 1558, 2689, 1883, 1653, 1952,
	2539, 1684, 2527, 2271, 2510, 2245, 1886, 2400, 474, 2397,
	1605, 2395, 2475, 2177, 865, 2148, 2422, 1799, 1853, 468,
	1936, 1797, 2342, 1789, 1780, 1528, 1225, 1779, 1161, 512,
	36, 770, 2089, 2305, 1662, 1441, 518, 1999, 1230, 1661,
	2288, 1654, 1680, 1627, 1086, 1586, 1679, 1561, 1941, 1953,
	705, 776, 1084, 2130, 1566, 2125, 1242, 54, 1511, 2183,
	513, 1852, 1884, 1520, 2425, 1118, 1469, 172, 8, 171,
	7, 1559, 6, 426, 1449, 820, 2016, 1712, 1299, 1681,
	522, 1199, 1068, 1980, 1177, 1304, 1795, 764, 460, 1235,
	111, 35, 1837, 1099, 1904, 2427, 176, 1147, 176, 2426,
	811, 812, 432, 1494, 1493, 437, 437, 805, 806, 1691,
	1354, 445, 810, 1338, 511, 1290, 1660, 530, 882, 774,
	2090, 26, 1657, 1643, 15, 1206, 13, 425, 14, 1617,
	1298, 763, 1960, 1146, 447, 1468, 704, 32, 513, 1144,
	655, 450, 1095, 23, 1360, 16, 10, 162, 476, 1003,
	1359, 1198, 155, 1111, 702, 158, 1688, 2114, 1066, 807,
	2114, 809, 808, 462, 657, 477, 1698, 2534, 2114, 2050,
	520, 2005, 2003, 1454, 2002, 2000, 1213, 723, 1209, 459,
	1040, 735, 455, 804, 457, 804, 458, 804, 803, 160,
	1057, 434, 1131, 2655, 2301, 456, 1211, 940, 941, 942,
	939, 940, 941, 942, 939, 2299, 1632, 443, 2745, 2740,
	2658, 2540, 1445, 997, 780, 2824, 1656, 656, 2786, 1380,
	159, 159, 1119, 666, 159, 466, 159, 159, 8, 2680,
	7, 159, 903, 802, 159, 2045, 159, 1394, 50, 151,
	128, 2881, 2037, 2679, 1257, 1058, 1250, 777, 779, 1685,
	2795, 159, 472, 50, 151, 128, 159, 110, 50, 151,
	128, 1254, 2787, 1247, 2320, 473, 2365, 1696, 2313, 1841,
	646, 110, 645, 647, 648, 1978, 649, 650, 156, 156,
	937, 1979, 1256, 1127, 1249, 156, 1128, 1966, 1603, 156,
	1965, 2277, 156, 1967, 156, 659, 1059, 2278, 2279, 1107,
	1275, 1571, 1572, 1455, 1456, 1148, 2926, 1150, 1570, 156,
	2127, 2017, 2924, 744, 156, 786, 781, 785, 787, 667,
	2128, 1116, 1117, 1291, 911, 1507, 1295, 913, 2850, 2851,
	918, 749, 1114, 919, 748, 2675, 1113, 1116, 1117, 930,
	1307, 935, 791, 773, 772, 2827, 784, 2827, 2877, 2826,
	1294, 2826, 2876, 2813, 2825, 914, 1767, 438, 2825, 2875,
	2747, 921, 2912, 2913, 2126, 2306, 2543, 438, 875, 1130,
	2813, 1376, 2307, 2816, 2308, 1373, 2743, 2543, 1310, 1375,
	1372, 1374, 1378, 1379, 2829, 463, 463, 1377, 438, 2750,
	2751, 2752, 2753, 2880, 789, 2032, 876, 2552, 2568, 1577,
	1581, 792, 1286, 1587, 1692, 2575, 2685, 870, 872, 885,
	1212, 1210, 2401, 2133, 1931, 1640, 1836, 753, 782, 2117,
	2411, 2409, 2471, 885, 1219, 1218, 1296, 907, 2331, 2761,
	2768, 2771, 2762, 916, 750, 127, 932, 157, 2333, 790,
	507, 906, 814, 509, 874, 933, 934, 1293, 508, 943,
	909, 775, 2656, 2300, 869, 2238, 2042, 149, 972, 2405,
	1934, 2674, 912, 915, 2682, 1933, 981, 2676, 1937, 2849,
	2421, 2883, 2884, 2406, 2407, 973, 1105, 2919, 783, 2431,
	898, 2839, 460, 460, 1309, 2764, 2155, 908, 986, 2408,
	465, 867, 875, 917, 752, 464, 871, 2627, 1316, 1319,
	1320, 873, 2835, 2928, 1697, 923, 2484, 2485, 924, 1317,
	2993, 780, 2783, 2892, 3009, 1139, 2763, 2923, 1129, 2947,
	2954, 2802, 894, 1601, 1602, 1383, 1384, 1385, 1386, 1387,
	1388, 1381, 1382, 1094, 928, 929, 926, 1701, 1703, 1704,
	2142, 2143, 2144, 2145, 777, 779, 2619, 2933, 2958, 1056,
	788, 2888, 2889, 1914, 2892, 2403, 2729, 1913, 1292, 910,
	889, 2491, 2610, 2139, 1006, 920, 751, 2761, 1007, 1157,
	2762, 2219, 1156, 459, 459, 2614, 455, 455, 457, 457,
	458, 458, 780, 896, 2554, 2756, 1686, 2337, 1092, 456,
	456, 887, 886, 878, 879, 2113, 1686, 1091, 1064, 433,
	1067, 1109, 1108, 1686, 1090, 887, 886, 2653, 922, 2717,
	2718, 2719, 2721, 2720, 2588, 777, 779, 3010, 1037, 2632,
	2633, 2980, 2777, 2764, 705, 3004, 866, 804, 891, 892,
	2785, 804, 804, 2381, 804, 895, 3016, 880, 804, 1713,
	1069, 461, 2038, 472, 927, 2810, 461, 1145, 804, 979,
	1970, 1687, 1889, 2001, 2763, 2882, 1699, 1214, 1903, 1116,
	1117, 1115, 1689, 2784, 471, 1116, 1117, 2934, 925, 1902,
	438, 903, 1141, 2273, 2275, 1074, 2336, 426, 426, 1078,
	1892, 1077, 1076, 1106, 1112, 656, 426, 426, 467, 2391,
	1172, 1172, 1700, 438, 2132, 1081, 975, 976, 977, 978,
	51, 2681, 129, 129, 2402, 51, 129, 2046, 129, 129,
	463, 1067, 433, 129, 1202, 1202, 129, 2412, 129, 1588,
	1785, 1784, 2757, 2929, 2769, 176, 2821, 1201, 1201, 1015,
	1016, 1318, 2334, 129, 426, 2116, 1179, 897, 129, 775,
	2686, 2728, 1783, 2404, 1062, 1170, 1170, 2136, 2137, 1268,
	1269, 3003, 1174, 1458, 902, 697, 1093, 1578, 1580, 669,
	1287, 1459, 2135, 1103, 1070, 1071, 1072, 1073, 1782, 1075,
	1702, 1121, 1122, 1079, 1124, 1125, 1126, 1457, 1220, 670,
	745, 1065, 1241, 673, 1244, 745, 1888, 2615, 2616, 1252,
	2612, 1890, 2931, 2932, 2611, 2702, 1166, 1167, 1792, 2220,
	2222, 2223, 2224, 2221, 1137, 2344, 2343, 3015, 1893, 1273,
	1101, 1102, 1042, 1060, 1061, 1044, 699, 700, 701, 2959,
	1485, 1793, 1794, 1172, 1908, 1172, 875, 1178, 3022, 2419,
	657, 2160, 1258, 2274, 672, 3021, 2436, 1744, 675, 674,
	1743, 1272, 1891, 1950, 1152, 1154, 1288, 900, 1223, 1271,
	1226, 1227, 938, 1164, 1165, 1140, 3012, 2994, 1083, 2989,
	2757, 1485, 1097, 747, 2758, 2983, 746, 2982, 747, 2507,
	903, 746, 1311, 1312, 1313, 1314, 1315, 1839, 1232, 1233,
	1132, 1133, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1195, 1774, 1248, 938, 1349, 1350,
	1255, 1215, 1306, 1120, 938, 1358, 1123, 754, 2161, 938,
	2963, 460, 940, 941, 942, 939, 1356, 1357, 1407, 901,
	901, 1282, 1391, 780, 1155, 3013, 1694, 780, 2990, 2940,
	1401, 1180, 2902, 443, 1694, 2857, 1694, 1096, 1100, 1100,
	1100, 1416, 1951, 1397, 1398, 1399, 1203, 1303, 1237, 1194,
	1240, 1951, 1204, 1193, 2161, 2420, 1413, 660, 2363, 1414,
	1096, 1096, 2852, 1098, 2804, 940, 941, 942, 939, 2803,
	2800, 1421, 1422, 1443, 1284, 1838, 1620, 1447, 2019, 1694,
	1450, 2503, 1321, 2507, 868, 2977, 1289, 2799, 1300, 438,
	2584, 1467, 1172, 1471, 1770, 1473, 1474, 2798, 2941, 1439,
	438, 2903, 459, 705, 2773, 455, 1483, 457, 2797, 458,
	1172, 1773, 1281, 2037, 1951, 1278, 1141, 1277, 456, 2772,
	1442, 454, 1264, 657, 2122, 2634, 1260, 660, 2119, 555,
	112, 2773, 1406, 2805, 1280, 112, 1279, 1276, 1857, 2773,
	1506, 795, 800, 801, 1389, 1390, 2493, 1393, 1512, 1512,
	1297, 1141, 1259, 1141, 1141, 1408, 2773, 438, 1466, 1467,
	1467, 1510, 2268, 1172, 1556, 1568, 2773, 2024, 1415, 1302,
	1417, 1982, 1685, 2095, 2051, 1569, 938, 2773, 1499, 426,
	2035, 1172, 1472, 1340, 444, 1876, 1775, 112, 2773, 2028,
	1748, 1676, 1599, 1505, 1982, 1443, 1508, 1509, 1082, 1618,
	1443, 1443, 1352, 1158, 2026, 2942, 438, 1467, 1172, 903,
	1610, 438, 438, 1613, 2574, 2494, 2021, 2599, 1616, 2014,
	2012, 2437, 1622, 1464, 2290, 2163, 1551, 1552, 2040, 176,
	2010, 1951, 176, 176, 1478, 176, 1491, 1492, 1347, 1348,
	1392, 1630, 938, 938, 1633, 1598, 1038, 1636, 2008, 1857,
	1638, 2039, 1856, 1501, 1502, 1596, 1597, 1470, 2022, 1475,
	1476, 1477, 1418, 1771, 2031, 1495, 1582, 1497, 1498, 1873,
	1407, 1407, 1664, 2027, 1607, 1488, 1739, 1407, 1407, 1440,
	1503, 1574, 1671, 1576, 955, 2022, 778, 1513, 2015, 2013,
	112, 1518, 1631, 1594, 1595, 1634, 1635, 1609, 1637, 2009,
	1724, 1611, 1612, 1589, 1675, 112, 1483, 112, 1625, 1504,
	1172, 1683, 1514, 797, 798, 799, 2441, 2009, 1463, 1480,
	1479, 1857, 1261, 1446, 1752, 1751, 1742, 984, 1470, 1733,
	1732, 2328, 1770, 1490, 1515, 1496, 1731, 1516, 1517, 888,
	1606, 868, 1693, 1265, 863, 1606, 1606, 1962, 861, 1097,
	1677, 1396, 1395, 1665, 1723, 2972, 1419, 1420, 1486, 1487,
	1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 2067, 1300, 1710, 1711, 671, 1557, 1555, 2000,
	940, 941, 942, 939, 1659, 1573, 1716, 1575, 2840, 1720,
	1583, 1659, 1706, 938, 938, 938, 460, 1160, 938, 938,
	860, 857, 858, 859, 1162, 938, 2072, 780, 2071, 2070,
	2068, 1694, 1266, 1096, 780, 1163, 868, 2703, 1608, 958,
	959, 960, 961, 962, 955, 2960, 1722, 1500, 1730, 2591,
	1905, 1628, 2841, 1626, 2589, 1087, 1737, 2508, 1100, 1088,
	777, 779, 2498, 1629, 2495, 1427, 2240, 777, 779, 2115,
	1098, 2025, 1972, 1645, 1750, 2532, 877, 1753, 1754, 1755,
	1604, 2704, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1749, 2058, 2069, 2592, 1668, 1994, 2432, 1756, 2590, 1666,
	1159, 512, 1355, 875, 1832, 1674, 1355, 459, 1719, 1207,
	455, 1629, 457, 2292, 458, 676, 438, 438, 438, 780,
	1854, 942, 939, 456, 1678, 1465, 2874, 1673, 939, 2622,
	1861, 1141, 2621, 1136, 2309, 1138, 2195, 1142, 1143, 1858,
	2194, 1866, 940, 941, 942, 939, 1714, 940, 941, 942,
	939, 2533, 777, 779, 2189, 1141, 2433, 2187, 2535, 1669,
	1705, 1670, 875, 1897, 2603, 1346, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 2998, 2986, 1707, 1197, 2957, 1800,
	1340, 1343, 1345, 1342, 1718, 1344, 1863, 1864, 956, 957,
	958, 959, 960, 961, 962, 955, 1867, 1868, 2948, 2943,
	2434, 112, 112, 778, 1955, 1955, 1568, 1955, 954, 953,
	963, 964, 956, 957, 958, 959, 960, 961, 962, 955,
	2073, 2074, 2683, 2956, 2893, 426, 426, 1746, 1443, 2572,
	1443, 2230, 2865, 875, 1708, 1709, 2228, 1833, 1882, 1172,
	438, 2842, 940, 941, 942, 939, 2788, 2226, 1443, 1443,
	1846, 1847, 1848, 2004, 2741, 875, 433, 507, 2709, 1202,
	509, 1568, 2684, 2706, 1989, 508, 1991, 2216, 1869, 2573,
	176, 2229, 1201, 2844, 971, 1865, 2227, 1766, 1768, 1769,
	1907, 1959, 2705, 1968, 1957, 1969, 1961, 2225, 2593, 2571,
	1870, 1875, 2410, 1871, 1976, 1786, 940, 941, 942, 939,
	1840, 2324, 1411, 1973, 1974, 1006, 1878, 2215, 2304, 1007,
	2303, 2214, 1986, 1412, 2213, 1862, 2033, 2212, 2209, 1683,
	2203, 1993, 2200, 2199, 1872, 1648, 1172, 1647, 1172, 1646,
	1172, 1800, 1642, 1995, 1641, 875, 1988, 1881, 1874, 1262,
	1055, 1880, 1906, 780, 1909, 1910, 1911, 1912, 2243, 2396,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1172, 2076, 2918, 2663, 1935, 940,
	941, 942, 939, 2059, 1178, 2914, 777, 779, 2060, 2878,
	2083, 2077, 2078, 2043, 2808, 1172, 2770, 1963, 2742, 2080,
	2081, 2693, 1152, 1154, 2661, 2085, 940, 941, 942, 939,
	2659, 2638, 2086, 2636, 1977, 1996, 2235, 2605, 2570, 1045,
	2082, 2047, 2569, 940, 941, 942, 939, 2566, 2559, 1170,
	1987, 1984, 1208, 2502, 1443, 2075, 2833, 2108, 2109, 1450,
	2356, 2790, 875, 2087, 940, 941, 942, 939, 1985, 2500,
	1170, 2489, 1207, 2488, 1727, 2388, 2084, 2049, 2387, 940,
	941, 942, 939, 1100, 543, 552, 2044, 2386, 1781, 2062,
	544, 2335, 551, 545, 549, 548, 546, 547, 2302, 2626,
	2669, 2106, 2056, 2030, 2282, 2898, 2355, 2034, 2036, 1172,
	2217, 2754, 2140, 2210, 2041, 2206, 1467, 940, 941, 942,
	939, 1300, 2159, 940, 941, 942, 939, 2205, 2165, 940,
	941, 942, 939, 2586, 2204, 2091, 2052, 2053, 2120, 2668,
	2096, 602, 601, 2585, 2174, 553, 1772, 1650, 2066, 1644,
	875, 940, 941, 942, 939, 1181, 1453, 1452, 2186, 1263,
	444, 1014, 940, 941, 942, 939, 2191, 2192, 2123, 2193,
	1010, 1777, 1778, 2196, 1512, 1009, 985, 550, 1721, 1227,
	864, 668, 159, 2150, 112, 151, 128, 2583, 1955, 2558,
	2168, 2631, 2547, 2538, 2170, 2537, 2526, 2525, 2231, 2107,
	2110, 2442, 2361, 2354, 426, 1232, 1233, 2346, 1467, 875,
	1568, 1568, 1568, 1568, 940, 941, 942, 939, 2156, 2166,
	2149, 875, 1568, 2341, 2287, 1955, 1882, 940, 941, 942,
	939, 2121, 2118, 2011, 2055, 2007, 940, 941, 942, 939,
	156, 1172, 2184, 2006, 1757, 112, 2184, 1747, 1745, 112,
	2181, 1741, 1740, 438, 438, 2138, 2157, 2167, 1738, 1729,
	112, 1726, 1725, 2158, 1649, 2171, 2172, 176, 3011, 1237,
	112, 1240, 176, 8, 1470, 7, 1438, 1437, 2164, 1436,
	1410, 2129, 1409, 1400, 2296, 2251, 2298, 2264, 2173, 159,
	2176, 1184, 1182, 1407, 2180, 1407, 2182, 2251, 2319, 2188,
	2971, 2965, 2323, 2955, 1443, 2952, 2950, 2864, 1172, 1443,
	2806, 2330, 2198, 940, 941, 942, 939, 2211, 1004, 2185,
	963, 964, 956, 957, 958, 959, 960, 961, 962, 955,
	2293, 1222, 2725, 2713, 2710, 2297, 2236, 2647, 1735, 2241,
	2645, 2629, 2628, 2625, 2340, 2624, 2618, 156, 2263, 2265,
	2578, 1442, 2201, 2202, 2267, 2266, 2318, 1231, 2207, 2208,
	657, 2252, 2253, 2254, 2255, 1224, 2360, 2280, 2283, 2276,
	1085, 2239, 2316, 2232, 2190, 2153, 2237, 2152, 2322, 2349,
	2151, 2351, 1236, 1239, 2291, 1228, 2295, 2285, 2286, 2105,
	2020, 2294, 1734, 875, 1971, 1929, 2332, 2327, 1855, 1341,
	2399, 156, 2314, 1614, 1462, 1461, 2312, 2315, 1285, 2321,
	2414, 2310, 438, 1251, 2317, 940, 941, 942, 939, 1229,
	1039, 1036, 875, 875, 875, 1035, 1034, 1033, 2338, 780,
	2326, 1568, 1854, 1032, 2440, 1031, 780, 2345, 2556, 2169,
	2444, 2339, 1030, 1029, 2347, 2348, 2352, 2353, 1028, 1027,
	875, 1026, 1025, 1024, 2474, 1023, 2477, 1022, 2477, 2477,
	2350, 940, 941, 942, 939, 2482, 1021, 1020, 1019, 1800,
	1018, 2366, 1172, 1172, 2481, 2367, 2368, 2369, 2370, 1017,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2390, 2385,
	1013, 2382, 2443, 2389, 2392, 1012, 2445, 2446, 1882, 1882,
	1882, 1011, 1008, 438, 1001, 2394, 2438, 1000, 2399, 998,
	997, 2415, 996, 2417, 995, 994, 993, 1467, 1467, 2428,
	2429, 992, 2435, 2149, 1567, 2473, 2449, 1170, 1170, 2472,
	2439, 2418, 780, 2486, 2487, 946, 947, 948, 949, 950,
	951, 952, 944, 991, 2450, 990, 2416, 989, 988, 987,
	2478, 2479, 2359, 983, 982, 905, 2448, 862, 2511, 2512,
	1860, 2076, 1843, 893, 2896, 2848, 2514, 2141, 2447, 1983,
	2536, 1652, 904, 97, 2506, 940, 941, 942, 939, 2260,
	2258, 2517, 2516, 780, 2261, 2259, 2257, 2358, 112, 2518,
	2256, 112, 112, 2492, 112, 2997, 435, 2497, 2496, 2501,
	2987, 2029, 2504, 2505, 2023, 2112, 2650, 438, 2649, 2515,
	940, 941, 942, 939, 661, 662, 663, 664, 2499, 1550,
	2048, 53, 2480, 2262, 2519, 1947, 1948, 660, 440, 778,
	2522, 2523, 2524, 2393, 2018, 52, 778, 1606, 1216, 1041,
	2555, 2357, 1245, 2648, 2531, 112, 1834, 2557, 439, 2104,
	954, 953, 963, 964, 956, 957, 958, 959, 960, 961,
	962, 955, 2548, 2103, 940, 941, 942, 939, 1615, 2549,
	2054, 693, 940, 941, 942, 939, 441, 1183, 2178, 2551,
	2179, 2383, 2384, 899, 2550, 1715, 940, 941, 942, 939,
	442, 2828, 2582, 2560, 954, 953, 963, 964, 956, 957,
	958, 959, 960, 961, 962, 955, 1955, 1568, 2596, 954,
	953, 963, 964, 956, 957, 958, 959, 960, 961, 962,
	955, 971, 2102, 1777, 1778, 2175, 2124, 1850, 1481, 2101,
	1460, 1172, 2905, 2562, 1932, 2604, 2565, 1396, 1395, 1053,
	1054, 2553, 438, 1051, 1052, 940, 941, 942, 939, 1049,
	1050, 2474, 940, 941, 942, 939, 1047, 1048, 2598, 2564,
	2577, 1554, 1135, 2597, 2100, 1134, 931, 2521, 1981, 2600,
	1672, 1089, 2601, 2966, 1467, 1043, 2886, 2871, 875, 2869,
	2836, 2818, 2595, 1443, 2817, 2594, 2607, 940, 941, 942,
	939, 2815, 1443, 2807, 2736, 2644, 2602, 695, 2646, 690,
	2472, 680, 2735, 2660, 176, 2561, 2545, 2544, 692, 691,
	2529, 1046, 2651, 661, 662, 663, 664, 875, 660, 2528,
	2641, 2099, 2630, 2289, 1485, 678, 660, 2900, 2899, 684,
	2652, 2325, 1845, 1728, 890, 2635, 2899, 2637, 2639, 2643,
	2900, 2640, 2620, 2642, 940, 941, 942, 939, 2546, 875,
	1172, 1172, 2284, 1104, 2251, 875, 2696, 163, 3, 2696,
	61, 2, 2677, 2579, 2580, 2581, 1149, 2654, 1964, 1600,
	689, 1176, 1, 1451, 688, 665, 2623, 2269, 2270, 2520,
	677, 2272, 1690, 2664, 683, 1930, 1835, 2413, 1080, 2678,
	698, 1402, 1270, 2251, 794, 875, 875, 884, 1267, 875,
	875, 681, 883, 881, 2699, 1170, 2607, 2700, 2697, 1353,
	557, 2691, 1655, 2233, 2598, 2692, 1483, 2732, 2733, 2707,
	2708, 2904, 679, 2098, 2937, 2863, 2737, 2738, 2714, 2715,
	2907, 1882, 2723, 2724, 1283, 541, 696, 2711, 2809, 2097,
	2746, 2670, 2867, 2722, 2748, 1958, 940, 941, 942, 939,
	2767, 2666, 2094, 2730, 1695, 936, 2093, 2311, 719, 2760,
	2731, 682, 940, 941, 942, 939, 2092, 593, 2779, 568,
	999, 1253, 1246, 2364, 2775, 940, 941, 942, 939, 940,
	941, 942, 939, 2755, 875, 2765, 2759, 2088, 796, 940,
	941, 942, 939, 567, 2791, 2576, 875, 2134, 2774, 2782,
	1567, 489, 2079, 488, 495, 485, 2781, 2780, 687, 112,
	940, 941, 942, 939, 2792, 492, 493, 2796, 494, 498,
	793, 2789, 480, 720, 1639, 940, 941, 942, 939, 2801,
	2969, 2057, 503, 694, 1943, 1946, 1947, 1948, 1944, 2744,
	1945, 1949, 2823, 1217, 875, 1238, 1221, 2701, 986, 2587,
	2814, 2837, 2812, 2430, 940, 941, 942, 939, 2154, 3007,
	2996, 2967, 507, 2978, 2964, 509, 2891, 2992, 2922, 2832,
	508, 2953, 2673, 2831, 2671, 2672, 2858, 2861, 2946, 2838,
	954, 953, 963, 964, 956, 957, 958, 959, 960, 961,
	962, 955, 2887, 2853, 2854, 2855, 2856, 2862, 478, 1579,
	1351, 2843, 424, 761, 2726, 2870, 1651, 2872, 2873, 2868,
	2866, 954, 953, 963, 964, 956, 957, 958, 959, 960,
	961, 962, 955, 940, 941, 942, 939, 479, 2885, 1859,
	2879, 2712, 685, 1842, 686, 2911, 2147, 2894, 2146, 2897,
	2895, 1938, 1322, 945, 1339, 2379, 2380, 2910, 2901, 980,
	517, 1717, 2131, 2465, 2281, 60, 59, 875, 58, 57,
	2823, 2915, 1621, 2916, 184, 1943, 1946, 1947, 1948, 1944,
	559, 1945, 1949, 183, 2936, 2860, 2925, 2927, 2909, 539,
	538, 537, 536, 535, 1942, 1940, 2939, 2935, 1939, 1563,
	2944, 1562, 875, 1619, 2483, 2197, 1901, 1894, 1519, 2945,
	481, 483, 482, 2949, 2362, 2951, 2845, 2793, 2794, 2617,
	487, 2218, 2911, 2962, 2613, 2609, 2490, 2695, 2451, 2452,
	2458, 875, 491, 875, 2910, 1849, 2961, 819, 2968, 506,
	2970, 815, 817, 2920, 2973, 112, 484, 818, 816, 2065,
	2939, 2974, 875, 2061, 2976, 1877, 2981, 2423, 2988, 2985,
	1791, 2991, 1790, 1788, 954, 953, 963, 964, 956, 957,
	958, 959, 960, 961, 962, 955, 2995, 1787, 1306, 3002,
	1063, 2766, 2563, 3006, 3005, 1798, 1796, 2513, 2509, 1663,
	3014, 1448, 2111, 1564, 1560, 1844, 3019, 3002, 3018, 88,
	87, 95, 3006, 140, 47, 168, 167, 1306, 170, 1306,
	954, 953, 963, 964, 956, 957, 958, 959, 960, 961,
	962, 955, 3017, 169, 166, 1997, 1998, 3020, 1306, 1567,
	1567, 1567, 1567, 165, 1205, 2917, 164, 2698, 654, 38,
	37, 1567, 33, 12, 11, 486, 490, 496, 34, 497,
	499, 21, 22, 500, 501, 502, 20, 1274, 504, 505,
	19, 25, 31, 30, 358, 575, 105, 104, 29, 103,
	102, 101, 100, 99, 28, 321, 18, 42, 41, 40,
	9, 94, 92, 27, 93, 90, 112, 91, 531, 89,
	72, 112, 266, 71, 70, 291, 85, 84, 83, 82,
	566, 81, 80, 350, 305, 78, 79, 718, 69, 625,
	633, 112, 68, 67, 66, 65, 76, 86, 112, 77,
	75, 524, 74, 73, 556, 602, 601, 543, 552, 64,
	63, 247, 182, 544, 62, 551, 545, 549, 548, 546,
	547, 966, 617, 970, 125, 126, 124, 123, 122, 515,
	528, 121, 532, 120, 119, 43, 44, 45, 46, 967,
	969, 965, 136, 968, 954, 953, 963, 964, 956, 957,
	958, 959, 960, 961, 962, 955, 525, 526, 135, 137,
	139, 141, 576, 138, 527, 133, 131, 571, 553, 554,
	134, 132, 130, 55, 238, 355, 371, 248, 346, 384,
	253, 353, 243, 320, 343, 17, 24, 240, 369, 352,
	302, 285, 286, 239, 112, 338, 264, 277, 261, 318,
	550, 574, 578, 260, 639, 572, 379, 242, 4, 378,
	317, 365, 370, 303, 297, 241, 367, 301, 296, 289,
	268, 640, 281, 329, 295, 330, 282, 307, 306, 308,
	1567, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 569,
	0, 0, 0, 381, 0, 0, 623, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 573, 0, 341,
	323, 636, 516, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 233, 357, 263, 304, 244, 246, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 254, 340, 255, 279, 256, 234, 347, 257,
	236, 327, 364, 0, 275, 336, 300, 237, 299, 328,
	363, 362, 245, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 1404, 1403,
	1405, 393, 273, 230, 231, 430, 621, 319, 0, 0,
	635, 616, 618, 619, 622, 626, 627, 628, 629, 630,
	632, 634, 638, 429, 0, 0, 0, 0, 0, 428,
	325, 0, 344, 953, 963, 964, 956, 957, 958, 959,
	960, 961, 962, 955, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 235, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 577, 309, 310, 311, 312, 624, 0,
	252, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 251, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 249, 373,
	349, 298, 0, 0, 646, 620, 645, 647, 648, 644,
	649, 650, 631, 534, 0, 581, 642, 641, 643, 0,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 292, 0, 333, 271, 609, 586,
	587, 588, 533, 589, 584, 585, 610, 579, 606, 607,
	558, 582, 590, 605, 591, 608, 611, 612, 651, 652,
	597, 653, 594, 613, 604, 603, 592, 580, 614, 615,
	565, 560, 595, 596, 583, 598, 599, 600, 561, 562,
	563, 564, 0, 358, 575, 389, 390, 391, 413, 375,
	0, 427, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 423, 0, 0, 531, 0, 0,
	0, 266, 1444, 112, 291, 0, 0, 0, 0, 566,
	0, 0, 350, 305, 0, 0, 0, 0, 625, 633,
	0, 0, 0, 0, 0, 0, 0, 1591, 0, 0,
	524, 0, 0, 556, 602, 601, 543, 552, 0, 0,
	247, 182, 544, 0, 551, 545, 549, 548, 546, 547,
	0, 617, 0, 0, 0, 0, 0, 0, 515, 528,
	0, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 0, 0, 0,
	0, 576, 0, 527, 0, 0, 1592, 553, 554, 0,
	0, 0, 0, 238, 355, 371, 248, 346, 384, 253,
	353, 243, 320, 343, 0, 0, 240, 369, 352, 302,
	285, 286, 239, 0, 338, 264, 277, 261, 318, 550,
	574, 578, 260, 639, 572, 379, 242, 0, 378, 317,
	365, 370, 303, 297, 241, 367, 301, 296, 289, 268,
	640, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 381, 0, 0, 623, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 573, 0, 341, 323,
	636, 516, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 233, 357, 263, 304, 244, 246, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 254, 340, 255, 279, 256, 234, 347, 257, 236,
	327, 364, 0, 275, 336, 300, 237, 299, 328, 363,
	362, 245, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 230, 231, 430, 621, 319, 0, 0, 635,
	616, 618, 619, 622, 626, 627, 628, 629, 630, 632,
	634, 638, 429, 0, 0, 0, 0, 0, 428, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 235, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 577, 309, 310, 311, 312, 624, 0, 252,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 251, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 249, 373, 349,
	298, 0, 0, 646, 620, 645, 647, 648, 644, 649,
	650, 631, 534, 0, 581, 642, 641, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 292, 0, 333, 271, 609, 586, 587,
	588, 533, 589, 584, 585, 610, 579, 606, 607, 558,
	582, 590, 605, 591, 608, 611, 612, 651, 652, 597,
	653, 594, 613, 604, 603, 592, 580, 614, 615, 565,
	560, 595, 596, 583, 598, 599, 600, 561, 562, 563,
	564, 159, 358, 575, 389, 390, 391, 413, 375, 0,
	427, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 423, 0, 0, 531, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 974, 0,
	0, 350, 305, 0, 0, 0, 0, 625, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 524,
	0, 0, 556, 602, 601, 543, 552, 0, 0, 247,
	182, 544, 0, 551, 545, 549, 548, 546, 547, 0,
	617, 0, 0, 0, 0, 0, 0, 515, 528, 0,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 525, 526, 0, 0, 0, 0,
	576, 0, 527, 0, 0, 571, 553, 554, 0, 0,
	0, 0, 238, 355, 371, 248, 346, 384, 253, 353,
	243, 320, 343, 0, 0, 240, 369, 352, 302, 285,
	286, 239, 0, 338, 264, 277, 261, 318, 550, 574,
	578, 260, 639, 572, 379, 242, 0, 378, 317, 365,
	370, 303, 297, 241, 367, 301, 296, 289, 268, 640,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 381, 0, 0, 623, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 573, 0, 341, 323, 636,
	516, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 233, 357, 263, 304, 244, 246, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	254, 340, 255, 279, 256, 234, 347, 257, 236, 327,
	364, 0, 275, 336, 300, 237, 299, 328, 363, 362,
	245, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 230, 231, 430, 621, 319, 0, 0, 635, 616,
	618, 619, 622, 626, 627, 628, 629, 630, 632, 634,
	638, 429, 0, 0, 0, 0, 0, 428, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 235, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 577, 309, 310, 311, 312, 624, 0, 252, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 251, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 249, 373, 349, 298,
	0, 0, 646, 620, 645, 647, 648, 644, 649, 650,
	631, 534, 0, 581, 642, 641, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 292, 129, 333, 271, 609, 586, 587, 588,
	533, 589, 584, 585, 610, 579, 606, 607, 558, 582,
	590, 605, 591, 608, 611, 612, 651, 652, 597, 653,
	594, 613, 604, 603, 592, 580, 614, 615, 565, 560,
	595, 596, 583, 598, 599, 600, 561, 562, 563, 564,
	358, 575, 0, 389, 390, 391, 413, 375, 0, 427,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 423, 0, 531, 0, 0, 0, 266, 2975,
	0, 291, 0, 0, 0, 0, 566, 0, 0, 350,
	305, 0, 0, 0, 0, 625, 633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 0, 0,
	556, 602, 601, 543, 552, 0, 0, 247, 182, 544,
	0, 551, 545, 549, 548, 546, 547, 0, 617, 0,
	0, 0, 0, 0, 0, 515, 528, 0, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 526, 0, 0, 0, 0, 576, 0,
	527, 0, 0, 571, 553, 554, 0, 0, 0, 0,
	238, 355, 371, 248, 346, 384, 253, 353, 243, 320,
	343, 0, 0, 240, 369, 352, 302, 285, 286, 239,
	0, 338, 264, 277, 261, 318, 550, 574, 578, 260,
	639, 572, 379, 242, 0, 378, 317, 365, 370, 303,
	297, 241, 367, 301, 296, 289, 268, 640, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 381,
	0, 0, 623, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 573, 0, 341, 323, 636, 516, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 233,
	357, 263, 304, 244, 246, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 254, 340,
	255, 279, 256, 234, 347, 257, 236, 327, 364, 0,
	275, 336, 300, 237, 299, 328, 363, 362, 245, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 230,
	231, 430, 621, 319, 0, 0, 635, 616, 618, 619,
	622, 626, 627, 628, 629, 630, 632, 634, 638, 429,
	0, 0, 0, 0, 0, 428, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 235,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 577,
	309, 310, 311, 312, 624, 0, 252, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 251, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 249, 373, 349, 298, 0, 0,
	646, 620, 645, 647, 648, 644, 649, 650, 631, 534,
	0, 581, 642, 641, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	292, 0, 333, 271, 609, 586, 587, 588, 533, 589,
	584, 585, 610, 579, 606, 607, 558, 582, 590, 605,
	591, 608, 611, 612, 651, 652, 597, 653, 594, 613,
	604, 603, 592, 580, 614, 615, 565, 560, 595, 596,
	583, 598, 599, 600, 561, 562, 563, 564, 358, 575,
	0, 389, 390, 391, 413, 375, 0, 427, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	423, 0, 531, 0, 0, 0, 266, 1444, 0, 291,
	0, 0, 0, 0, 566, 0, 0, 350, 305, 0,
	0, 0, 0, 625, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 0, 0, 556, 602,
	601, 543, 552, 0, 0, 247, 182, 544, 0, 551,
	545, 549, 548, 546, 547, 0, 617, 0, 0, 0,
	0, 0, 0, 515, 528, 0, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 0, 0, 0, 0, 576, 0, 527, 0,
	0, 571, 553, 554, 0, 0, 0, 0, 238, 355,
	371, 248, 346, 384, 253, 353, 243, 320, 343, 0,
	0, 240, 369, 352, 302, 285, 286, 239, 0, 338,
	264, 277, 261, 318, 550, 574, 578, 260, 639, 572,
	379, 242, 0, 378, 317, 365, 370, 303, 297, 241,
	367, 301, 296, 289, 268, 640, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 569, 0, 0, 0, 381, 0, 0,
	623, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 573, 0, 341, 323, 636, 516, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 233, 357, 263,
	304, 244, 246, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 254, 340, 255, 279,
	256, 234, 347, 257, 236, 327, 364, 0, 275, 336,
	300, 237, 299, 328, 363, 362, 245, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 230, 231, 430,
	621, 319, 0, 0, 635, 616, 618, 619, 622, 626,
	627, 628, 629, 630, 632, 634, 638, 429, 0, 0,
	0, 0, 0, 428, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 235, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 577, 309, 310,
	311, 312, 624, 0, 252, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 251,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 249, 373, 349, 298, 0, 0, 646, 620,
	645, 647, 648, 644, 649, 650, 631, 534, 0, 581,
	642, 641, 643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 292, 0,
	333, 271, 609, 586, 587, 588, 533, 589, 584, 585,
	610, 579, 606, 607, 558, 582, 590, 605, 591, 608,
	611, 612, 651, 652, 597, 653, 594, 613, 604, 603,
	592, 580, 614, 615, 565, 560, 595, 596, 583, 598,
	599, 600, 561, 562, 563, 564, 358, 575, 0, 389,
	390, 391, 413, 375, 0, 427, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 423, 0,
	531, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 566, 0, 0, 350, 305, 0, 0, 0,
	0, 625, 633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 524, 0, 0, 556, 602, 601, 543,
	552, 0, 0, 247, 182, 544, 0, 551, 545, 549,
	548, 546, 547, 0, 617, 0, 0, 0, 0, 0,
	0, 515, 528, 0, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	1200, 0, 0, 0, 576, 0, 527, 0, 0, 571,
	553, 554, 0, 0, 0, 0, 238, 355, 371, 248,
	346, 384, 253, 353, 243, 320, 343, 0, 0, 240,
	369, 352, 302, 285, 286, 239, 0, 338, 264, 277,
	261, 318, 550, 574, 578, 260, 639, 572, 379, 242,
	0, 378, 317, 365, 370, 303, 297, 241, 367, 301,
	296, 289, 268, 640, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 381, 0, 0, 623, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 573,
	0, 341, 323, 636, 516, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 233, 357, 263, 304, 244,
	246, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 254, 340, 255, 279, 256, 234,
	347, 257, 236, 327, 364, 0, 275, 336, 300, 237,
	299, 328, 363, 362, 245, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 230, 231, 430, 621, 319,
	0, 0, 635, 616, 618, 619, 622, 626, 627, 628,
	629, 630, 632, 634, 638, 429, 0, 0, 0, 0,
	0, 428, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 235, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 577, 309, 310, 311, 312,
	624, 0, 252, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 251, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	249, 373, 349, 298, 0, 0, 646, 620, 645, 647,
	648, 644, 649, 650, 631, 534, 0, 581, 642, 641,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 292, 0, 333, 271,
	609, 586, 587, 588, 533, 589, 584, 585, 610, 579,
	606, 607, 558, 582, 590, 605, 591, 608, 611, 612,
	651, 652, 597, 653, 594, 613, 604, 603, 592, 580,
	614, 615, 565, 560, 595, 596, 583, 598, 599, 600,
	561, 562, 563, 564, 0, 0, 0, 389, 390, 391,
	413, 375, 0, 427, 0, 0, 358, 575, 0, 0,
	1736, 0, 0, 0, 0, 431, 423, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 566, 0, 0, 350, 305, 0, 0, 0,
	0, 625, 633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 524, 0, 0, 556, 602, 601, 543,
	552, 0, 0, 247, 182, 544, 0, 551, 545, 549,
	548, 546, 547, 0, 617, 0, 0, 0, 0, 0,
	0, 515, 528, 0, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	0, 0, 0, 0, 576, 0, 527, 0, 0, 571,
	553, 554, 0, 0, 0, 0, 238, 355, 371, 248,
	346, 384, 253, 353, 243, 320, 343, 0, 0, 240,
	369, 352, 302, 285, 286, 239, 0, 338, 264, 277,
	261, 318, 550, 574, 578, 260, 639, 572, 379, 242,
	0, 378, 317, 365, 370, 303, 297, 241, 367, 301,
	296, 289, 268, 640, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 381, 0, 0, 623, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 573,
	0, 341, 323, 636, 516, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 233, 357, 263, 304, 244,
	246, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 254, 340, 255, 279, 256, 234,
	347, 257, 236, 327, 364, 0, 275, 336, 300, 237,
	299, 328, 363, 362, 245, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 230, 231, 430, 621, 319,
	0, 0, 635, 616, 618, 619, 622, 626, 627, 628,
	629, 630, 632, 634, 638, 429, 0, 0, 0, 0,
	0, 428, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 235, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 577, 309, 310, 311, 312,
	624, 0, 252, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 251, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	249, 373, 349, 298, 0, 0, 646, 620, 645, 647,
	648, 644, 649, 650, 631, 534, 0, 581, 642, 641,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 292, 0, 333, 271,
	609, 586, 587, 588, 533, 589, 584, 585, 610, 579,
	606, 607, 558, 582, 590, 605, 591, 608, 611, 612,
	651, 652, 597, 653, 594, 613, 604, 603, 592, 580,
	614, 615, 565, 560, 595, 596, 583, 598, 599, 600,
	561, 562, 563, 564, 358, 575, 0, 389, 390, 391,
	413, 375, 0, 427, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 423, 0, 531, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	566, 0, 0, 350, 305, 0, 0, 0, 0, 625,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 556, 602, 601, 543, 552, 0,
	0, 247, 182, 544, 0, 551, 545, 549, 548, 546,
	547, 0, 617, 0, 0, 0, 0, 0, 0, 515,
	528, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 526, 0, 0,
	0, 0, 576, 0, 527, 0, 0, 571, 553, 554,
	0, 0, 0, 0, 238, 355, 371, 248, 346, 384,
	253, 353, 243, 320, 343, 0, 0, 240, 369, 352,
	302, 285, 286, 239, 0, 338, 264, 277, 261, 318,
	550, 574, 578, 260, 639, 572, 379, 242, 0, 378,
	317, 365, 370, 303, 297, 241, 367, 301, 296, 289,
	268, 640, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 381, 0, 0, 623, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 573, 0, 341,
	323, 636, 516, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 233, 357, 263, 304, 244, 246, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 254, 340, 255, 279, 256, 234, 347, 257,
	236, 327, 364, 0, 275, 336, 300, 237, 299, 328,
	363, 362, 245, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 230, 231, 430, 621, 319, 0, 0,
	635, 616, 618, 619, 622, 626, 627, 628, 629, 630,
	632, 634, 638, 429, 0, 0, 0, 0, 0, 428,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 235, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 577, 309, 310, 311, 312, 624, 0,
	252, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 251, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 249, 373,
	349, 298, 0, 0, 646, 620, 645, 647, 648, 644,
	649, 650, 631, 534, 0, 581, 642, 641, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 292, 0, 333, 271, 609, 586,
	587, 588, 533, 589, 584, 585, 610, 579, 606, 607,
	558, 582, 590, 605, 591, 608, 611, 612, 651, 652,
	597, 653, 594, 613, 604, 603, 592, 580, 614, 615,
	565, 560, 595, 596, 583, 598, 599, 600, 561, 562,
	563, 564, 358, 575, 0, 389, 390, 391, 413, 375,
	0, 427, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 431, 423, 0, 531, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 566, 0,
	0, 350, 305, 0, 0, 0, 0, 625, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 524,
	0, 0, 556, 602, 601, 543, 552, 0, 0, 247,
	182, 544, 0, 551, 545, 549, 548, 546, 547, 0,
	617, 0, 0, 0, 0, 0, 0, 0, 528, 0,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 525, 526, 0, 0, 0, 0,
	576, 0, 527, 0, 0, 571, 553, 554, 0, 0,
	0, 0, 238, 355, 371, 248, 346, 384, 253, 353,
	243, 320, 343, 0, 0, 240, 369, 352, 302, 285,
	286, 239, 0, 338, 264, 277, 261, 318, 550, 574,
	578, 260, 639, 572, 379, 242, 0, 378, 317, 365,
	370, 303, 297, 241, 367, 301, 296, 289, 268, 640,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 381, 0, 0, 623, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 573, 0, 341, 323, 636,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 233, 357, 263, 304, 244, 246, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	254, 340, 255, 279, 256, 234, 347, 257, 236, 327,
	364, 0, 275, 336, 300, 237, 299, 328, 363, 362,
	245, 388, 1324, 1325, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 230, 231, 430, 621, 319, 0, 0, 635, 616,
	618, 619, 622, 626, 627, 628, 629, 630, 632, 634,
	638, 429, 0, 0, 0, 0, 0, 428, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 235, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 577, 309, 310, 311, 312, 624, 0, 252, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 251, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 249, 373, 349, 298,
	0, 0, 646, 620, 645, 647, 648, 644, 649, 650,
	631, 534, 0, 581, 642, 641, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 292, 0, 333, 271, 609, 586, 587, 588,
	533, 589, 584, 585, 610, 579, 606, 607, 558, 582,
	590, 605, 591, 608, 611, 612, 651, 652, 597, 653,
	594, 613, 604, 603, 592, 580, 614, 615, 565, 560,
	595, 596, 583, 598, 599, 600, 561, 562, 563, 564,
	358, 575, 0, 389, 390, 391, 413, 375, 0, 427,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 423, 0, 531, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 566, 0, 0, 350,
	305, 0, 0, 0, 0, 625, 633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	556, 602, 601, 543, 552, 0, 0, 247, 182, 544,
	0, 551, 545, 549, 548, 546, 547, 0, 617, 0,
	0, 0, 0, 0, 0, 515, 528, 0, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 526, 0, 0, 0, 0, 576, 0,
	527, 0, 0, 571, 553, 554, 0, 0, 0, 0,
	238, 355, 371, 248, 346, 384, 253, 353, 243, 320,
	343, 0, 0, 240, 369, 352, 302, 285, 286, 239,
	0, 338, 264, 277, 261, 318, 550, 574, 578, 260,
	639, 572, 379, 242, 0, 378, 317, 365, 370, 303,
	297, 241, 367, 301, 296, 289, 268, 640, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 381,
	0, 0, 623, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 573, 0, 341, 323, 636, 516, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 233,
	357, 263, 304, 244, 246, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 254, 340,
	255, 279, 256, 234, 347, 257, 236, 327, 364, 0,
	275, 336, 300, 237, 299, 328, 363, 362, 245, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 230,
	231, 430, 621, 319, 0, 0, 635, 616, 618, 619,
	622, 626, 627, 628, 629, 630, 632, 634, 638, 429,
	0, 0, 0, 0, 0, 428, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 235,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 577,
	309, 310, 311, 312, 624, 0, 252, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 251, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 249, 373, 349, 298, 0, 0,
	646, 620, 645, 647, 648, 644, 649, 650, 631, 534,
	0, 581, 642, 641, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	292, 0, 333, 271, 609, 586, 587, 588, 533, 589,
	584, 585, 610, 579, 606, 607, 558, 582, 590, 605,
	591, 608, 611, 612, 651, 652, 597, 653, 594, 613,
	604, 603, 592, 580, 614, 615, 565, 560, 595, 596,
	583, 598, 599, 600, 561, 562, 563, 564, 358, 575,
	0, 389, 390, 391, 413, 375, 0, 427, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	423, 0, 531, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 566, 0, 0, 350, 305, 0,
	0, 0, 0, 625, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 0, 0, 556, 602,
	601, 543, 552, 0, 0, 247, 182, 544, 0, 551,
	545, 549, 548, 546, 547, 0, 617, 0, 0, 0,
	0, 0, 0, 0, 528, 0, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 0, 0, 0, 0, 576, 0, 527, 0,
	0, 571, 553, 554, 0, 0, 0, 0, 238, 355,
	371, 248, 346, 384, 253, 353, 243, 320, 343, 0,
	0, 240, 369, 352, 302, 285, 286, 239, 0, 338,
	264, 277, 261, 318, 550, 574, 578, 260, 639, 572,
	379, 242, 0, 378, 317, 365, 370, 303, 297, 241,
	367, 301, 296, 289, 268, 640, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 569, 0, 0, 0, 381, 0, 0,
	623, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 573, 0, 341, 323, 636, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 233, 357, 263,
	304, 244, 246, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 254, 340, 255, 279,
	256, 234, 347, 257, 236, 327, 364, 0, 275, 336,
	300, 237, 299, 328, 363, 362, 245, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 230, 231, 430,
	621, 319, 0, 0, 635, 616, 618, 619, 622, 626,
	627, 628, 629, 630, 632, 634, 638, 429, 0, 0,
	0, 0, 0, 428, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 235, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 577, 309, 310,
	311, 312, 624, 0, 252, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 251,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 249, 373, 349, 298, 0, 0, 646, 620,
	645, 647, 648, 644, 649, 650, 631, 534, 0, 581,
	642, 641, 643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 292, 0,
	333, 271, 609, 586, 587, 588, 533, 589, 584, 585,
	610, 579, 606, 607, 558, 582, 590, 605, 591, 608,
	611, 612, 651, 652, 597, 653, 594, 613, 604, 603,
	592, 580, 614, 615, 565, 560, 595, 596, 583, 598,
	599, 600, 561, 562, 563, 564, 0, 0, 0, 389,
	390, 391, 413, 375, 0, 427, 0, 159, 358, 50,
	151, 128, 0, 0, 0, 0, 0, 431, 423, 321,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	0, 0, 0, 0, 144, 0, 266, 0, 153, 291,
	0, 0, 0, 0, 110, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	0, 0, 0, 0, 0, 156, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 247, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 355,
	371, 248, 346, 384, 253, 353, 243, 320, 343, 0,
	0, 240, 369, 352, 302, 285, 286, 239, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 242, 0, 378, 317, 365, 370, 303, 297, 241,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 127, 150, 157, 0,
	96, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	174, 0, 0, 0, 354, 0, 0, 290, 149, 143,
	142, 397, 0, 341, 323, 56, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 233, 357, 263,
	304, 244, 246, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 254, 340, 255, 279,
	256, 234, 347, 257, 236, 327, 364, 0, 275, 336,
	300, 237, 299, 328, 363, 362, 245, 388, 394, 395,
	400, 0, 401, 145, 146, 147, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 230, 231, 376,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 177, 0, 0, 422, 185, 0, 0,
	0, 148, 0, 186, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 235, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 252, 405, 334, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 251,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 249, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 292, 129,
	333, 271, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 0, 0, 0, 389,
	390, 391, 413, 375, 358, 187, 39, 175, 178, 180,
	179, 0, 48, 5, 0, 321, 113, 188, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1005, 0, 0, 181, 0, 0, 543, 552, 0,
	0, 247, 182, 544, 0, 551, 545, 549, 548, 546,
	547, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 238, 355, 371, 248, 346, 384,
	253, 353, 243, 320, 343, 0, 0, 240, 369, 352,
	302, 285, 286, 239, 0, 338, 264, 277, 261, 318,
	550, 368, 396, 260, 387, 0, 379, 242, 0, 378,
	317, 365, 370, 303, 297, 241, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 233, 357, 263, 304, 244, 246, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 254, 340, 255, 279, 256, 234, 347, 257,
	236, 327, 364, 0, 275, 336, 300, 237, 299, 328,
	363, 362, 245, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 230, 231, 430, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 429, 0, 0, 0, 0, 0, 428,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 235, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 276, 0,
	252, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 251, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 249, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 292, 0, 333, 271, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 0, 0, 0, 389, 390, 391, 413, 375,
	0, 427, 0, 159, 358, 50, 151, 128, 0, 0,
	0, 0, 0, 431, 423, 321, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 0, 0, 181, 0, 0, 0, 0, 0,
	0, 247, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 355, 371, 248, 346, 384,
	253, 353, 243, 320, 343, 0, 0, 240, 369, 352,
	302, 285, 286, 239, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 242, 0, 378,
	317, 365, 370, 303, 297, 241, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 233, 357, 263, 304, 244, 246, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 254, 340, 255, 279, 256, 234, 347, 257,
	236, 327, 364, 0, 275, 336, 300, 237, 299, 328,
	363, 362, 245, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 230, 231, 430, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 429, 0, 0, 0, 0, 0, 428,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 235, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 449, 451,
	252, 405, 334, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 251, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 249, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 292, 129, 333, 271, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 427, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 835, 0, 431, 423, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 247,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 823, 0, 0, 0, 0,
	0, 0, 238, 355, 371, 248, 346, 384, 253, 353,
	243, 320, 343, 0, 0, 1820, 1822, 1823, 1824, 1825,
	1826, 1827, 0, 1831, 1828, 1829, 1830, 318, 0, 1815,
	1816, 1817, 1818, 821, 1801, 1821, 0, 1802, 317, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1819, 329, 295, 330, 282, 307, 306, 308, 846, 848,
	850, 852, 855, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 1814, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 233, 357, 263, 304, 244, 246, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	254, 340, 255, 279, 256, 234, 347, 257, 236, 327,
	364, 0, 275, 336, 300, 237, 299, 328, 363, 362,
	245, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 230, 231, 430, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 429, 0, 0, 0, 0, 0, 428, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 235, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 309, 310, 311, 312, 276, 0, 252, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 251, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 249, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 845, 292, 0, 333, 271, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 0, 0, 0, 226, 227, 228, 229,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 427,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 423, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 0, 0, 247, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 1889,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 355, 371, 248, 346, 384, 253, 353, 243, 320,
	343, 0, 0, 240, 369, 352, 302, 285, 286, 239,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 242, 0, 378, 317, 365, 370, 303,
	297, 241, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1893, 381,
	0, 0, 0, 1888, 1879, 1887, 354, 1885, 1890, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 233,
	357, 263, 304, 244, 246, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 254, 340,
	255, 279, 256, 234, 347, 257, 236, 327, 364, 1891,
	275, 336, 300, 237, 299, 328, 363, 362, 245, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 230,
	231, 430, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 429,
	0, 0, 0, 0, 0, 428, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 235,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	309, 310, 311, 312, 276, 0, 252, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 251, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 249, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	292, 0, 333, 271, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 0, 0, 0, 226, 227, 228, 229, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 427, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	423, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 247, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 1889, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 355,
	371, 248, 346, 384, 253, 353, 243, 320, 343, 0,
	0, 240, 369, 352, 302, 285, 286, 239, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 242, 0, 378, 317, 365, 370, 303, 297, 241,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1893, 381, 0, 0,
	0, 1888, 0, 1887, 354, 1885, 1890, 290, 0, 0,
	0, 397, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 233, 357, 263,
	304, 244, 246, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 254, 340, 255, 279,
	256, 234, 347, 257, 236, 327, 364, 1891, 275, 336,
	300, 237, 299, 328, 363, 362, 245, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 230, 231, 430,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 429, 0, 0,
	0, 0, 0, 428, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 235, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 252, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 251,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 249, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 292, 0,
	333, 271, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 0,
	0, 0, 226, 227, 228, 229, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 427, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 423, 1623,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 1624,
	0, 0, 0, 247, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 940, 941, 942,
	939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 355, 371, 248,
	346, 384, 253, 353, 243, 320, 343, 0, 0, 240,
	369, 352, 302, 285, 286, 239, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 0, 379, 242,
	0, 378, 317, 365, 370, 303, 297, 241, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 233, 357, 263, 304, 244,
	246, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 254, 340, 255, 279, 256, 234,
	347, 257, 236, 327, 364, 0, 275, 336, 300, 237,
	299, 328, 363, 362, 245, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 230, 231, 430, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 429, 0, 0, 0, 0,
	0, 428, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 235, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 402, 309, 310, 311, 312,
	276, 0, 252, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 251, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	249, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 292, 0, 333, 271,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 0, 0, 0,
	226, 227, 228, 229, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 427, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 423, 0, 0, 0,
	0, 0, 266, 760, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 767, 768, 0, 0, 0,
	0, 247, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 355, 755, 248, 346, 384,
	253, 353, 243, 320, 343, 0, 0, 240, 369, 352,
	302, 285, 286, 239, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 747, 379, 242, 746, 378,
	317, 365, 370, 303, 297, 241, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 758, 332, 233, 357, 263, 304, 244, 246, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 254, 340, 255, 279, 256, 234, 347, 257,
	236, 327, 364, 0, 275, 336, 300, 237, 299, 328,
	363, 362, 245, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 230, 231, 430, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 429, 0, 0, 0, 0, 0, 428,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 235, 406, 0, 0, 0, 0, 0,
	0, 759, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 762, 309, 310, 311, 312, 276, 0,
	252, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 251, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 769, 756,
	765, 757, 288, 294, 337, 382, 322, 342, 249, 373,
	349, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 292, 0, 333, 271, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 0, 0, 0, 226, 227,
	228, 229, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 427, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 423, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 247,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 1896, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 355, 371, 248, 346, 384, 253, 353,
	243, 320, 343, 0, 0, 240, 369, 352, 302, 285,
	286, 239, 0, 338, 264, 277, 261, 318, 0, 368,
	396, 260, 387, 0, 379, 242, 0, 378, 317, 365,
	370, 303, 297, 241, 367, 301, 296, 289, 268, 412,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1895, 381, 0, 0, 0, 1900, 1898, 0, 354, 0,
	1899, 290, 0, 0, 0, 397, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 233, 357, 263, 304, 244, 246, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	254, 340, 255, 279, 256, 234, 347, 257, 236, 327,
	364, 0, 275, 336, 300, 237, 299, 328, 363, 362,
	245, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 230, 231, 430, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 429, 0, 0, 0, 0, 0, 428, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 235, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 309, 310, 311, 312, 276, 0, 252, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 251, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 249, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 292, 0, 333, 271, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 0, 0, 0, 226, 227, 228, 229,
	159, 358, 0, 389, 390, 391, 413, 375, 0, 427,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 423, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 110, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 1667,
	0, 181, 0, 0, 0, 0, 0, 0, 247, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 355, 371, 248, 346, 384, 253, 353, 243,
	320, 343, 0, 0, 240, 369, 352, 302, 285, 286,
	239, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 242, 0, 378, 317, 365, 370,
	303, 297, 241, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	233, 357, 263, 304, 244, 246, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 254,
	340, 255, 279, 256, 234, 347, 257, 236, 327, 364,
	0, 275, 336, 300, 237, 299, 328, 363, 362, 245,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	230, 231, 430, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	429, 0, 0, 0, 0, 0, 428, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	235, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 252, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 251, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 249, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 292, 129, 333, 271, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 159,
	358, 0, 389, 390, 391, 413, 375, 0, 427, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 423, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 110, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 1658, 0,
	181, 0, 0, 0, 0, 0, 0, 247, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 355, 371, 248, 346, 384, 253, 353, 243, 320,
	343, 0, 0, 240, 369, 352, 302, 285, 286, 239,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 242, 0, 378, 317, 365, 370, 303,
	297, 241, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 233,
	357, 263, 304, 244, 246, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 254, 340,
	255, 279, 256, 234, 347, 257, 236, 327, 364, 0,
	275, 336, 300, 237, 299, 328, 363, 362, 245, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 230,
	231, 430, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 429,
	0, 0, 0, 0, 0, 428, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 235,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	309, 310, 311, 312, 276, 0, 252, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 251, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 249, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	292, 129, 333, 271, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 0, 0, 0, 226, 227, 228, 229, 159, 358,
	0, 389, 390, 391, 413, 375, 0, 427, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	423, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 110, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1565, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 247, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	355, 371, 248, 346, 384, 253, 353, 243, 320, 343,
	0, 0, 240, 369, 352, 302, 285, 286, 239, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 242, 0, 378, 317, 365, 370, 303, 297,
	241, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 233, 357,
	263, 304, 244, 246, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 254, 340, 255,
	279, 256, 234, 347, 257, 236, 327, 364, 0, 275,
	336, 300, 237, 299, 328, 363, 362, 245, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 230, 231,
	430, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 429, 0,
	0, 0, 0, 0, 428, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 235, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 252, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	251, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 249, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 292,
	129, 333, 271, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 358, 0, 0,
	389, 390, 391, 413, 375, 0, 427, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 423,
	0, 0, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 767, 768,
	0, 0, 0, 0, 247, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 355, 371,
	248, 346, 384, 253, 353, 243, 320, 343, 0, 0,
	240, 369, 352, 302, 285, 286, 239, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 747, 379,
	242, 746, 378, 317, 365, 370, 303, 297, 241, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 233, 357, 263, 304,
	244, 246, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 254, 340, 255, 279, 256,
	234, 347, 257, 236, 327, 364, 0, 275, 336, 300,
	237, 299, 328, 363, 362, 245, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 230, 231, 430, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 429, 0, 0, 0,
	0, 0, 428, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 235, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 252, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 251, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 769, 1584, 765, 1585, 288, 294, 337, 382, 322,
	342, 249, 373, 349, 766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 292, 0, 333,
	271, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 0, 0,
	0, 226, 227, 228, 229, 358, 0, 0, 389, 390,
	391, 413, 375, 0, 427, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 2244, 431, 423, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 247, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 355, 371, 248, 346,
	384, 253, 353, 243, 320, 343, 0, 0, 240, 369,
	352, 302, 285, 286, 239, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 242, 0,
	378, 317, 365, 370, 303, 297, 241, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 2247, 0, 0, 2246, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 233, 357, 263, 304, 244, 246,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 254, 340, 255, 279, 256, 234, 347,
	257, 236, 327, 364, 0, 275, 336, 300, 237, 299,
	328, 363, 362, 245, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 230, 231, 430, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 429, 0, 0, 0, 0, 0,
	428, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 235, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 252, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 251, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 249,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 292, 0, 333, 271, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 0, 0, 0, 226,
	227, 228, 229, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 427, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 423, 0, 0, 0, 0,
	0, 266, 1175, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 1173, 0, 0, 0,
	247, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 238, 355, 371, 248, 346, 384, 253,
	353, 243, 320, 343, 0, 0, 240, 369, 352, 302,
	285, 286, 239, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 242, 0, 378, 317,
	365, 370, 303, 297, 241, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 233, 357, 263, 304, 244, 246, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 254, 340, 255, 279, 256, 234, 347, 257, 236,
	327, 364, 0, 275, 336, 300, 237, 299, 328, 363,
	362, 245, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 230, 231, 430, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 429, 0, 0, 0, 0, 0, 428, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 235, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 252,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 251, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 249, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 292, 0, 333, 271, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	427, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 423, 0, 0, 0, 0, 0, 266,
	1169, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 1173, 0, 0, 0, 247, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 0,
	0, 238, 355, 371, 248, 346, 384, 253, 353, 243,
	320, 343, 0, 0, 240, 369, 352, 302, 285, 286,
	239, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 242, 0, 378, 317, 365, 370,
	303, 297, 241, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	233, 357, 263, 304, 244, 246, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 254,
	340, 255, 279, 256, 234, 347, 257, 236, 327, 364,
	0, 275, 336, 300, 237, 299, 328, 363, 362, 245,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	230, 231, 430, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	429, 0, 0, 0, 0, 0, 428, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	235, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 252, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 251, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 249, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 292, 0, 333, 271, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 358,
	0, 0, 389, 390, 391, 413, 375, 0, 427, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 423, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2906, 0, 181,
	602, 0, 0, 0, 0, 0, 247, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	355, 371, 248, 346, 384, 253, 353, 243, 320, 343,
	0, 0, 240, 369, 352, 302, 285, 286, 239, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 242, 0, 378, 317, 365, 370, 303, 297,
	241, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 233, 357,
	263, 304, 244, 246, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 254, 340, 255,
	279, 256, 234, 347, 257, 236, 327, 364, 0, 275,
	336, 300, 237, 299, 328, 363, 362, 245, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 230, 231,
	430, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 429, 0,
	0, 0, 0, 0, 428, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 235, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 252, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	251, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 249, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 292,
	0, 333, 271, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 358, 0, 0,
	389, 390, 391, 413, 375, 0, 427, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 423,
	0, 0, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	1173, 0, 0, 0, 247, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2608, 0, 0, 0, 0, 0, 0, 238, 355, 371,
	248, 346, 384, 253, 353, 243, 320, 343, 0, 0,
	240, 369, 352, 302, 285, 286, 239, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	242, 0, 378, 317, 365, 370, 303, 297, 241, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 233, 357, 263, 304,
	244, 246, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 254, 340, 255, 279, 256,
	234, 347, 257, 236, 327, 364, 0, 275, 336, 300,
	237, 299, 328, 363, 362, 245, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 230, 231, 430, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 429, 0, 0, 0,
	0, 0, 428, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 235, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 252, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 251, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 249, 373, 349, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 292, 0, 333,
	271, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 0, 0,
	0, 226, 227, 228, 229, 358, 0, 0, 389, 390,
	391, 413, 375, 0, 427, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 423, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 1173, 0,
	0, 0, 247, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 238, 355, 371, 248, 346,
	384, 253, 353, 243, 320, 343, 0, 0, 240, 369,
	352, 302, 285, 286, 239, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 242, 0,
	378, 317, 365, 370, 303, 297, 241, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 233, 357, 263, 304, 244, 246,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 254, 340, 255, 279, 256, 234, 347,
	257, 236, 327, 364, 0, 275, 336, 300, 237, 299,
	328, 363, 362, 245, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 230, 231, 430, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 429, 0, 0, 0, 0, 0,
	428, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 235, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 252, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 251, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 249,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 292, 0, 333, 271, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 0, 0, 0, 226,
	227, 228, 229, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 427, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 423, 1954, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 1956, 0, 0, 0,
	247, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 355, 371, 248, 346, 384, 253,
	353, 243, 320, 343, 0, 0, 240, 369, 352, 302,
	285, 286, 239, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 242, 0, 378, 317,
	365, 370, 303, 297, 241, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 233, 357, 263, 304, 244, 246, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 254, 340, 255, 279, 256, 234, 347, 257, 236,
	327, 364, 0, 275, 336, 300, 237, 299, 328, 363,
	362, 245, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 230, 231, 430, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 429, 0, 0, 0, 0, 0, 428, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 235, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 252,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 251, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 249, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 292, 0, 333, 271, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	427, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 423, 0, 0, 0, 0, 0, 266,
	1975, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 1173, 0, 0, 0, 247, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 355, 371, 248, 346, 384, 253, 353, 243,
	320, 343, 0, 0, 240, 369, 352, 302, 285, 286,
	239, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 242, 0, 378, 317, 365, 370,
	303, 297, 241, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	233, 357, 263, 304, 244, 246, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 254,
	340, 255, 279, 256, 234, 347, 257, 236, 327, 364,
	0, 275, 336, 300, 237, 299, 328, 363, 362, 245,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	230, 231, 430, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	429, 0, 0, 0, 0, 0, 428, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	235, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 252, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 251, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 249, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 292, 0, 333, 271, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 358,
	0, 0, 389, 390, 391, 413, 375, 0, 427, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 423, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2984, 0, 181,
	0, 0, 0, 0, 0, 0, 247, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	355, 371, 248, 346, 384, 253, 353, 243, 320, 343,
	0, 0, 240, 369, 352, 302, 285, 286, 239, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 242, 0, 378, 317, 365, 370, 303, 297,
	241, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 233, 357,
	263, 304, 244, 246, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 254, 340, 255,
	279, 256, 234, 347, 257, 236, 327, 364, 0, 275,
	336, 300, 237, 299, 328, 363, 362, 245, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 230, 231,
	430, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 429, 0,
	0, 0, 0, 0, 428, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 235, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 252, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	251, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 249, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 292,
	0, 333, 271, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 358, 0, 0,
	389, 390, 391, 413, 375, 0, 427, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 423,
	0, 0, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 602, 0,
	0, 0, 0, 0, 247, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 355, 371,
	248, 346, 384, 253, 353, 243, 320, 343, 0, 0,
	240, 369, 352, 302, 285, 286, 239, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	242, 0, 378, 317, 365, 370, 303, 297, 241, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 233, 357, 263, 304,
	244, 246, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 254, 340, 255, 279, 256,
	234, 347, 257, 236, 327, 364, 0, 275, 336, 300,
	237, 299, 328, 363, 362, 245, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 230, 231, 430, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 429, 0, 0, 0,
	0, 0, 428, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 235, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 252, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 251, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 249, 373, 349, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 292, 0, 333,
	271, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 0, 0,
	0, 226, 227, 228, 229, 358, 0, 0, 389, 390,
	391, 413, 375, 0, 427, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 423, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2921, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 247, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 355, 371, 248, 346,
	384, 253, 353, 243, 320, 343, 0, 0, 240, 369,
	352, 302, 285, 286, 239, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 242, 0,
	378, 317, 365, 370, 303, 297, 241, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 233, 357, 263, 304, 244, 246,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 254, 340, 255, 279, 256, 234, 347,
	257, 236, 327, 364, 0, 275, 336, 300, 237, 299,
	328, 363, 362, 245, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 230, 231, 430, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 429, 0, 0, 0, 0, 0,
	428, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 235, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 252, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 251, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 249,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 292, 0, 333, 271, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 0, 0, 0, 226,
	227, 228, 229, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 427, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 423, 0, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	247, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 355, 371, 248, 346, 384, 253,
	353, 243, 320, 343, 0, 0, 240, 369, 352, 302,
	285, 286, 239, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 242, 0, 378, 317,
	365, 370, 303, 297, 241, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 2859, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 233, 357, 263, 304, 244, 246, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 254, 340, 255, 279, 256, 234, 347, 257, 236,
	327, 364, 0, 275, 336, 300, 237, 299, 328, 363,
	362, 245, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 230, 231, 430, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 429, 0, 0, 0, 0, 0, 428, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 235, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 252,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 251, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 249, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 292, 0, 333, 271, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	427, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 423, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2690, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 247, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 355, 371, 248, 346, 384, 253, 353, 243,
	320, 343, 0, 0, 240, 369, 352, 302, 285, 286,
	239, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 242, 0, 378, 317, 365, 370,
	303, 297, 241, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	233, 357, 263, 304, 244, 246, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 254,
	340, 255, 279, 256, 234, 347, 257, 236, 327, 364,
	0, 275, 336, 300, 237, 299, 328, 363, 362, 245,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	230, 231, 430, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	429, 0, 0, 0, 0, 0, 428, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	235, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 252, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 251, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 249, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 292, 0, 333, 271, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 358,
	0, 0, 389, 390, 391, 413, 375, 0, 427, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 423, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 247, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	355, 371, 248, 346, 384, 253, 353, 243, 320, 343,
	0, 0, 240, 369, 352, 302, 285, 286, 239, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 242, 0, 378, 317, 365, 370, 303, 297,
	241, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 2734, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 233, 357,
	263, 304, 244, 246, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 254, 340, 255,
	279, 256, 234, 347, 257, 236, 327, 364, 0, 275,
	336, 300, 237, 299, 328, 363, 362, 245, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 230, 231,
	430, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 429, 0,
	0, 0, 0, 0, 428, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 235, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 252, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	251, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 249, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 292,
	0, 333, 271, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 358, 0, 0,
	389, 390, 391, 413, 375, 0, 427, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 423,
	0, 0, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 247, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 355, 371,
	248, 346, 384, 253, 353, 243, 320, 343, 0, 0,
	240, 369, 352, 302, 285, 286, 239, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	242, 0, 378, 317, 365, 370, 303, 297, 241, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 233, 357, 263, 304,
	244, 246, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 254, 340, 255, 279, 256,
	234, 347, 257, 236, 327, 364, 0, 275, 336, 300,
	237, 299, 328, 363, 362, 245, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 230, 231, 430, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 429, 0, 0, 0,
	0, 0, 428, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 235, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 252, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 251, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 249, 373, 349, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 292, 0, 333,
	271, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 0, 0,
	0, 226, 227, 228, 229, 358, 0, 0, 389, 390,
	391, 413, 375, 0, 427, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 423, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1565, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 247, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 355, 371, 248, 346,
	384, 253, 353, 243, 320, 343, 0, 0, 240, 369,
	352, 302, 285, 286, 239, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 242, 0,
	378, 317, 365, 370, 303, 297, 241, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 233, 357, 263, 304, 244, 246,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 254, 340, 255, 279, 256, 234, 347,
	257, 236, 327, 364, 0, 275, 336, 300, 237, 299,
	328, 363, 362, 245, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 230, 231, 430, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 429, 0, 0, 0, 0, 0,
	428, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 235, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 252, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 251, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 249,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 292, 0, 333, 271, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 0, 0, 0, 226,
	227, 228, 229, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 427, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 423, 0, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	247, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 355, 371, 248, 346, 384, 253,
	353, 243, 320, 343, 0, 0, 240, 369, 352, 302,
	285, 286, 239, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 242, 0, 378, 317,
	365, 370, 303, 297, 241, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 233, 357, 263, 304, 244, 246, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 254, 340, 255, 279, 256, 234, 347, 257, 236,
	327, 364, 0, 275, 336, 300, 237, 299, 328, 363,
	362, 245, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 230, 231, 430, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 429, 0, 0, 0, 0, 0, 428, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 235, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 252,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 251, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 249, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 292, 0, 333, 271, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	427, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 423, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 2398, 0, 0, 0, 247, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 355, 371, 248, 346, 384, 253, 353, 243,
	320, 343, 0, 0, 240, 369, 352, 302, 285, 286,
	239, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 242, 0, 378, 317, 365, 370,
	303, 297, 241, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	233, 357, 263, 304, 244, 246, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 254,
	340, 255, 279, 256, 234, 347, 257, 236, 327, 364,
	0, 275, 336, 300, 237, 299, 328, 363, 362, 245,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	230, 231, 430, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	429, 0, 0, 0, 0, 0, 428, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	235, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 252, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 251, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 249, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 292, 0, 333, 271, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 358,
	0, 0, 389, 390, 391, 413, 375, 0, 427, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 423, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 247, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	355, 371, 248, 346, 384, 253, 353, 243, 320, 343,
	0, 0, 240, 369, 352, 302, 285, 286, 239, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 242, 0, 378, 317, 365, 370, 303, 297,
	241, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 233, 357,
	263, 304, 244, 246, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 254, 340, 255,
	279, 256, 234, 347, 257, 236, 327, 364, 0, 275,
	336, 300, 237, 299, 328, 363, 362, 245, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 230, 231,
	430, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 429, 0,
	0, 0, 0, 0, 428, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 235, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 252, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	251, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 249, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 292,
	0, 333, 271, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 358, 0, 0,
	389, 390, 391, 413, 375, 0, 427, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 423,
	0, 0, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	1173, 0, 0, 0, 247, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 355, 371,
	248, 346, 384, 253, 353, 243, 320, 343, 0, 0,
	240, 369, 352, 302, 285, 286, 239, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	242, 0, 378, 317, 365, 370, 303, 297, 241, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 233, 357, 263, 304,
	244, 246, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 254, 340, 255, 279, 256,
	234, 347, 257, 236, 327, 364, 0, 275, 336, 300,
	237, 299, 328, 363, 362, 245, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 230, 231, 430, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 429, 0, 0, 0,
	0, 0, 428, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 235, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 252, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 251, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 249, 373, 349, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 292, 0, 333,
	271, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 0, 0,
	0, 226, 227, 228, 229, 358, 0, 0, 389, 390,
	391, 413, 375, 0, 427, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 423, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 1956, 0,
	0, 0, 247, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 355, 371, 248, 346,
	384, 253, 353, 243, 320, 343, 0, 0, 240, 369,
	352, 302, 285, 286, 239, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 242, 0,
	378, 317, 365, 370, 303, 297, 241, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 233, 357, 263, 304, 244, 246,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 254, 340, 255, 279, 256, 234, 347,
	257, 236, 327, 364, 0, 275, 336, 300, 237, 299,
	328, 363, 362, 245, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 230, 231, 430, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 429, 0, 0, 0, 0, 0,
	428, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 235, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 252, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 251, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 249,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 292, 0, 333, 271, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 0, 0, 0, 226,
	227, 228, 229, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 427, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 423, 0, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	247, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 355, 371, 248, 346, 384, 253,
	353, 243, 320, 343, 0, 0, 240, 369, 352, 302,
	285, 286, 239, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 242, 0, 378, 317,
	365, 370, 303, 297, 241, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 233, 357, 263, 304, 244, 246, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 254, 340, 255, 279, 256, 234, 347, 257, 236,
	327, 364, 0, 275, 336, 300, 237, 299, 328, 363,
	362, 245, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 230, 231, 430, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 429, 0, 0, 0, 0, 0, 428, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 235, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 252,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 251, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 249, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 292, 0, 333, 271, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	427, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 423, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 247, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 355, 371, 248, 346, 384, 253, 353, 243,
	320, 343, 0, 0, 240, 369, 352, 302, 285, 286,
	239, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 242, 0, 378, 317, 365, 370,
	303, 297, 241, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	233, 357, 263, 304, 244, 246, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 254,
	340, 255, 279, 256, 234, 347, 257, 236, 327, 364,
	0, 275, 336, 300, 237, 299, 328, 363, 362, 245,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	230, 231, 430, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	429, 0, 0, 0, 0, 0, 428, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	235, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 252, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 251, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 249, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 292, 0, 333, 271, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 358,
	0, 0, 389, 390, 391, 413, 375, 0, 427, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 423, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 1990, 0, 0, 0, 247, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	355, 371, 248, 346, 384, 253, 353, 243, 320, 343,
	0, 0, 240, 369, 352, 302, 285, 286, 239, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 242, 0, 378, 317, 365, 370, 303, 297,
	241, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 233, 357,
	263, 304, 244, 246, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 254, 340, 255,
	279, 256, 234, 347, 257, 236, 327, 364, 0, 275,
	336, 300, 237, 299, 328, 363, 362, 245, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 230, 231,
	430, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 429, 0,
	0, 0, 0, 0, 428, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 235, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 252, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	251, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 249, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 292,
	0, 333, 271, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 0, 0, 0,
	389, 390, 391, 413, 375, 358, 427, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 321, 0, 431, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 247, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 355, 371, 248, 346,
	384, 253, 353, 243, 320, 343, 0, 0, 240, 369,
	352, 302, 285, 286, 239, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 242, 0,
	378, 317, 365, 370, 303, 297, 241, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 233, 357, 263, 304, 244, 246,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 254, 340, 255, 279, 256, 234, 347,
	257, 236, 327, 364, 0, 275, 336, 300, 237, 299,
	328, 363, 362, 245, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 230, 231, 430, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 429, 0, 0, 0, 0, 0,
	428, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 235, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 252, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 251, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 249,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 292, 0, 333, 271, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 0, 0, 0, 226,
	227, 228, 229, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 427, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 431, 423, 0, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	247, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 355, 371, 248, 346, 384, 253,
	353, 243, 320, 343, 0, 0, 240, 369, 352, 302,
	285, 286, 239, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 242, 0, 378, 317,
	365, 370, 303, 297, 241, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 233, 357, 263, 304, 244, 246, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 254, 340, 255, 279, 256, 234, 347, 257, 236,
	327, 364, 0, 275, 336, 300, 237, 299, 328, 363,
	362, 245, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 230, 231, 430, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 429, 0, 0, 0, 0, 0, 428, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 235, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 252,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 251, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 249, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 292, 0, 333, 271, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	427, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 423, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 1173, 0, 0, 0, 247, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 355, 371, 248, 346, 384, 253, 353, 243,
	320, 343, 0, 0, 240, 369, 352, 302, 285, 286,
	239, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 242, 0, 378, 317, 365, 370,
	303, 297, 241, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 1489, 332,
	233, 357, 263, 304, 244, 246, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 254,
	340, 255, 279, 256, 234, 347, 257, 236, 327, 364,
	0, 275, 336, 300, 237, 299, 328, 363, 362, 245,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	230, 231, 430, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	429, 0, 0, 0, 0, 0, 428, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	235, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 252, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 251, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 249, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 292, 0, 333, 271, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 358,
	0, 0, 389, 390, 391, 413, 375, 0, 427, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 423, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 247, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	355, 371, 248, 346, 384, 253, 353, 243, 320, 343,
	0, 0, 240, 369, 352, 302, 285, 286, 239, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 242, 0, 378, 317, 365, 370, 303, 297,
	241, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 1196, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 233, 357,
	263, 304, 244, 246, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 254, 340, 255,
	279, 256, 234, 347, 257, 236, 327, 364, 0, 275,
	336, 300, 237, 299, 328, 363, 362, 245, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 230, 231,
	430, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 429, 0,
	0, 0, 0, 0, 428, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 235, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 252, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	251, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 249, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 292,
	0, 333, 271, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 358, 0, 0,
	389, 390, 391, 413, 375, 0, 427, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 423,
	0, 0, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 247, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 355, 371,
	248, 346, 384, 253, 353, 243, 320, 343, 0, 0,
	240, 369, 352, 302, 285, 286, 239, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	242, 0, 378, 317, 365, 370, 303, 297, 241, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 233, 357, 263, 304,
	244, 246, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 254, 340, 255, 279, 256,
	234, 347, 257, 236, 327, 364, 0, 275, 336, 300,
	237, 299, 328, 363, 362, 245, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 230, 231, 430, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 429, 0, 0, 0,
	0, 0, 428, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 235, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 252, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 251, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 249, 373, 349, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 703, 0, 0, 0, 232, 0, 292, 0, 333,
	271, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 0, 0,
	0, 226, 227, 228, 229, 358, 0, 0, 389, 390,
	391, 413, 375, 0, 427, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 423, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 247, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 355, 371, 248, 346,
	384, 253, 353, 243, 320, 343, 0, 0, 240, 369,
	352, 302, 285, 286, 239, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 242, 0,
	378, 317, 365, 370, 303, 297, 241, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 469, 332, 233, 357, 263, 304, 244, 246,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 254, 340, 255, 279, 256, 234, 347,
	257, 236, 327, 364, 0, 275, 336, 300, 237, 299,
	328, 363, 362, 245, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 230, 231, 430, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 429, 0, 0, 0, 0, 0,
	428, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 235, 406, 0, 0, 0, 0,
	0, 0, 470, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 252, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 251, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 249,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 292, 0, 333, 271, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 0, 0, 0, 226,
	227, 228, 229, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 427, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 423, 0, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	247, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 355, 371, 248, 346, 384, 253,
	353, 243, 320, 343, 0, 0, 240, 369, 352, 302,
	285, 286, 239, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 242, 0, 378, 317,
	365, 370, 303, 297, 241, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 233, 357, 263, 304, 244, 246, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 254, 340, 255, 279, 256, 234, 347, 257, 236,
	327, 364, 0, 275, 336, 300, 237, 299, 328, 363,
	362, 245, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 230, 231, 430, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 429, 0, 0, 0, 0, 0, 428, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 235, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 252,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 251, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 249, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 292, 0, 333, 271, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	427, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 423, 0, 0, 0, 0, 436, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 247, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 355, 371, 248, 346, 384, 253, 353, 243,
	320, 343, 0, 0, 240, 369, 352, 302, 285, 286,
	239, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 242, 0, 378, 317, 365, 370,
	303, 297, 241, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	233, 357, 263, 304, 244, 246, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 254,
	340, 255, 279, 256, 234, 347, 257, 236, 327, 364,
	0, 275, 336, 300, 237, 299, 328, 363, 362, 245,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	230, 231, 430, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	429, 0, 0, 0, 0, 0, 428, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	235, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 252, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 251, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 249, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 292, 0, 333, 271, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 0, 0, 0, 226, 227, 228, 229, 358,
	0, 0, 389, 390, 391, 413, 375, 0, 427, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 423, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 247, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	355, 371, 248, 346, 384, 253, 353, 243, 320, 343,
	0, 0, 240, 369, 352, 302, 285, 286, 239, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 242, 0, 378, 317, 365, 370, 303, 297,
	241, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 233, 357,
	263, 304, 244, 246, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 254, 340, 255,
	279, 256, 234, 347, 257, 236, 327, 364, 0, 275,
	336, 300, 237, 299, 328, 363, 362, 245, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 230, 231,
	430, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 429, 0,
	0, 0, 0, 0, 428, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 235, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 252, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	251, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 249, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 292,
	0, 333, 271, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	0, 0, 0, 226, 227, 228, 229, 358, 0, 0,
	389, 390, 391, 413, 375, 0, 427, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 423,
	0, 0, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 247, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 355, 1153,
	248, 346, 384, 253, 353, 243, 320, 343, 0, 0,
	240, 369, 352, 302, 285, 286, 239, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	242, 0, 378, 317, 365, 370, 303, 297, 241, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 233, 357, 263, 304,
	244, 246, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 254, 340, 255, 279, 256,
	234, 347, 257, 236, 327, 364, 0, 275, 336, 300,
	237, 299, 328, 363, 362, 245, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 230, 231, 430, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 429, 0, 0, 0,
	0, 0, 428, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 235, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 252, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 251, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 249, 373, 349, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 292, 0, 333,
	271, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 0, 0,
	0, 226, 227, 228, 229, 358, 0, 0, 389, 390,
	391, 413, 375, 0, 427, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 423, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 247, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 355, 1151, 248, 346,
	384, 253, 353, 243, 320, 343, 0, 0, 240, 369,
	352, 302, 285, 286, 239, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 242, 0,
	378, 317, 365, 370, 303, 297, 241, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 233, 357, 263, 304, 244, 246,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 254, 340, 255, 279, 256, 234, 347,
	257, 236, 327, 364, 0, 275, 336, 300, 237, 299,
	328, 363, 362, 245, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 230, 231, 430, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 429, 0, 0, 0, 0, 0,
	428, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 235, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 252, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 251, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 249,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 292, 0, 333, 271, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 0, 0, 0, 226,
	227, 228, 229, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 427, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 423, 0, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 0,
	247, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 355, 371, 248, 346, 384, 253,
	353, 243, 320, 343, 0, 0, 240, 369, 352, 302,
	285, 286, 239, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 242, 0, 378, 317,
	365, 370, 303, 297, 241, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 233, 357, 263, 304, 244, 246, 510, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 254, 340, 255, 279, 256, 234, 347, 257, 236,
	327, 364, 0, 275, 336, 300, 237, 299, 328, 363,
	362, 245, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 230, 231, 430, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 429, 0, 0, 0, 0, 0, 428, 325,
	0, 344, 0, 0, 159, 0, 50, 151, 128, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 235, 406, 152, 0, 0, 0, 0, 0,
	0, 144, 377, 0, 0, 153, 385, 0, 0, 0,
	0, 110, 402, 309, 310, 311, 312, 276, 0, 252,
	405, 334, 0, 0, 0, 0, 98, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 251, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 249, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 116, 0, 117, 118,
	0, 232, 0, 292, 0, 333, 271, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 1380,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 0, 0, 0, 226, 227, 228,
	229, 0, 0, 0, 389, 390, 391, 413, 375, 0,
	427, 0, 0, 127, 150, 157, 0, 96, 0, 2456,
	0, 0, 431, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 143, 142, 0, 0,
	0, 0, 56, 0, 2466, 159, 0, 50, 151, 128,
	0, 707, 0, 0, 0, 0, 0, 2459, 0, 0,
	0, 0, 0, 0, 2454, 152, 0, 0, 0, 2469,
	2470, 0, 144, 0, 0, 2455, 153, 0, 0, 0,
	0, 0, 110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 0, 0,
	145, 146, 147, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 2460, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 1376, 0, 0, 0, 1373, 0, 0, 0, 1375,
	1372, 1374, 1378, 1379, 106, 0, 0, 1377, 148, 0,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 0, 488, 495, 485, 115, 116, 0, 117,
	118, 0, 0, 0, 0, 492, 493, 0, 494, 498,
	0, 0, 480, 0, 0, 0, 0, 747, 0, 0,
	746, 0, 503, 2468, 108, 1887, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2462, 0, 507, 0, 732, 509, 0, 0, 0, 0,
	508, 0, 708, 0, 127, 150, 157, 0, 96, 0,
	0, 0, 2461, 2463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 0, 0, 149, 143, 142, 710,
	0, 0, 0, 56, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1383, 1384, 1385, 1386, 1387,
	1388, 1381, 1382, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2471, 0, 731,
	730, 145, 146, 147, 0, 0, 0, 0, 0, 2457,
	0, 0, 0, 0, 0, 2467, 729, 0, 0, 0,
	0, 0, 109, 39, 0, 706, 0, 154, 0, 48,
	5, 0, 0, 113, 114, 0, 709, 740, 0, 0,
	481, 483, 482, 0, 0, 106, 0, 0, 0, 148,
	487, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 491, 0, 0, 0, 835, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 484, 0, 0, 0,
	475, 0, 0, 0, 0, 0, 0, 0, 940, 941,
	942, 939, 0, 737, 741, 0, 0, 0, 0, 0,
	1548, 0, 0, 0, 0, 108, 0, 0, 0, 0,
	726, 0, 724, 728, 744, 49, 0, 0, 725, 722,
	721, 0, 727, 712, 713, 711, 714, 715, 716, 717,
	0, 742, 0, 743, 1550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 739, 0, 835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3001, 0, 51, 0, 0, 1380, 0, 0,
	823, 0, 1530, 0, 0, 486, 490, 496, 0, 497,
	499, 734, 0, 500, 501, 502, 0, 0, 504, 505,
	843, 847, 849, 851, 853, 854, 856, 129, 860, 857,
	858, 859, 0, 0, 838, 839, 840, 841, 821, 822,
	844, 0, 824, 0, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 836, 842, 0, 0, 0, 0,
	0, 0, 0, 846, 848, 850, 852, 855, 835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 823, 733, 109, 39, 813, 0, 0, 0, 0,
	48, 0, 0, 0, 113, 114, 0, 0, 0, 0,
	837, 843, 847, 849, 851, 853, 854, 856, 0, 860,
	857, 858, 859, 0, 0, 838, 839, 840, 841, 821,
	822, 844, 0, 824, 0, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 836, 842, 0, 0, 0,
	0, 1548, 0, 1534, 846, 848, 850, 852, 855, 1376,
	0, 0, 0, 1373, 1538, 0, 0, 1375, 1372, 1374,
	1378, 1379, 0, 0, 0, 1377, 0, 0, 0, 0,
	0, 0, 823, 0, 1527, 1550, 0, 0, 1529, 1531,
	1533, 837, 1535, 1536, 1537, 1539, 1540, 1541, 1543, 1544,
	1545, 1546, 843, 847, 849, 851, 853, 854, 856, 1548,
	860, 857, 858, 859, 0, 0, 838, 839, 840, 841,
	821, 822, 844, 1530, 824, 0, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 836, 842, 2063, 2064,
	1549, 0, 0, 1550, 0, 846, 848, 850, 852, 855,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 0, 0,
	0, 1530, 837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1550, 0, 1526, 0, 0, 0, 0, 0,
	0, 0, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1383, 1384, 1385, 1386, 1387, 1388, 1381,
	1382, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	1530, 1532, 489, 0, 488, 495, 485, 0, 0, 0,
	0, 2778, 0, 0, 0, 0, 492, 493, 0, 494,
	498, 0, 0, 480, 0, 1523, 1522, 1525, 0, 1521,
	0, 0, 0, 503, 1534, 0, 845, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 1529,
	1531, 1533, 0, 1535, 1536, 1537, 1539, 1540, 1541, 1543,
	1544, 1545, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 845, 0, 0,
	0, 1549, 0, 1527, 0, 0, 0, 1529, 1531, 1533,
	0, 1535, 1536, 1537, 1539, 1540, 1541, 1543, 1544, 1545,
	1546, 1534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1538, 0, 0, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1527, 0, 0, 1526, 1529, 1531, 1533, 1549,
	1535, 1536, 1537, 1539, 1540, 1541, 1543, 1544, 1545, 1546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 481, 483, 482, 0, 1542, 0, 0, 845, 0,
	0, 487, 1532, 0, 0, 0, 1547, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 1549, 0,
	506, 0, 0, 1526, 0, 0, 0, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1542, 0, 1547, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 486, 490, 496, 0,
	497, 499, 0, 0, 500, 501, 502, 0, 0, 504,
	505,
}

var yyPact = [...]int{
	34624, -1000, -1000, -1000, -294, 8907, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32698,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32698, -291,
	32170, 32170, -1000, -1000, 1902, -1000, 31642, 9983, 32698, 279,
	274, 32698, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 551, -1000, 31114, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 500, 34981, 34282, 6783,
	-243, -1000, 2537, -94, 1837, 693, 716, 768, 768, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2311, 690, 30586,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34845,
	194, 690, 12623, 8, 7, 2537, 304, 178, -1000, 1090,
	34855, 165, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6783, 6783, 8907, -324, 8907, 6783, 32698,
	32698, -1000, -1000, -1000, -1000, 500, 34981, 6783, 1837, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35267, -1000, 1191, -1000, -1000, -1000,
	-1000, -1000, 2219, 1187, 1836, 466, 32698, -1000, 1184, 466,
	-1000, -1000, -1000, 2537, 2537, -1000, 32698, 32698, 79, 1330,
	-1000, 326, 321, 290, 1182, -1000, -1000, -1000, -1000, -1000,
	-1000, 384, 2549, -1000, 32698, 32698, 2227, 32698, -1000, 1546,
	415, 2721, 2378, 862, 613, 2237, -1000, -1000, 2217, -1000,
	179, 187, 193, 368, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 199, -1000, 2470, -1000, -1000, 169, -1000, -1000, 175,
	-1000, -1000, -1000, 5, -1000, -1000, -1000, -1000, -1000, -1000,
	-88, -1000, -1000, 794, 1951, 6783, -1000, 2159, -1000, 3065,
	-1000, -1000, -1000, -1000, 4131, 8367, 8367, 8367, 8367, -1000,
	-1000, 2063, 6783, 2216, 2215, -1000, -1000, -1000, -1000, -1000,
	1170, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1832, 7839, -1000, 2211, 2210, 2209, 2207,
	2205, 2183, 2178, 2177, 2176, 2174, 2172, 2171, 2169, 2166,
	1980, 9443, 2164, 1831, 1826, 2163, 2157, 2152, 1817, 1980,
	1980, 2141, 2132, 2130, 2129, 2128, 2119, 2117, 2115, 2114,
	2113, 2111, 2110, 2105, 2104, 2097, 2095, 2089, 2088, 2087,
	2083, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1088, -1000, 2082, 2331, 2484, 2009,
	2521, 2455, 2448, 2442, 2438, 1620, -1000, -1000, 68, -1000,
	-116, -1000, -1000, 744, -1000, 673, -1000, 32698, 32698, 32698,
	497, 497, 497, 497, 497, 536, 497, 545, 544, 542,
	497, -1000, -1000, -1000, -1000, -1000, -1000, 622, -1000, -1000,
	-1000, -1000, 1040, 32698, -1000, 2032, 1301, 2478, 438, 431,
	422, 1301, 330, -1000, 1314, 1314, 1314, 1314, 1301, 337,
	435, 2484, 2484, -4, 1314, -26, 1301, 1301, -26, 1301,
	1301, 1301, 146, -286, -1000, -1000, -1000, 1314, 1314, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2465, 2462, 500, 32698,
	109, 32698, 500, 500, 505, -54, 33754, 33226, 1546, 404,
	401, 1045, 1354, -1000, 1278, 32698, 32698, 1278, 1278, 16850,
	16322, -1000, 32698, -1000, 2484, 2009, -1000, 1953, 2338, 1952,
	2009, 500, 500, 500, 500, 500, 500, 500, 500, 32698,
	32698, 30058, 500, 5715, 5715, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 8907, 1702, 1681, 155, -60, -298,
	189, -1000, -1000, 32698, 2328, 142, -1000, -1000, -1000, 1993,
	-1000, 2027, 2027, 2027, 2027, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2047, 2081, -1000, -1000, 2019, 2019,
	2019, 1993, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2044, 2044, 2045,
	2044, 32698, 6783, 32698, 2334, 296, 2075, -1000, 32698, 294,
	2484, 2331, 2484, -1000, -1000, 1165, 1619, 1815, -1000, -1000,
	326, 1254, -1000, 743, -1000, -1000, -1000, -1000, 32698, -88,
	306, -1000, -1000, 1799, 2070, -1000, 451, 861, 1051, -1000,
	186, 35632, 25826, 1546, 25826, 32698, -1000, -1000, -1000, -1000,
	-1000, -1000, 4, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 163, -1000, 6783, 6783,
	6783, 6783, 6783, -1000, 493, 7311, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 8367, 8367, 8367, 8367, 8367, 8367, 8367,
	8367, 8367, 8367, 8367, 8367, 2061, 1427, 8367, 8367, 8367,
	8367, 2338, 2761, 1044, 225, -1000, -1000, -1000, -1000, -1000,
	1362, 1951, 6783, 6783, 32698, -1000, 35146, 6783, 6783, 34628,
	6783, 2436, 6783, 6783, 6783, 1944, 3073, 32698, 6783, -1000,
	1943, 1941, -1000, -1000, 1593, 6783, -1000, -1000, 6783, -1000,
	-1000, 6783, 8367, 6783, -1000, -1000, -1000, 128, 2436, 2436,
	6783, 6783, 2436, 2436, 2436, 1300, 2436, 2436, 2436, 2436,
	2436, 2436, 2436, 2436, 1940, 1938, 1937, 2484, -243, 5187,
	-1000, -249, 2331, 6783, -1000, -1000, 6783, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1813, 1812, -311, -59, 710,
	683, 692, -1000, 2426, -1000, 2067, 2066, 1161, 32698, 1389,
	32698, 25826, 32698, 1546, 32698, 32698, 497, 497, 497, 32698,
	505, -1000, 32698, 1040, 2424, 32698, 2538, 8367, 8367, 29530,
	1314, 1301, 1301, -1000, -1000, 32698, -1000, -1000, -1000, 1314,
	32698, 1314, 1314, 2538, 1314, -1000, -1000, -1000, 1301, 1301,
	-1000, -1000, -1000, -1000, 1314, 1314, -1000, -1000, 2538, 32698,
	-11, 2538, 2538, -20, -1000, -1000, -1000, 32698, 32698, 497,
	32698, -1000, 32698, 32698, -1000, -1000, 32698, 35455, 32698, 29002,
	2461, -1000, 25826, 32698, 23714, -1000, 1017, -1000, -52, -1000,
	-61, -54, 1278, -54, 1278, -1000, 448, 449, 15266, 409,
	25826, 3602, -1000, -1000, 1278, 1278, 3602, 3602, 1092, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1034, -1000, 162, 2331,
	-1000, -1000, -1000, -1000, -1000, 32698, 32698, 25826, 1546, 32698,
	32698, 32698, 32698, -1000, 2065, -1000, 2363, 32698, 1041, -1000,
	-1000, 12095, 1151, 1041, -1000, 1369, -1000, 6783, 8907, -264,
	6783, 8907, 8907, 6783, 8907, -1000, 6783, 131, -1000, -1000,
	-1000, -1000, 1614, -1000, 1612, -1000, -1000, -1000, 1805, 1805,
	-1000, 1609, -1000, -1000, -1000, -1000, 1607, -1000, -1000, 1605,
	-1000, -1000, 1925, 794, -1000, 1803, 2236, -244, -1000, 14209,
	32698, 32698, -1000, -1000, -244, -1000, 13680, 32698, 2331, -1000,
	2331, 32698, -1000, 2477, -1000, 326, 276, -1000, -1000, -1000,
	-1000, -1000, -1000, 1147, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1033, -1000, 32698, -1000, -1000, 186, 25826,
	26882, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 191, -1000,
	-1000, 164, -1000, 521, 103, 1253, -1000, -1000, 125, 172,
	570, 1951, -1000, 1387, 1387, 1393, -1000, 532, -1000, -1000,
	-1000, -1000, 2063, -1000, -1000, -1000, 1929, 3303, -1000, 1274,
	1274, 1134, 1134, 1134, 1134, 1134, 1425, 1425, -1000, -1000,
	-1000, 4131, 2061, 8367, 8367, 8367, 8367, 484, 484, 2911,
	2320, -1000, 6783, 1366, -1000, 6783, 1874, 1268, 1143, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1923,
	1922, 1789, 2548, 1920, 6783, -1000, -1000, 1247, 1241, 1240,
	-1000, 2053, 6255, -1000, -1000, -1000, 1919, 1119, 1913, -1000,
	-1000, -1000, 1912, 1237, 851, 1909, 1449, 1908, 1032, 6783,
	6783, 1236, 1235, 6783, 6783, 6783, 6783, 1905, 6783, 6783,
	6783, 6783, 6783, 6783, 6783, 6783, 25, 25, 25, -1000,
	-1000, 1174, -1000, 1951, -1000, 1802, -1000, 953, 1028, -1000,
	1865, -1000, -1000, -1000, 1744, -1000, -1000, 700, 671, 650,
	32698, 762, 10511, 32698, 2032, 2341, 129, -1000, 917, -1000,
	103, -103, 812, 2226, 2547, 32698, 32698, 32698, 2423, 28474,
	-1000, 2060, 1163, -1000, -1000, 6783, -1000, -1000, 2224, 32698,
	32698, 2538, 2538, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	32698, 2538, 2538, 1301, 1314, -1000, -1000, 1314, -1000, -1000,
	1314, -1000, 1112, -1000, 32698, -1000, -1000, -1000, 2032, 1027,
	-1000, 11039, 13151, 530, -1000, 517, 1304, 1304, 771, 1304,
	1304, 1304, 1304, 380, 376, 1304, 1304, 1304, 1304, 1304,
	1304, 1304, 1304, 1304, 1304, 1304, 1304, 1304, 1304, 2057,
	-1000, 127, 2434, 219, 214, 917, 228, 2841, 893, -1000,
	-1000, -1000, -1000, 18962, 18962, 14738, 18962, -1000, 1259, -54,
	-74, -1000, -1000, 1017, 3602, 1017, 3602, -1000, -1000, 509,
	-1000, -1000, 812, -1000, 32698, 32698, -1000, -1000, 2056, 1326,
	-1000, -1000, 9443, -1000, 3602, 3602, -1000, -1000, 19490, 32698,
	-1000, -93, -1000, -81, 2475, 1013, -1000, -1000, 1014, 812,
	2234, 1013, 1013, -1000, 10511, 32698, -1000, 2538, 5715, -1000,
	23714, -1000, -1000, 27938, -1000, 27410, 2538, 1352, -1000, 8907,
	1664, 151, -1000, 185, -300, 149, 1510, 148, 1951, -1000,
	-1000, 1904, 1896, 1159, -1000, 1141, 1894, 1131, 1130, -1000,
	-30, -1000, 2325, 920, -1000, 2052, -1000, 1127, 2287, -1000,
	1009, -1000, 1325, 1115, -1000, 920, 1100, 2284, 1009, 2475,
	-1000, 1107, 78, -1000, -1000, 32698, 1799, 1091, 26882, 955,
	-1000, 501, 1094, 1071, -1000, 25826, 190, 25826, -1000, 25826,
	-1000, -1000, 295, -1000, 32698, 2312, -1000, -1000, -1000, 1744,
	-315, -1000, -1000, -1000, -1000, -1000, 1085, -1000, 484, 484,
	2911, 2305, -1000, 8367, -1000, 8367, 2692, 1348, -1000, 6783,
	1637, 35186, 1218, 18434, 32698, -1000, -1000, 6783, 6783, -1000,
	2663, -1000, -1000, -1000, -1000, 6783, 6783, 1755, -1000, 32698,
	-1000, -1000, -1000, -1000, 18434, -1000, 8367, -1000, 6783, 1018,
	2648, 25, 25, 2627, 2617, 2613, 1084, 25, 2600, 2584,
	2482, 2425, 2390, 2383, 2324, 2310, -1000, 2051, -1000, -1000,
	5187, -1000, -30, 6783, 6783, 6783, 2292, -1000, -1000, 110,
	-1000, 1323, -1000, -1000, -1000, 664, 145, 1893, 970, -1000,
	-1000, 32698, -1000, -1000, -1000, 1892, 966, -1000, -1000, -1000,
	35358, 2027, 2027, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2047, -1000, -1000, 2019, 2019, 2019, 1993, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2044, 2044,
	2045, 2044, -1000, 2422, -1000, 21, 1304, 452, 25826, 395,
	-1000, 32698, 2232, 310, 2309, 32698, 2042, 2039, 2037, 266,
	35358, 32698, 896, -1000, 1068, 34855, -1000, 32698, 1951, -1000,
	1546, -1000, 1301, -1000, -1000, 2538, 927, -1000, -1000, 2538,
	1301, 1301, 1314, 32698, -1000, 2421, 35455, -1000, 2364, 32698,
	-1000, -1000, 35358, 642, -1000, 669, 497, 32698, 1426, 669,
	1423, 2036, -1000, -1000, -1000, 32698, 32698, -1000, 32698, 1409,
	1405, -1000, 32698, 32698, 1603, -1000, 1602, 1304, 1304, 1600,
	1790, 1783, 1771, 1304, 1304, 1598, 1769, 26354, 1597, 1594,
	1591, 1587, 1766, 611, 1567, 1556, 1551, 32698, 2035, 1692,
	21, 1304, 209, 32698, 1320, 452, 1630, 15794, 32698, 23714,
	23714, 23714, 23714, -1000, 2266, 2262, -1000, 2256, 2255, 2299,
	32698, 23714, 2032, -1000, 26354, -1000, -1000, -1000, 2338, 1073,
	2710, 691, 6783, -1000, -1000, -70, -68, -1000, -1000, -1000,
	25826, 1760, 409, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2569, 32698, 32698, 1885, -1000, 2536, -1000, 956, -1000,
	-1000, 1067, -1000, 2536, 1374, -296, 8907, 1321, 1255, -1000,
	6783, 8907, 6783, -265, 197, -277, -1000, -1000, -1000, 1754,
	-1000, -1000, -1000, 1590, -1000, 1588, 38, 50, 1403, -244,
	5187, 301, 32698, -244, 32698, 5187, -1000, 32698, 297, -244,
	-1000, 32698, 1581, -1000, -1000, -1000, 2546, 25826, 1546, 1186,
	25298, -1000, 161, -1000, 184, 444, 1747, -1000, 539, 102,
	1744, -1000, -1000, -1000, 8367, -1000, -1000, -1000, -1000, 1951,
	6783, 1884, -1000, 727, 727, 1868, -1000, 2027, 2027, -1000,
	1993, 2019, 1993, 727, 727, 1864, -1000, 1767, 2302, -1000,
	2248, 2213, 6783, -1000, 1863, 2865, 900, -115, 25, -1000,
	-1000, -1000, 25, 25, 25, 25, -1000, 25, 25, 25,
	25, 25, 25, 25, 25, 473, -1000, 38, 1951, 1951,
	-1000, -1000, 2367, -1000, 1744, 1743, -1000, 1734, 1731, 762,
	35358, 554, 10511, 2323, 291, 1631, -1000, -1000, -1000, 24770,
	414, -1000, -1000, -1000, 499, 182, 1572, 420, -1000, 32698,
	228, 32698, -1000, -1000, -1000, -1000, -1000, 2309, -1000, 776,
	247, 11567, 11567, 11567, 257, 1436, -1000, 466, 850, 1064,
	23714, 32698, -1000, 23186, 1862, -1000, 812, 2538, -1000, 32698,
	-1000, 2538, 2538, 1301, -1000, 291, -1000, -1000, -1000, 32698,
	2364, 34799, -1000, 32698, -1000, 32698, -1000, 32698, 32698, 497,
	6783, -1000, -1000, -1000, 32698, -1000, 278, -1000, -1000, -1000,
	-1000, 18434, 18434, -1000, -1000, -1000, -1000, 1729, 1727, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 390, 32698, 1057, -1000, 1318, 1631, 24770, 1316, 1278,
	1725, 414, -1000, 1709, -1000, 923, 32698, 32698, -1000, 925,
	-1000, 1311, 2223, 2231, 2223, -1000, -1000, -1000, -1000, 2258,
	-1000, 2257, -1000, -1000, 925, -1000, -1000, -1000, -1000, -1000,
	691, -1000, 2474, 669, 669, 669, 1858, -1000, -1000, -1000,
	955, 1857, -1000, -1000, -1000, -1000, -1000, -1000, 2531, 2520,
	24242, 2531, -1000, -296, 1332, -1000, 1410, 144, 1415, 32698,
	-1000, -1000, -1000, 1856, 1854, -251, 55, 2517, 2516, 2565,
	-1000, 1853, 936, -244, -1000, -1000, 920, -1000, -1000, -1000,
	-244, -1000, 920, -1000, -1000, 1546, -1000, 174, -1000, -1000,
	-1000, -1000, -1000, -1000, 87, -1000, 32698, -1000, 99, -1000,
	1951, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 6783, -1000, -1000, -1000,
	2099, -1000, -1000, 6783, 1850, 1704, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2529,
	-1000, 2515, -251, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 35358, -1000, 1740, -1000, -1000, 1703, 97, -1000, -1000,
	-1000, 1698, 1694, 1569, -1000, -1000, 1549, 1058, 112, -1000,
	-1000, -1000, -1000, -1000, -1000, 1630, 2012, -1000, 1304, 1304,
	1304, 32698, 1848, 932, -1000, -1000, -1000, -1000, 1804, 1794,
	455, 1334, 1329, -1000, 1568, 18962, 23714, 23186, 884, -1000,
	1060, -1000, -1000, -1000, 2538, -1000, -1000, 2538, -1000, -1000,
	-1000, -1000, 34799, -1000, -1000, 1439, 8367, -1000, -1000, 1693,
	17906, 602, 615, 2008, -1000, 346, 2559, -1000, 1401, 1398,
	-1000, 32698, -1000, 2007, -1000, 2005, 1763, 287, 2004, 2003,
	32698, 1852, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 447, 1036, -1000, 1692, 1689, -1000, 97, 1687, 3602,
	-1000, -1000, -1000, 32698, 923, 923, 2529, 32698, 5187, -1000,
	-1000, 6783, 2002, -1000, 6783, -1000, -1000, -1000, -1000, -1000,
	1999, 2319, -1000, -1000, -1000, -1000, -1000, -1000, 6783, 6783,
	-1000, -1000, 464, 8907, -278, 196, -1000, -1000, -1000, -253,
	1686, -1000, -1000, 2513, 1680, 1653, 32698, -1000, 920, 920,
	812, -1000, -1000, -20, -1000, 1800, -1000, 1761, 25, -1000,
	133, 6783, -253, -168, -1000, -1000, -1000, -1000, 289, -1000,
	-1000, 221, -1000, -1000, 1542, 446, -1000, -1000, 22130, 18434,
	17906, 1677, -1000, 35562, 11567, 163, 35562, 733, 1317, -1000,
	1562, -1000, 1543, -1000, 2538, 884, 1060, -1000, -1000, 1171,
	-1000, -1000, -1000, -1000, 2911, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1538, 1996,
	-101, -1000, -1000, 1995, 22130, 22130, 379, 379, 22130, 22130,
	1994, 540, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2484, -1000, -1000, 1951, 32698, 1951, 22658, -1000, 2512,
	2504, 1951, 794, -1000, -296, 32698, 32698, -255, 1534, -1000,
	1674, 52, -1000, -1000, 811, -257, 33, 67, -1000, -1000,
	-1000, 1772, -1000, 567, -1000, -1000, -1000, 794, -255, 32698,
	436, 1672, -1000, -1000, 188, -1000, -1000, 1030, -1000, 1993,
	6783, -1000, -1000, -1000, 462, 35513, -1000, -1000, -1000, -20,
	462, 442, 218, -1000, 1526, -1000, -1000, 2529, -1000, 1722,
	6783, 1980, -158, 22130, 1019, 1008, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 998, 981, 22130, -1000, -1000, -1000, 320,
	-1000, 980, 975, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1972, -1000, -1000, 2503, -1000, 1670, 503, 44, 67, -1000,
	2501, 49, 2494, 2491, -1000, -1000, 429, -245, 22, 17,
	13, -1000, -1000, -1000, 6783, -1000, 2387, -1000, -1000, 74,
	-1000, -1000, -1000, 22130, 2417, 1717, 293, 2490, 35562, -1000,
	-1000, 293, -1000, 260, -1000, 1288, -1000, 1521, -1000, 2484,
	-1000, 1564, -1000, 2230, -1000, 130, 973, -1000, -1000, -1000,
	-1000, 946, -1000, -1000, -1000, 21602, 32698, 1653, -1000, 1969,
	1512, 55, 27, 2489, -1000, 1653, 2487, 1653, 1653, 1391,
	-1000, 26, 19, 15, -1000, -1000, -1000, -1000, 1665, -1000,
	243, -1000, -1000, 2417, -1000, 2486, 349, -1000, -1000, -1000,
	-1000, 1504, -1000, -1000, 540, -1000, 2229, 1770, 2544, -1000,
	-1000, -1000, -1000, 243, 243, 243, 243, 154, -1000, -1000,
	943, -1000, -1000, 2432, 17378, 35, -1000, -1000, -1000, 1661,
	-1000, 1653, -1000, -1000, 429, -1000, -1000, -1000, -1000, -1000,
	1304, 1652, 250, -1000, -1000, -1000, 21074, 311, 324, 318,
	-1000, 492, -1000, -1000, -1000, -1000, 2557, -1000, 2552, 597,
	597, -1000, -1000, 32698, -1000, 32698, -1000, 940, -1000, -1000,
	-1000, 1048, -1000, -1000, -1000, -1000, -1000, 1479, -1000, 32698,
	-1000, 32698, 312, 1478, 8367, 1968, 8367, 1967, 316, 1965,
	-1000, -1000, -1000, 1498, 351, -1000, -1000, 761, -1000, 1299,
	-1000, 20546, 32698, -1000, -1000, 921, 1963, 2483, -1000, 2722,
	32698, 2691, 32698, 1962, 1229, 8367, -1000, -1000, -1000, 32698,
	4659, -1000, 928, -1000, -1000, 461, 308, -1000, 878, -1000,
	876, 20018, 1455, 2261, -1000, -1000, 1951, 32698, 870, -1000,
	32698, 302, -1000, -1000, -1000, 868, -1000, -1000, -1000, -1000,
	461, 2278, -1000, 1454, -1000, -1000, 35244, 589, -1000, -1000,
	35244, 307, -1000, 454, 1930, -1000, -1000, 867, -1000, 32698,
	648, 6783, -1000, 307, 35562, -1000, 6783, 846, -1000, 35562,
	839, -1000, -1000,
}

var yyPgo = [...]int{
	0, 152, 2587, 227, 149, 3248, 63, 226, 206, 204,
	225, 3226, 3225, 2365, 2351, 3213, 3212, 3211, 3210, 3206,
	3205, 3203, 3201, 3200, 3199, 3198, 3182, 3178, 3177, 3176,
	3175, 3174, 3173, 3171, 3168, 3167, 3166, 3165, 3164, 223,
	3154, 3150, 3149, 3143, 3142, 3140, 3139, 3137, 3136, 3135,
	3134, 3133, 3132, 3128, 3127, 3126, 3125, 3122, 3121, 3119,
	3118, 3117, 3116, 3114, 3113, 3110, 3109, 3107, 3105, 3104,
	201, 3103, 2303, 3102, 3101, 3100, 3099, 3098, 3097, 3096,
	221, 3094, 3093, 3092, 3091, 3090, 3089, 3088, 3087, 3086,
	3083, 3082, 217, 3081, 3080, 3077, 3076, 3072, 3071, 208,
	3068, 147, 171, 3064, 3063, 3062, 3060, 3059, 3058, 220,
	260, 48, 3057, 37, 3056, 205, 3054, 123, 3053, 117,
	3046, 3045, 3044, 3043, 3028, 3026, 3025, 3024, 3023, 3021,
	3020, 3019, 74, 3015, 100, 110, 170, 232, 1109, 235,
	231, 161, 141, 75, 3014, 2326, 3013, 151, 212, 127,
	24, 3012, 154, 3011, 131, 43, 41, 233, 114, 44,
	132, 94, 3009, 202, 85, 84, 3008, 3007, 163, 238,
	166, 3006, 101, 3005, 3002, 3001, 3000, 194, 182, 2997,
	2983, 103, 2982, 2980, 96, 2977, 53, 179, 142, 175,
	2975, 134, 98, 90, 144, 2973, 2969, 97, 2968, 2967,
	2962, 2961, 155, 2957, 2955, 102, 73, 2950, 2949, 2948,
	50, 2947, 61, 2946, 64, 2945, 2944, 2941, 2939, 56,
	2938, 2937, 16, 21, 23, 2936, 20, 2928, 143, 2927,
	2926, 2925, 93, 2924, 2, 2923, 209, 54, 82, 120,
	2921, 375, 2919, 2918, 2915, 128, 2914, 317, 2913, 2912,
	2911, 2910, 2909, 76, 2908, 203, 36, 2905, 104, 107,
	111, 183, 184, 2903, 2900, 2894, 174, 79, 55, 0,
	2892, 129, 2889, 2888, 2886, 243, 2885, 214, 173, 138,
	124, 257, 145, 2884, 2883, 77, 2882, 133, 72, 42,
	116, 8, 15, 250, 2881, 13, 157, 2880, 193, 2879,
	136, 30, 121, 2876, 2875, 32, 229, 2874, 2873, 2872,
	95, 2868, 2866, 162, 105, 2864, 2863, 2862, 33, 2861,
	29, 25, 2860, 88, 2859, 245, 2857, 165, 122, 158,
	146, 126, 210, 215, 65, 66, 2836, 1356, 125, 81,
	22, 2834, 211, 2833, 167, 108, 2832, 68, 2829, 228,
	345, 195, 2828, 159, 7, 35, 27, 2822, 9, 2808,
	112, 200, 2805, 2804, 18, 39, 2802, 17, 2801, 2798,
	2797, 2796, 5, 2794, 2793, 2790, 1, 4, 2789, 3,
	197, 2788, 2783, 2779, 2777, 38, 106, 2776, 118, 169,
	2775, 2773, 80, 2769, 2754, 2753, 744, 2750, 2738, 2729,
	2727, 2725, 2723, 2718, 2703, 2702, 2701, 78, 46, 2700,
	2699, 2697, 2688, 60, 115, 2687, 2685, 2684, 2681, 31,
	156, 2674, 19, 2672, 28, 26, 34, 2670, 113, 2668,
	12, 160, 2665, 2664, 14, 2660, 2655, 10, 11, 2654,
	2651, 92, 2647, 71, 45, 139, 86, 2643, 70, 196,
	119, 2642, 2640, 230, 224, 190, 2639, 137, 216, 234,
	2633, 198, 2632, 2628, 2627, 2624, 2622, 2621, 835, 2620,
	2618, 219, 47, 67, 89, 2617, 2616, 2615, 69, 135,
	91, 87, 189, 2612, 172, 2611, 2609, 83, 2608, 2607,
	2605, 2603, 2602, 164, 2601, 2599, 177, 213, 2598, 2596,
	2591, 2590, 222, 302, 2583,
}

//line mysql_sql.y:9672
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 492, 500, 500, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 107, 107, 106, 490, 490, 490, 491,
	491, 103, 124, 123, 126, 126, 125, 125, 122, 122,
	118, 121, 121, 120, 120, 119, 114, 116, 116, 115,
	117, 117, 104, 92, 105, 440, 440, 439, 439, 438,
	438, 393, 393, 437, 437, 437, 436, 436, 436, 435,
	435, 434, 434, 433, 433, 431, 431, 432, 430, 429,
	429, 429, 427, 427, 427, 423, 423, 425, 424, 424,
	426, 418, 418, 421, 421, 419, 419, 419, 419, 422,
	417, 417, 417, 416, 416, 91, 91, 91, 339, 339,
	90, 90, 353, 353, 353, 353, 353, 351, 351, 351,
	351, 351, 351, 350, 350, 349, 349, 354, 354, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 81,
	81, 81, 81, 81, 86, 86, 86, 497, 497, 496,
	496, 498, 498, 498, 498, 499, 499, 84, 84, 84,
	85, 348, 348, 348, 82, 83, 83, 338, 338, 343,
	343, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 347, 347, 347, 345, 345, 344,
	344, 346, 346, 75, 75, 75, 78, 77, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 76, 76, 76,
	76, 76, 76, 71, 71, 71, 71, 71, 70, 70,
	72, 72, 335, 335, 334, 87, 87, 88, 494, 494,
	493, 495, 495, 495, 495, 89, 95, 95, 95, 95,
	95, 95, 95, 94, 94, 97, 97, 96, 98, 80,
	80, 80, 80, 80, 80, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 464, 464, 464, 466, 466, 273,
	274, 501, 276, 272, 272, 272, 460, 460, 461, 462,
	463, 463, 463, 93, 11, 11, 11, 11, 11, 11,
	69, 74, 227, 227, 228, 228, 228, 228, 228, 228,
	228, 232, 232, 232, 231, 229, 229, 229, 229, 229,
	229, 230, 233, 233, 67, 73, 73, 73, 477, 477,
	68, 484, 484, 396, 396, 287, 287, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 400, 401, 283, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 46, 45, 45, 45, 324, 324,
	44, 502, 502, 262, 262, 56, 55, 48, 57, 58,
	59, 60, 61, 62, 43, 54, 54, 54, 54, 54,
	54, 54, 54, 65, 65, 412, 412, 504, 504, 504,
	63, 64, 395, 395, 395, 53, 52, 51, 50, 49,
	49, 42, 42, 41, 41, 47, 130, 131, 280, 280,
	280, 282, 282, 278, 503, 503, 367, 367, 281, 281,
	40, 40, 40, 40, 66, 279, 279, 261, 277, 277,
	277, 12, 12, 10, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 23, 24, 26, 332,
	332, 329, 25, 18, 17, 20, 16, 19, 21, 22,
	22, 9, 9, 9, 9, 13, 13, 14, 142, 142,
	192, 192, 472, 472, 468, 468, 469, 469, 469, 470,
	470, 471, 471, 99, 406, 406, 406, 406, 406, 406,
	8, 164, 164, 405, 405, 405, 405, 405, 405, 336,
	336, 449, 449, 449, 450, 163, 163, 158, 158, 407,
	407, 302, 451, 451, 415, 415, 414, 414, 413, 413,
	161, 161, 162, 162, 145, 145, 110, 110, 420, 420,
	420, 420, 428, 428, 392, 392, 219, 219, 256, 256,
	257, 257, 135, 135, 136, 136, 136, 136, 136, 136,
	457, 457, 459, 459, 458, 160, 160, 156, 156, 157,
	157, 157, 155, 155, 154, 153, 153, 152, 150, 150,
	150, 151, 151, 151, 168, 168, 138, 138, 138, 137,
	137, 137, 137, 137, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 139, 139, 465, 465,
	465, 397, 397, 397, 403, 403, 238, 238, 239, 239,
	237, 237, 140, 140, 141, 141, 141, 141, 236, 236,
	235, 143, 143, 149, 148, 148, 144, 144, 144, 144,
	246, 246, 245, 245, 245, 245, 102, 108, 108, 109,
	167, 167, 244, 243, 243, 243, 166, 166, 165, 165,
	159, 159, 147, 147, 147, 147, 242, 146, 240, 489,
	489, 488, 488, 487, 485, 485, 485, 486, 486, 486,
	486, 442, 442, 442, 442, 442, 267, 267, 267, 271,
	271, 270, 270, 270, 270, 270, 275, 7, 7, 7,
	7, 7, 30, 30, 30, 30, 30, 30, 30, 30,
	36, 176, 177, 37, 178, 178, 179, 179, 180, 180,
	181, 182, 183, 183, 183, 183, 35, 169, 169, 170,
	170, 171, 171, 172, 173, 173, 173, 175, 174, 34,
	27, 473, 476, 474, 474, 478, 478, 478, 479, 479,
	479, 479, 480, 480, 28, 127, 132, 132, 129, 134,
	134, 134, 134, 134, 128, 475, 481, 481, 481, 333,
	333, 330, 331, 331, 328, 327, 327, 327, 483, 483,
	482, 482, 482, 268, 268, 29, 323, 323, 325, 326,
	326, 326, 317, 317, 317, 317, 33, 321, 321, 322,
	322, 322, 322, 322, 318, 318, 320, 320, 316, 316,
	316, 316, 316, 32, 133, 133, 315, 315, 313, 313,
	311, 311, 312, 312, 310, 310, 310, 314, 314, 31,
	31, 31, 112, 111, 111, 111, 259, 259, 258, 258,
	113, 38, 204, 204, 381, 381, 381, 381, 381, 399,
	399, 399, 382, 382, 382, 383, 383, 383, 384, 384,
	384, 384, 384, 398, 398, 355, 355, 356, 356, 356,
	359, 359, 373, 373, 374, 374, 372, 372, 379, 379,
	378, 378, 377, 377, 376, 376, 375, 375, 375, 375,
	370, 370, 369, 369, 357, 357, 357, 357, 357, 358,
	358, 358, 368, 368, 371, 371, 210, 210, 211, 211,
	211, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	447, 447, 448, 213, 213, 213, 217, 217, 217, 217,
	217, 217, 212, 212, 214, 214, 193, 193, 191, 191,
	184, 184, 185, 185, 186, 186, 186, 190, 190, 189,
	189, 187, 187, 188, 188, 188, 188, 341, 341, 445,
	445, 446, 446, 441, 441, 441, 444, 444, 444, 444,
	444, 443, 443, 194, 254, 254, 254, 269, 269, 269,
	269, 253, 253, 253, 209, 209, 208, 208, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 340, 340, 284, 284, 285, 285, 226,
	225, 225, 225, 225, 225, 223, 224, 222, 222, 222,
	222, 222, 221, 221, 220, 220, 220, 319, 319, 218,
	218, 216, 216, 216, 215, 215, 215, 380, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 252, 252, 252, 294, 294, 299, 299, 456,
	456, 455, 195, 195, 195, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 205, 205, 205, 364, 364, 364,
	364, 365, 365, 365, 365, 366, 366, 366, 362, 362,
	363, 363, 303, 304, 304, 404, 404, 360, 360, 361,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 411, 411, 411,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 467, 467, 467, 452,
	452, 452, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 250, 250, 250, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 305,
	305, 306, 306, 408, 408, 408, 408, 408, 408, 409,
	409, 410, 410, 410, 410, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 292, 247, 247, 247, 307, 300,
	300, 301, 301, 295, 295, 295, 295, 295, 295, 295,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 296, 296, 298, 298, 309, 309, 309, 308,
	308, 308, 308, 308, 308, 308, 207, 207, 207, 207,
	289, 289, 289, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 197, 197, 197, 197, 201, 201,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 202, 202, 202, 202, 200, 200,
	200, 200, 200, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 100,
	101, 101, 199, 255, 255, 385, 385, 388, 388, 386,
	386, 387, 389, 389, 389, 390, 390, 390, 391, 391,
	391, 394, 394, 260, 260, 260, 266, 266, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	7, 4, 1, 3, 2, 2, 2, 1, 3, 3,
	4, 0, 1, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 1, 1, 7, 7, 8, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 2, 5, 5, 0, 2,
	7, 0, 1, 0, 1, 5, 5, 3, 3, 2,
	4, 4, 4, 4, 4, 1, 1, 1, 3, 3,
	1, 1, 1, 6, 8, 0, 1, 1, 1, 1,
	5, 5, 0, 1, 1, 3, 3, 3, 4, 6,
	7, 4, 4, 7, 8, 3, 3, 3, 0, 2,
	2, 0, 2, 2, 1, 1, 1, 1, 0, 1,
	4, 4, 5, 4, 3, 1, 3, 1, 1, 3,
	5, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 1,
	3, 1, 4, 6, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 5, 3, 4, 6, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 3, 0, 1,
	1, 0, 2, 2, 0, 2, 3, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 7, 1, 3, 0, 1, 1, 3,
	1, 3, 0, 1, 1, 1, 12, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 7,
	7, 1, 4, 1, 1, 3, 4, 3, 0, 1,
	1, 1, 0, 2, 7, 8, 0, 2, 6, 0,
	2, 2, 3, 3, 4, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 1, 0, 1, 1, 1, 11, 0, 2, 3,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 6, 0, 4, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 11,
	9, 11, 2, 2, 4, 5, 1, 3, 0, 3,
	5, 10, 0, 2, 0, 3, 2, 4, 3, 0,
	2, 1, 0, 2, 3, 0, 2, 3, 0, 3,
	2, 4, 3, 0, 1, 0, 6, 0, 3, 5,
	0, 4, 0, 3, 1, 3, 4, 5, 0, 3,
	1, 3, 2, 3, 1, 2, 0, 4, 6, 5,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 5,
	6, 5, 0, 3, 0, 1, 0, 1, 1, 3,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 4,
	1, 3, 3, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 1, 1, 1, 7,
	7, 2, 1, 7, 7, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 1, 4, 4, 4, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 5,
	0, 1, 3, 0, 1, 0, 2, 0, 1, 6,
	8, 6, 5, 5, 6, 6, 6, 6, 5, 6,
	6, 6, 6, 6, 6, 6, 6, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 4, 4, 4,
	3, 4, 6, 6, 7, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 8, 4, 2, 3, 2, 4, 2,
	2, 4, 6, 2, 2, 4, 6, 4, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -492, -500, -2, -5, 556, -1, -4, -101, -75,
	-7, -103, -104, -8, -99, -9, -10, -12, -79, -94,
	-96, -98, -97, -39, -11, -93, -70, -71, -81, -87,
	-90, -91, -92, -105, -100, -102, -135, -106, -107, 549,
	-76, -77, -78, -30, -29, -28, -27, -127, 555, 410,
	12, 459, -13, -14, -457, -15, 238, -272, -273, -274,
	-276, -501, -40, -41, -42, -49, -50, -51, -52, -53,
	-63, -64, -65, -43, -44, -45, -48, -46, -56, -55,
	-57, -58, -59, -60, -61, -62, -47, -130, -131, -66,
	-68, -67, -73, -69, -74, -129, 213, -72, 62, -82,
	-83, -84, -85, -86, -88, -89, 340, 346, 400, 548,
	47, -136, -138, 559, 560, 141, 142, 144, 145, -31,
	-32, -33, -34, -35, -36, -38, -37, 209, 14, 492,
	-16, -19, -17, -20, -18, -25, -26, -24, -21, -23,
	-128, -22, 233, 232, 37, 296, 297, 298, 344, 231,
	210, 13, 30, 41, 322, -137, 68, 211, -139, 10,
	563, -6, -3, -2, -114, -118, -122, -125, -126, -123,
	-124, -4, -101, 99, 223, 550, -269, 336, 551, 553,
	552, 71, 79, -263, -265, 340, 346, 548, 560, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 462, 535, 536, 537, 538,
	320, 321, 489, 250, 274, 370, 277, 284, 141, 160,
	154, 182, 174, 149, 254, 289, 255, 78, 144, 445,
	89, 422, 397, 147, 269, 271, 273, 276, 256, 323,
	170, 165, 268, 252, 163, 257, 39, 258, 187, 259,
	260, 494, 418, 319, 424, 281, 395, 164, 419, 272,
	421, 189, 193, 436, 437, 158, 159, 426, 439, 186,
	230, 42, 491, 242, 440, 191, 185, 181, 448, 285,
	283, 184, 157, 180, 253, 51, 195, 194, 196, 391,
	392, 393, 394, 261, 262, 334, 435, 177, 166, 324,
	150, 22, 443, 237, 423, 347, 263, 278, 286, 190,
	192, 244, 249, 493, 399, 248, 282, 441, 162, 241,
	270, 236, 444, 151, 349, 264, 145, 275, 438, 447,
	50, 362, 156, 148, 227, 142, 246, 251, 11, 265,
	266, 267, 288, 287, 279, 178, 243, 183, 168, 155,
	179, 143, 245, 446, 363, 546, 322, 380, 176, 173,
	247, 220, 442, 425, 146, 384, 364, 171, 290, 542,
	543, 544, 335, 318, 291, 292, 169, 234, 416, 417,
	293, 295, 390, 311, 365, 398, 371, 366, 202, 299,
	428, 430, 188, 545, 300, 301, 302, 420, 303, 304,
	305, 306, 339, 561, -346, -344, -269, 548, 346, 340,
	322, 560, -178, -269, 562, -145, 38, -191, -269, -145,
	-72, -14, -13, -137, -138, -191, 217, -277, 23, 395,
	-80, 396, 213, 68, -269, -9, -92, -8, -99, -70,
	-135, 400, -275, -269, 296, 296, -275, 217, -269, 248,
	378, -396, 223, -350, -323, 249, -349, -325, -352, -326,
	31, 209, 211, 210, 245, 14, 344, 219, 12, 10,
	345, 231, 24, 25, 27, 13, 346, 348, 28, 349,
	352, 353, 354, 41, 357, 358, 238, 71, 79, 74,
	256, -177, -269, -301, -295, 96, 239, -297, -290, -291,
	-293, -437, -431, -288, 68, 123, 124, 131, 97, -292,
	-380, 35, 99, 499, 460, -248, -249, -250, -251, -252,
	-269, -432, -430, 74, 80, 83, 86, 87, 85, 84,
	167, 82, 75, 135, 136, -138, 71, -452, 507, -264,
	528, 535, 536, 537, 538, 527, 47, -402, -410, 216,
	-408, 134, 172, 234, 168, 12, 129, 390, 169, 504,
	524, 462, 508, 531, 501, 502, 496, 497, 498, 500,
	509, 511, 523, -411, 519, 529, 530, 517, 532, 533,
	534, 73, 72, 522, 521, 510, 505, 506, 512, 495,
	503, 513, 514, 520, 525, 526, 328, 89, 329, 330,
	452, 323, 331, 223, 395, 56, 332, 333, 334, 335,
	336, 459, 337, 57, 338, 327, 238, 380, 339, 171,
	188, 464, 463, 465, 456, 453, 451, 454, 455, 457,
	458, 515, 516, 518, -108, -109, 540, -154, -155, -241,
	19, 6, 7, 8, 9, -490, 397, 493, 74, 146,
	143, -337, 146, 95, 151, 150, -337, 299, 244, 341,
	220, 320, 380, 303, 248, -317, -315, -398, 293, 289,
	218, 228, 227, 90, 452, 216, 355, -468, -469, 206,
	207, 208, -459, 485, -458, -269, 330, 26, 217, 341,
	244, 430, 428, 429, 431, 432, 433, 434, -54, -412,
	-395, 425, 424, -281, 417, 423, 415, 427, 418, 321,
	305, 304, 209, 557, 486, -260, 365, 398, 449, 450,
	342, 399, 436, 438, 419, 89, 175, 172, 220, 217,
	320, 452, 380, 303, -468, 143, 436, 438, 248, 378,
	40, -343, 390, -342, -344, 437, 448, 72, 73, 435,
	-260, 89, 416, 416, -155, -241, -154, -136, -138, -102,
	-457, 218, 320, 380, 248, 219, 217, 220, 452, 296,
	341, 244, 303, -397, -465, 31, -403, 203, 204, 205,
	32, 33, -1, 103, 563, -295, -295, -6, 566, -6,
	-295, -269, -269, 138, -197, -201, -198, -200, -199, -203,
	-202, 172, 173, 134, 176, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 30, 188, 234, 168, 169,
	170, 171, 189, 154, 174, 490, 197, 155, 198, 156,
	199, 157, 200, 158, 159, 201, 160, 163, 164, 165,
	162, 137, 68, 137, 74, -161, 240, -191, 137, -161,
	-155, -154, -155, -191, -253, -269, 397, 106, -80, -80,
	396, -460, -461, -462, -464, 213, 396, 395, 137, 256,
	15, -275, -275, 66, -191, -325, 248, -350, -323, 35,
	65, 138, 221, 138, 65, 68, 342, 320, 380, 343,
	452, 217, 355, 220, 248, 356, 320, 380, 217, 220,
	452, 248, 320, 217, 220, 380, 248, 356, 415, 416,
	220, 26, 347, 350, 351, 416, -416, 448, 138, 95,
	92, 93, 94, -295, 113, -308, 106, 107, 108, 109,
	110, 111, 112, 120, 119, 130, 123, 124, 125, 126,
	127, 128, 129, 121, 122, 116, 96, 114, 118, 115,
	98, -138, -295, -301, 47, -293, -293, -293, -293, -380,
	-299, -295, 68, 68, 137, 74, -295, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, -409,
	68, 68, -305, -306, 68, 68, -288, -253, 68, 74,
	74, 68, 68, 68, 74, -306, -306, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, -155, 138, 68,
	-110, 38, -157, 21, -139, -138, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 80, 561, 202, 441, 492,
	149, 150, 151, -176, -269, -178, -169, -269, -313, 223,
	-313, -313, -313, -313, 219, -313, 217, 217, 217, -313,
	-470, 153, 138, -459, -160, 68, -280, 114, 118, 23,
	246, 246, 246, -280, 283, -502, -503, 15, 116, -278,
	-503, -278, -278, -280, -504, 219, 426, 42, 247, 246,
	-156, -157, -156, 420, 416, -367, 421, 422, -282, -503,
	-281, -280, -280, -281, -280, -280, -280, 217, 220, 452,
	303, 558, -502, -502, 30, 30, -396, -191, -396, 486,
	-261, -269, -396, -396, -471, 222, -497, -496, 439, -499,
	441, 143, -344, 143, -344, -325, 248, 248, 138, 106,
	23, -345, 106, 117, -344, -344, -345, -345, -212, 40,
	-268, 134, -269, 74, -212, 40, -494, -493, -191, -156,
	-139, -138, 69, 69, 69, -396, -396, -396, -396, -396,
	-396, -396, -396, -275, -169, -178, 223, -396, -140, -141,
	125, -295, -269, -140, -3, -116, -115, 100, 101, 103,
	551, 336, 550, 554, 548, -344, 40, -391, 363, 362,
	-385, -387, 68, -386, 68, -386, -386, -386, 68, 68,
	-388, 68, -388, -388, -385, -389, 68, -389, -390, 68,
	-389, -269, -300, -301, -269, 38, -405, 47, -135, 68,
	30, 68, -269, -406, 47, -135, 68, 30, -156, -110,
	-157, 137, 80, 74, -80, 69, 138, -463, 86, 87,
	-466, 186, 178, -269, -95, 74, -7, -8, -9, -10,
	-39, -70, -135, -433, -431, 68, 31, 389, 65, 15,
	-351, 217, 452, 341, 244, 220, 320, -349, -332, -329,
	-327, -268, -325, -328, -327, -354, -253, 416, -111, 401,
	295, -295, -295, -295, -295, -295, 85, 96, 318, 86,
	87, -290, -309, 31, 291, 292, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, -291, -291, -291, -298, -307,
	-380, 68, 116, 114, 118, 115, 98, -293, -293, -291,
	-291, 69, 138, -456, -455, 100, -295, -295, -269, -453,
	-454, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 332, 327, 333, 331, 323, 339, 334, 335,
	171, 483, 484, 477, 478, 479, 480, 481, 482, -300,
	-300, -295, -453, -300, -247, 32, 31, -301, -301, -301,
	69, -295, -467, 316, 315, 317, -158, -269, -300, 69,
	69, 69, 80, -301, -301, -300, -291, -300, -454, -247,
	-247, -301, -301, -247, -247, -247, -247, 125, -247, -247,
	-247, -247, -247, -247, -247, -247, 69, 69, 69, -156,
	-109, -414, -413, -295, 40, 541, -110, -295, -153, -152,
	-295, -491, 74, 74, 564, 442, 443, 147, 150, 149,
	34, 68, 68, 137, -191, 96, -473, -269, -333, -330,
	-327, -269, -323, -269, -269, -313, -313, -313, -191, -471,
	-458, 34, -159, -269, -237, 16, -293, -293, -327, 248,
	-502, -280, -280, -262, -261, -282, -277, -282, -282, -237,
	-503, -280, -280, -282, -278, -237, -269, 416, -237, -237,
	-367, -279, -269, -279, -313, -261, -262, -262, -191, -227,
	-228, 214, 211, 210, -234, 212, 360, 250, -314, 254,
	78, 255, 397, 256, 219, 258, 259, 260, 230, 261,
	262, 263, 390, 264, 265, 266, 267, 343, 6, 306,
	40, -473, -473, 30, 30, -333, -269, -148, -143, -147,
	-144, -149, -240, -242, -146, 68, -191, -138, -269, 138,
	440, 442, 443, -497, -345, -497, -345, 31, 389, -348,
	389, 31, -323, -342, 436, 438, -338, 74, 390, -328,
	-347, 65, 134, -413, -345, -345, -347, -347, 133, 138,
	-495, 441, 442, 206, -110, -193, -191, -473, -332, -323,
	-269, -193, -193, -269, 68, 35, -269, -236, 138, -235,
	15, -270, -269, 34, 74, 137, -236, -117, -115, 102,
	-295, -6, 550, -295, -6, -6, -295, -6, -295, -394,
	364, 80, 80, -255, 74, -255, 80, 80, 80, 69,
	74, -336, 65, -407, -302, -451, 540, -163, 69, -158,
	-449, -450, -158, -162, -269, -407, -163, 69, -449, -110,
	-110, -269, 23, -80, -461, 137, 138, -159, -351, -331,
	-328, -353, 125, -269, -339, 138, 492, 567, 72, 221,
	-483, -482, 381, 69, 138, -417, 222, 459, 74, 564,
	202, 85, 318, 86, 87, -380, -301, -298, -293, -293,
	-291, -291, -296, 235, -296, 95, -295, -294, -455, 102,
	-295, 34, 138, 66, 137, 69, 69, 15, 15, 69,
	-295, 69, 69, 69, 69, 15, 15, -295, 69, 137,
	69, 69, 69, 69, 66, 69, 138, 69, 138, -301,
	-295, 69, 69, -295, -295, -295, -301, 69, -295, -295,
	-295, -295, -295, -295, -295, -295, -361, 411, -361, -361,
	138, 69, 74, 138, 22, 138, -150, 36, 37, -259,
	-258, 74, 148, 151, 151, 150, -177, -179, -180, -181,
	-182, -183, 116, 139, 140, -170, -171, -172, -173, -197,
	-253, 173, 176, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 234, 168, 169, 170, 171, 189,
	154, 174, 155, 156, 157, 158, 159, 160, 163, 164,
	165, 162, -269, -160, 35, -476, 367, -484, 138, 40,
	-482, 452, -316, 66, -133, 15, -191, -191, -191, -204,
	34, 15, -142, -192, -269, 68, 69, 138, -295, -324,
	66, -269, -262, -237, -237, -191, -269, -237, -237, -280,
	-282, -282, -278, 137, -261, -160, 138, -190, -194, 225,
	-187, -189, -253, -285, -188, 228, -446, 226, 224, 90,
	229, 280, 91, 219, -229, 219, 91, -269, 225, 229,
	224, -230, 219, 221, -266, 106, -266, -260, 133, -266,
	-266, -266, -266, 257, 257, -266, -266, -266, -266, -266,
	-266, -266, -266, -266, -266, -266, -266, -266, -266, 68,
	-477, 367, 30, 326, 326, -484, -134, 320, 30, -243,
	-244, -245, -246, 54, 58, 60, 55, 56, 57, 61,
	30, 138, -267, -271, 34, -269, 74, -267, -138, -143,
	-148, -267, 68, -496, -498, 444, 441, 447, -347, -347,
	221, 68, 106, -347, -347, 40, -268, -493, 448, 442,
	-168, 23, 138, 65, -170, -178, -237, -141, -143, -269,
	74, -269, 125, -237, 103, -6, 101, -121, -120, -119,
	104, 548, 554, 103, 103, 103, 69, 69, 69, 138,
	69, 69, 69, 138, 69, 138, -420, 421, 39, 138,
	68, 69, 138, 47, 138, 106, 69, 138, 69, 47,
	-168, 137, 397, -269, -431, 69, -353, 138, 221, 137,
	137, -329, 346, -268, -331, 20, 492, -253, 38, -259,
	564, 69, -296, -296, 95, -293, -290, 69, 103, -295,
	101, -195, -197, 362, 363, -196, -202, 134, 172, 234,
	171, 170, 168, 362, 363, -212, -269, -295, -295, 69,
	-295, -295, 15, -269, -212, -291, -295, -155, 69, -360,
	-361, -360, 69, 69, 69, 69, -360, 69, 69, 69,
	69, 69, 69, 69, 69, 68, -413, -420, -295, -295,
	-152, -151, 43, 565, 138, 106, 151, 354, 69, 138,
	-253, 69, 138, -197, 34, -479, 423, 369, 379, -266,
	-287, -286, 322, 41, -400, 390, 375, 376, -330, 248,
	-269, 65, 310, 311, 312, 313, -311, -312, -310, -314,
	-473, 68, 68, 68, -381, 300, -197, -191, -142, -269,
	15, 138, -472, 137, -1, -269, -323, -280, -237, -503,
	-237, -280, -280, -282, -269, 34, -228, -232, 44, 46,
	-194, -197, -188, -445, -446, -313, -269, 91, -445, 91,
	68, -269, -269, -269, 91, 91, -269, -231, -279, 80,
	80, -266, -266, 80, 74, 74, 74, -266, -266, 80,
	74, -271, 80, 80, 80, 80, 40, 74, -217, 40,
	268, 272, 269, 270, 271, 80, 40, 80, 40, 80,
	40, -269, 68, -447, -448, 74, -479, -266, 326, -344,
	106, -287, -132, 78, 31, -164, 214, 211, -473, -335,
	-334, -253, -147, -147, -147, -147, 54, 54, 54, 59,
	54, 59, 54, -245, -335, -149, -160, -271, 69, -489,
	-488, -487, -485, 62, 222, 63, -300, 441, 445, 446,
	-331, -283, 74, -338, 13, -191, -191, 69, -239, 17,
	137, -239, 99, -6, -117, -119, -295, -6, -295, 550,
	336, 551, 74, 80, 80, -428, 407, 402, 404, 91,
	-302, -415, -414, 47, -135, -158, -407, -450, -413, -269,
	47, -135, -407, -269, 80, 15, -328, -323, 125, 125,
	-269, 347, -339, 74, 368, 74, 217, 565, -259, -290,
	-295, 69, -205, 159, 158, -205, 69, -386, -386, -385,
	-388, -385, -205, -205, 69, 69, 23, 69, 69, 69,
	-295, 69, 69, 138, -404, 461, -360, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, -360, -360, -360, -304,
	-303, 240, -428, 44, 45, -258, 74, 74, 74, -181,
	-197, 215, -172, 40, -135, -480, 78, -474, 74, -269,
	-481, 78, 370, 136, 324, 40, 371, 372, 387, 319,
	80, 80, 377, -475, -269, -134, -191, -310, -260, 133,
	259, 303, -184, -185, -186, -194, -187, -189, -184, -184,
	-382, 302, 20, 80, 124, -161, 66, 137, -143, -192,
	-269, 125, 69, -237, -269, -237, -237, -280, -135, -253,
	-232, -209, -208, -206, 85, 96, 40, 360, -207, 78,
	133, 273, 251, 274, -226, -284, 65, 366, 224, 90,
	91, 348, -285, -443, -269, -441, -443, -269, -441, -441,
	-313, -295, -269, -233, 308, 309, -212, -212, 74, 74,
	-213, 251, -193, 69, 138, 106, -480, -474, 106, -345,
	74, -481, 74, 138, -164, -164, -237, 138, 106, -166,
	-165, 65, 66, -167, 65, -165, 54, 54, -237, -487,
	-486, 23, -446, -446, -446, 69, 69, -238, 18, 20,
	125, -238, 103, 101, 103, 103, -269, 69, 69, -392,
	542, -424, -426, 402, 20, 20, 13, 69, -407, -407,
	-323, -339, 390, -191, 565, -295, 69, -295, 69, 74,
	-155, 20, -392, -174, -197, -288, 74, -478, 381, 74,
	74, 80, 40, 80, 136, 373, -401, -132, 68, -266,
	-266, -266, -269, 69, 138, 69, 69, -383, 239, 80,
	124, 80, 124, 80, -267, -143, -269, -237, -472, 137,
	-237, -237, -206, 85, -291, 74, -214, -268, 134, -215,
	40, 272, 268, -216, 40, 252, 253, -218, 68, 280,
	13, 91, 91, -191, 68, 68, 66, 290, 68, 68,
	-443, 69, 252, 253, 69, -448, 74, -478, 74, -347,
	-473, -155, -334, -413, -295, 68, -295, 68, 54, 19,
	17, -295, -301, 223, -6, 551, 336, -219, 543, 74,
	20, 74, -422, 74, -335, -113, -418, -367, 69, 69,
	-360, -363, -362, -366, 408, 282, 414, -301, -219, 491,
	20, 492, 323, 40, 80, 40, 374, -318, -320, -253,
	68, -212, -214, 74, -210, -211, -234, -186, -112, -111,
	-210, -384, 142, 80, 124, 80, 80, -237, -237, 80,
	68, -408, -319, 68, -318, -318, -444, 310, 311, 312,
	314, 313, -444, -318, -318, 68, -341, -340, 281, 96,
	-156, -159, -442, -269, 224, 20, 20, -269, -269, -256,
	544, 80, 74, 404, -393, 545, -427, 407, -421, -419,
	402, 403, 404, 405, 69, -365, 98, 373, 377, -289,
	-292, 80, 83, 167, 136, -256, -175, -269, 74, 368,
	74, 323, 69, 138, -385, -295, -355, 240, 138, -234,
	-113, -355, -399, 150, 301, 492, 80, 124, 80, -155,
	69, -295, -305, -221, -220, 488, -318, 69, 69, 69,
	69, -318, 281, 69, 69, 138, 68, 20, 74, -429,
	222, -425, -426, 406, -419, 20, 404, 20, 20, -364,
	-365, 377, -289, -292, 540, 412, 412, 412, 34, 390,
	-321, -320, -150, 69, -356, 289, 20, -234, -356, 301,
	80, 124, 80, -156, 69, -225, -223, -224, 65, 419,
	278, 279, 69, -321, -321, -321, -321, 69, -269, 224,
	-257, -269, -422, -436, 68, 80, -424, -423, -425, 20,
	-422, 20, -422, -422, 95, 413, 413, 413, 74, -322,
	230, 78, 492, 308, 309, -150, 20, -357, 282, 283,
	-358, -371, 285, 80, -340, -224, 65, -223, 65, 14,
	13, -226, 69, 138, -440, 30, 69, -435, -434, -254,
	-430, -269, 407, 408, 74, -422, -364, -266, 74, 307,
	-253, 68, -369, 286, 68, -367, 68, -367, 91, 311,
	-222, 275, 276, 30, 150, -222, -269, -439, -438, -437,
	69, 138, 137, 80, -269, -354, -359, 287, 80, -291,
	68, -291, 68, -368, 284, 68, 85, 40, 277, 138,
	106, -434, -269, 69, -373, 68, 20, 69, -354, 69,
	-354, 68, 106, -291, -438, 40, -295, 137, -374, -372,
	240, -358, 69, 69, 69, -354, 80, 69, -269, 69,
	138, -269, -370, 288, 69, -372, -375, 47, 80, -379,
	-376, 68, -234, 242, 116, -379, -234, -378, -377, 287,
	243, 68, 69, 138, -269, 239, 68, -301, -377, -376,
	-301, 69, 69,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 777, 778, 779, 780, 781, 0, 0,
	0, 0, 551, 552, 0, 523, 0, 0, 0, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	354, 355, 356, 357, 358, 359, 0, 288, 284, 209,
	210, 211, 212, 213, 295, 296, 393, 0, 0, 0,
	0, 632, -2, 56, 0, 277, 0, 268, 268, 782,
	783, 784, 785, 786, 787, 788, 789, -2, 564, 0,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 343, 344, 345, 339, 340, 342, 341, -2,
	0, 564, 0, 0, 0, 652, 0, 0, 669, 691,
	23, 0, 7, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 0, 0, 19, 0, 19, 0, 0,
	0, 1077, 1078, 1079, 1080, -2, 1554, 1532, 1694, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1695, 0, 261, 259, 1532, 1554, 1614,
	1647, 1694, 0, 794, 0, 610, 0, 615, 1038, 610,
	289, 553, 554, 652, 652, 521, 0, 325, 0, 1545,
	329, 0, 0, 0, 518, 319, 320, 321, 322, 323,
	324, 0, 0, 776, 0, 0, 315, 0, 283, 1605,
	0, 0, 0, 0, 0, 0, 153, 866, 155, 868,
	159, 166, 0, 0, 171, 172, 175, 176, 177, 178,
	179, 0, 183, 0, 185, 188, 0, 190, 191, 0,
	194, 195, 196, 0, 206, 207, 208, 869, 870, 871,
	-2, 84, 792, 1469, 1361, 0, 1368, 1369, 1380, 1391,
	1150, 1151, 1152, 1153, 0, 0, 0, 0, 0, 1160,
	1161, 0, 1177, 1710, 0, 1167, 1168, 1169, 1170, 1171,
	93, 105, 106, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 0, 1334, 1137, 1077, 0, 1718, 0,
	1738, 1743, 1744, 1745, 1746, 1737, 0, 0, 1319, 0,
	1309, 0, 0, -2, -2, 0, 0, 1673, -2, 1715,
	1734, 1742, 1719, 1741, 1712, 1713, 1707, 1708, 1709, 1711,
	1720, 1722, 1733, 0, 1729, 1739, 1740, 0, 0, 0,
	0, 107, 108, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1325, -2, 1327, 1328,
	1330, -2, 1332, 1333, -2, 1336, 1337, 1338, -2, -2,
	1341, 1342, 1343, 1344, 1345, 1346, 1349, -2, -2, -2,
	-2, 1321, 1322, 1323, 1324, 1313, 1314, 1315, 1316, 1317,
	1318, -2, -2, -2, 652, 727, 0, -2, 0, 0,
	0, 674, 677, 680, 683, 0, 57, 58, 0, 278,
	279, 267, 269, 0, 273, 0, 266, 0, 0, 0,
	898, 898, 898, 898, 898, 0, 898, 0, 0, 0,
	898, 873, 874, 875, 896, 897, 944, 569, 565, 566,
	567, 568, 640, 0, 642, 645, 498, 445, 0, 0,
	0, 498, 0, 459, 451, 0, 0, 0, 498, 0,
	0, 647, 647, 0, 501, 508, 498, 498, -2, 498,
	498, 498, 0, 0, 465, 466, 467, 451, 451, 470,
	471, 472, 483, 484, 509, 1493, 0, 0, 393, 0,
	393, 0, 393, 393, 571, 1642, 1552, 1619, 1605, 0,
	0, 234, 1673, 239, 0, 1553, 1568, 0, 0, 1586,
	0, -2, 0, 305, 647, 0, 653, 0, 652, 0,
	0, 393, 393, 393, 393, 393, 393, 393, 393, 0,
	0, 0, 393, 0, 0, 692, 693, 688, 689, 690,
	694, 695, 5, 6, 19, 0, 0, 0, 0, 0,
	0, 63, 62, 0, 1470, 1488, 1425, 1426, 1427, 1475,
	1429, 1479, 1479, 1479, 1479, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 0, 0, 1468, 1448, 1477, 1477,
	1477, 1475, 1472, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1482, 1482, 1485,
	1482, 0, 1359, 0, 0, 0, 0, 614, 0, 0,
	647, -2, 0, 522, 326, 1081, 0, 0, 330, 331,
	0, 0, 346, 0, 349, 334, 335, 336, 0, 133,
	0, 317, 318, 0, 0, 285, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 163, 160, 167, 170,
	180, 187, 0, 199, 201, 204, 161, 168, 173, 174,
	181, 202, 162, 164, 165, 169, 203, 205, 182, 186,
	200, 184, 189, 192, 193, 198, 0, 134, 0, 0,
	0, 0, 0, 1367, 0, 0, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 1361, 0, 0, 1156, 1157, 1158, 1159, 1162,
	0, 1178, 0, 0, 0, 1423, 0, 1359, 1359, 0,
	1359, 1355, 0, 0, 0, 0, 0, 0, 1359, 1295,
	0, 0, 1297, 1310, 0, 0, 1299, 1300, 0, 1303,
	1304, 1359, 0, 1359, 1308, 1291, 1292, 0, 1355, 1355,
	0, 0, 1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355,
	1355, 1355, 1355, 1355, 0, 0, 0, 647, 0, 0,
	635, 0, 616, 0, 671, 673, 0, 675, 676, 678,
	679, 681, 682, 684, 685, 59, 0, 0, 0, 0,
	271, 0, 276, 0, 791, 0, 0, 807, 0, 0,
	0, 0, 0, 0, 0, 0, 898, 898, 898, 0,
	571, 570, 0, 641, 0, 0, 700, 0, 0, 0,
	451, 498, 498, 457, 458, 453, 452, 504, 505, 501,
	0, 501, 501, 700, 0, 477, 478, 479, 498, 498,
	485, 648, 486, 487, 501, 0, 506, 507, 700, 0,
	0, 700, 700, 0, 495, 496, 497, 0, 0, 898,
	0, 514, 453, 453, 1494, 1495, 0, 907, 0, 0,
	0, 517, 0, 0, 0, 572, 214, 217, 0, 220,
	0, 1642, 0, 1642, 0, 227, 0, 0, 0, 0,
	0, 0, 257, 258, 0, 0, 0, 0, 248, 251,
	1032, 1033, 863, 864, 252, 253, 297, 298, 0, 616,
	670, 672, 666, 667, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 0, 549, 0, 0, 708, 702,
	704, 771, 93, 708, 8, 80, 77, 0, 19, 0,
	0, 19, 19, 0, 19, 262, 0, 1491, 1489, 1490,
	1428, 1476, 0, 1453, 0, 1454, 1455, 1456, 0, 0,
	1449, 0, 1450, 1451, 1452, 1444, 0, 1445, 1446, 0,
	1447, 260, 0, 1360, 795, 0, 589, 602, 584, 0,
	591, 0, 1039, 573, 602, 575, 0, 591, 616, 638,
	616, 0, 327, 0, 332, 0, 0, 348, 350, 351,
	352, 337, 338, 519, 313, 314, 306, 307, 308, 309,
	310, 311, 312, 316, 103, 0, 286, 287, 0, 0,
	0, 147, 148, 149, 150, 151, 152, 154, 138, 539,
	541, 855, 867, 0, 858, 0, 157, 197, 130, 0,
	0, 1362, 1363, 1364, 1365, 1366, 1370, 0, 1372, 1374,
	1376, 1378, 0, 1396, -2, -2, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1381, 1394,
	1395, 0, 0, 0, 0, 0, 0, 1392, 1392, 1387,
	0, 1154, 0, 1175, 1179, 0, 0, 0, 94, 1354,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 0,
	0, 1361, 0, 0, 0, 1356, 1357, 0, 0, 0,
	1250, 0, 0, 1256, 1257, 1258, 0, 597, 0, 1320,
	1296, 1311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	728, 0, 606, 608, 609, 0, 636, 649, 654, 655,
	658, 55, 60, 53, 918, 280, 281, 0, 0, 275,
	0, -2, 809, 0, 645, 0, 0, 821, 391, 849,
	0, 0, 865, 888, 894, 0, 0, 0, 922, 0,
	643, 0, 0, 740, 444, 0, 499, 500, 448, 1605,
	453, 700, 700, 460, 454, 461, 503, 462, 463, 464,
	0, 700, 700, 498, 501, 488, 502, 501, 491, 492,
	0, 510, 515, 511, 0, 513, 468, 469, 645, 361,
	362, 0, 0, 0, 367, 0, 1496, 1496, 0, 1496,
	1496, 1496, 1496, 0, 0, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 0,
	908, 388, 0, 0, 0, 391, 839, 713, 0, 714,
	715, 711, 742, 766, 766, 0, 766, 746, 1038, 0,
	0, 225, 226, 215, 0, 216, 0, 228, 229, 0,
	231, 232, 233, 240, 1552, 1619, 235, 237, 0, 0,
	241, 254, 255, 256, 0, 0, 246, 247, 0, 0,
	300, 301, 303, 0, 664, 536, 1036, 537, 538, 542,
	0, 544, 545, 546, 809, 0, 844, 700, 0, 709,
	0, 705, 772, 0, 774, 0, 700, 0, 78, 19,
	0, 71, 68, 0, 0, 0, 0, 0, 1471, 1424,
	1492, 0, 0, 0, 1473, 0, 0, 0, 0, 61,
	618, 580, 0, 583, 599, 0, 603, 0, 0, 595,
	588, 592, 0, 0, 612, 574, 0, 0, 579, 664,
	639, 1082, 0, 333, 347, 0, 0, 0, 0, 141,
	852, 0, 142, 146, 136, 0, 0, 0, 857, 0,
	854, 859, 0, 156, 0, 0, 131, 132, 913, 918,
	0, 1371, 1373, 1375, 1377, 1379, 0, 1382, 1392, 1392,
	1388, 0, 1383, 0, 1385, 0, 1362, 0, 1180, 0,
	0, 0, 0, 0, 0, 1240, 1241, 0, 0, 1245,
	0, 1247, 1248, 1249, 1251, 0, 0, 0, 1255, 0,
	1294, 1312, 1298, 1301, 0, 1305, 0, 1307, 0, 652,
	0, 1217, 1217, 0, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 1172, 0, 1173, 1174,
	0, 729, 618, 0, 0, 0, 661, 659, 660, 0,
	916, 0, 282, 270, 272, 0, 0, 0, 797, 798,
	800, 0, 803, 804, 805, 0, 810, 811, 813, 814,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1537, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 808, 0, 899, 828, 1496, 395, 0, 0,
	851, 0, 0, 0, -2, 0, 0, 0, 0, 924,
	0, 0, 0, 558, 562, 23, 646, 0, 701, 446,
	0, 447, 498, 455, 456, 700, 1038, 480, 481, 700,
	498, 498, 501, 0, 512, 0, 907, 364, 371, 0,
	1047, 1048, 0, 0, 1052, 1059, 898, 1107, 0, 1059,
	0, 0, 1061, 1062, 365, 0, 0, 377, 0, 0,
	0, 366, 0, 0, 0, 1497, 0, 1496, 1496, 0,
	0, 0, 0, 1496, 1496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	828, 1496, 0, 0, 0, 395, 836, 0, 0, 0,
	0, 0, 0, 733, 0, 0, 732, 0, 0, 0,
	0, 0, 645, 767, 0, 769, 770, 744, -2, 0,
	713, 749, 1359, 218, 219, 0, 0, 224, 242, 244,
	0, 0, 0, 243, 245, 249, 250, 299, 302, 304,
	634, 0, 0, 0, 0, 550, 698, 703, 710, 773,
	775, 94, 706, 698, 0, 81, 19, 80, 72, 73,
	0, 19, 0, 0, 0, 0, 1481, 1480, 1466, 0,
	1467, 1478, 1483, 0, 1486, 0, 622, 0, 0, 602,
	604, 0, 0, 602, 0, 0, 611, 0, 0, 602,
	637, 0, 0, 520, 104, 353, 0, 0, 0, 0,
	0, 540, 0, 856, 138, 0, 0, 158, 0, 0,
	918, 1358, 1384, 1386, 0, 1393, 1389, 1155, 1163, 1176,
	0, 0, 1182, 1194, 1194, 0, 1185, 1479, 1479, 1188,
	1475, 1477, 1475, 1194, 1194, 0, 95, 0, 0, 1246,
	0, 0, 0, 598, 0, 0, 0, 1215, 1217, 1222,
	1218, 1223, 1217, 1217, 1217, 1217, 1228, 1217, 1217, 1217,
	1217, 1217, 1217, 1217, 1217, 1213, 607, 622, 650, 651,
	656, 657, 0, 54, 918, 0, 274, 0, 0, 802,
	0, 0, 0, 815, 0, 832, 829, 830, 831, 0,
	846, 396, 397, 398, 399, 0, 0, 0, 850, 0,
	839, 0, 889, 890, 891, 892, 893, -2, 902, 0,
	0, 1040, 1040, 1040, 932, 0, 923, 610, 0, -2,
	0, 0, 560, 0, 0, 741, 449, 700, 473, 0,
	489, 700, 700, 498, 516, 0, 363, 369, 372, 0,
	371, -2, 1051, 1071, 1060, 1071, 1108, 1071, 1071, 898,
	0, 375, 376, 378, 0, 380, 0, 368, 374, 991,
	992, 0, 0, 995, 996, 997, 998, 0, 0, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1026,
	1027, 1028, 1029, 1030, 1031, 1011, 1012, 1013, 1014, 1015,
	1016, 1023, 0, 0, 1020, 0, 832, 0, 0, 0,
	0, 846, 838, 0, 840, 841, 0, 0, 581, 700,
	292, 0, 736, 730, 0, 719, 734, 735, 722, 0,
	724, 0, 720, 721, 700, 712, 743, 768, 745, 748,
	750, 751, 757, 0, 0, 0, 0, 221, 222, 223,
	230, 0, 415, 236, 665, 1037, 543, 548, 696, 0,
	0, 696, 76, 79, 0, 74, 0, 0, 0, 0,
	66, 64, 1474, 0, 0, 624, 118, 0, 0, 0,
	600, 0, 605, 602, 587, 596, 586, 593, 594, 613,
	602, 578, 577, 1083, 328, 0, 853, 138, 143, 144,
	145, 139, 137, 860, 0, 862, 0, 914, 0, 1390,
	1181, 1164, 1183, 1195, 1196, 1184, 1165, 1186, 1187, 1189,
	1190, 1191, 1192, 1193, 1166, 1242, 0, 1244, 1252, 1253,
	0, 1302, 1306, 0, 0, 0, 1221, 1224, 1225, 1226,
	1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 652,
	1214, 0, 624, 662, 663, 917, 919, 790, 793, 799,
	801, 0, 812, 0, 819, 820, 0, 0, 823, 824,
	834, 0, 0, 0, 401, 402, 0, 0, 0, 414,
	410, 411, 412, 392, 845, 836, 0, 903, 1496, 1496,
	1496, 0, 0, 1041, 1042, 1044, 1045, 1046, 0, 0,
	935, 0, 0, 926, 0, 766, 0, 0, 700, 559,
	562, 563, 644, 450, 700, 493, 490, 700, 360, 373,
	370, 1073, -2, 1086, 1088, 0, 0, 1091, 1092, 0,
	0, 0, 0, 1129, 1098, 0, 0, 1102, 0, 1408,
	1409, 0, 1106, 0, 1072, 0, 1063, 1072, 0, 0,
	1071, 0, 379, 381, 382, 383, 993, 994, 999, 1000,
	1017, 0, 0, 1019, 0, 0, 384, 0, 0, 0,
	385, 390, 837, 0, 842, 843, 652, 0, 0, 716,
	737, 0, 0, 717, 0, 718, 723, 725, 291, 752,
	0, 0, 754, 755, 756, 747, 238, 686, 0, 0,
	707, 687, 0, 19, 0, 0, 69, 1484, 1487, 626,
	0, 623, 119, 0, 0, 0, 0, 601, 585, 576,
	140, 135, 861, 121, 915, 0, 1254, 0, 1217, 1216,
	1210, 0, 626, 0, 818, 816, 833, 822, 0, 847,
	848, 0, 403, 404, 0, 407, 413, 835, 0, 0,
	0, 0, 895, -2, 0, 0, -2, 938, 0, 933,
	0, 925, 0, 928, 700, 700, -2, 556, 561, 0,
	474, 494, 1087, 1089, 1090, 1093, 1094, 1034, 1035, 1095,
	1134, 1135, 1136, 1096, 1131, 1132, 1133, 1097, 0, 0,
	0, 1406, 1407, 1127, 0, 0, 0, 0, 0, 0,
	0, 1057, 1024, 1025, 1018, 1021, 1022, 389, 386, 387,
	582, 647, 293, 294, 738, 0, 731, 761, 758, 0,
	0, 697, 699, 70, 75, 0, 0, 628, 0, 625,
	0, 619, 621, 129, 590, 91, 112, 0, 1243, 1293,
	1220, 0, 1211, 0, 1205, 1206, 1207, 1212, 628, 0,
	0, 0, 400, 405, 0, 408, 409, 0, 884, 1475,
	0, 904, 905, 906, 945, -2, 988, 1043, 910, 121,
	945, 929, 0, 936, 0, 934, 927, 652, 557, 0,
	0, 1309, 1122, 0, 0, 0, 1064, 1066, 1067, 1068,
	1069, 1070, 1065, 0, 0, 0, 1056, 1058, 1103, 0,
	290, 0, 0, 762, 764, 759, 760, 65, 67, 82,
	0, 627, 120, 0, 83, 0, 109, 0, 122, 123,
	0, 0, 0, 0, 1219, 1208, 0, 0, 0, 0,
	0, 1410, 1411, 1412, 0, 617, 0, 817, 825, 0,
	827, 406, 877, 0, 658, 0, 947, 0, 907, 990,
	912, 947, 921, 0, 931, 0, 940, 0, 937, 647,
	1130, 0, 1101, 1110, 1123, 0, 0, 877, 877, 877,
	877, 0, 1104, 739, 753, 0, 0, 0, 92, 96,
	0, 118, 115, 0, 124, 0, 0, 0, 0, 0,
	1197, 0, 0, 0, 1201, 1202, 1203, 1204, 0, 826,
	876, 885, 886, 658, 909, 0, 984, 989, 911, 930,
	939, 0, 942, 555, 1099, 1109, 1111, 1112, 0, 1124,
	1125, 1126, 1128, 1049, 1050, 1053, 1054, 0, 763, 765,
	0, 630, 620, 85, 0, 0, 113, 114, 116, 0,
	125, 0, 127, 128, 0, 1198, 1199, 1200, 806, 878,
	1496, 0, 0, 882, 883, 887, 0, 972, 0, 0,
	978, 0, 985, 941, 1100, 1113, 0, 1114, 0, 0,
	0, 1055, 629, 0, 920, 0, 97, 0, 99, 101,
	102, 1074, 110, 111, 117, 126, 1209, 0, 880, 0,
	948, 0, 950, 0, 0, 0, 0, 0, 982, 0,
	1115, 1117, 1118, 0, 0, 1116, 631, 86, 87, 0,
	98, 0, 0, 879, 881, 0, 952, 0, 973, 0,
	0, 0, 0, 0, 0, 0, 1119, 1121, 1120, 0,
	0, 100, 1075, 949, 946, 0, 984, 974, 0, 976,
	0, 0, 0, 0, 88, 89, 90, 0, 0, 954,
	0, 970, 975, 977, 979, 0, 983, 981, 1076, 953,
	0, 966, 951, 0, 980, 955, -2, 0, 971, 956,
	-2, 0, 964, 0, 0, 957, 965, 0, 960, 0,
	0, 0, 959, 0, -2, 967, 0, 0, 961, -2,
	0, 969, 968,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 97, 3, 3, 3, 128, 120, 3,
	68, 69, 125, 123, 138, 124, 137, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 566, 563,
	107, 106, 108, 3, 567, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 564, 119, 565, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 98, 99, 100, 101, 102, 103, 104,
	105, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 121, 122, 127, 129, 132, 133, 134, 135, 136,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:726
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:733
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:739
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:747
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:753
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:757
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:772
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:776
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:782
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:787
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:791
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:823
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:831
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:839
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:849
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:869
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:875
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:882
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:890
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:896
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:905
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:915
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:923
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:931
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:949
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:957
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:967
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:983
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:993
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:997
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1003
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1007
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1013
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1022
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1032
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1036
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1042
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1055
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1061
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1082
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1095
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1106
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1112
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1116
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1122
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1129
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1137
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1141
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1155
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1159
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1163
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1172
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1176
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1182
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1191
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1202
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1206
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1212
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1216
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1222
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1226
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1232
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1256
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1275
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1279
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1283
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1288
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1292
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1299
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1307
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1314
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1319
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1326
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1335
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1359
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1363
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1369
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1375
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1393
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1410
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1433
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1437
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1441
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1446
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1450
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1456
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1469
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1480
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1493
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1497
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1507
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1533
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1552
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1560
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1569
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1573
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1577
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1581
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1585
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1589
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1596
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1600
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1613
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1622
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1626
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1632
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1636
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1640
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1644
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1656
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1841
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1848
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1865
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1869
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1882
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1890
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1894
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1898
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1902
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1908
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1912
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1918
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1925
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1941
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1971
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1975
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1979
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1985
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1991
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2002
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2008
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2012
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2018
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2026
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2035
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2044
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2052
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2060
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2083
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2106
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2113
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2120
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2128
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2135
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2151
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2155
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2159
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2165
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2169
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2175
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2179
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2185
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2189
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2200
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2206
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2211
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2215
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2219
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2223
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2227
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2231
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2235
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2239
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2249
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2253
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2261
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2266
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2271
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2284
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2297
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2332
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2343
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2347
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2363
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2369
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2373
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2379
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2385
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2389
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2393
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2397
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2403
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2431
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2435
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2441
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2447
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2476
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2510
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2551
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2555
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2561
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2567
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2572
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2573
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2574
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2579
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2594
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2614
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2618
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2624
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2631
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2635
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2639
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2643
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2647
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2656
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2666
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2672
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2678
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2688
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2696
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2703
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2717
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2724
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2731
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2739
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2748
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2752
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2759
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2771
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2779
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2787
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2800
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2806
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2817
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2832
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2837
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2841
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2850
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2866
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2870
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2878
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2882
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2890
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2894
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2898
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2902
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2906
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2910
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2918
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2926
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2932
		{
			yyVAL.item = nil
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2937
		{
			yyVAL.item = nil
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2981
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2989
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3002
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3008
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3013
		{
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3017
		{
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3022
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3032
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3042
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3050
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3062
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3074
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3086
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3103
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3136
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3146
		{
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3148
		{
		}
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3157
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3184
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3190
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3196
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3202
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3208
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3217
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3227
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3239
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3243
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3261
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3288
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3297
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3301
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3306
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3310
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3316
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3329
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3333
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3352
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3358
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3364
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3368
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3374
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3380
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3384
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3388
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3394
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3398
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3430
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3448
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3452
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3458
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3467
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3486
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3492
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3498
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3504
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3510
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3519
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3526
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3537
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3542
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3549
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3565
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3578
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3589
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3593
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3599
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3604
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3611
		{
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3613
		{
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3616
		{
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3625
		{
		}
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3629
		{
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3634
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3643
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3650
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3656
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3664
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3671
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3678
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3698
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3708
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3712
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3718
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3731
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3739
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3746
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3753
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3772
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3776
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3785
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3789
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3795
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3804
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3808
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3814
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3818
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3824
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3828
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3834
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3839
		{
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3850
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3854
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3861
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3870
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3876
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3880
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3886
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3890
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3899
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3912
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3919
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3926
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3944
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3963
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3969
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3976
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3980
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3993
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3997
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4002
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4006
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4013
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4018
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4025
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4031
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4035
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4039
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4043
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4047
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4051
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4057
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4064
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4073
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4077
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4083
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4091
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4095
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4104
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4110
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4114
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4118
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4123
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4127
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4133
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4139
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4143
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4149
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4154
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4158
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4162
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4167
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4171
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4175
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4184
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4192
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4196
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4200
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4214
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4218
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4228
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4238
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4248
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4260
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4268
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4276
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4285
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4309
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4317
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4325
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4333
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4341
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4349
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4359
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4370
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4384
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4388
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4392
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4397
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4401
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4405
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4418
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4423
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4427
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4432
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4436
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4442
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4446
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4452
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4456
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4461
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4465
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4470
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4478
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4484
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4492
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4500
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4510
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4516
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4525
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4534
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4543
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4553
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4557
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4567
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4571
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4575
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4579
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4585
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4595
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4599
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4605
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4615
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4621
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4627
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4631
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4635
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4645
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4651
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4655
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4661
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4665
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4671
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4675
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4685
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4698
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4710
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4723
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4741
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4745
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4751
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4761
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4765
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4769
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4774
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4778
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4782
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4786
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4795
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4799
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4803
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4807
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4812
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4816
		{
			yyVAL.str = yyDollar[1].str
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4820
		{
			yyVAL.str = yyDollar[2].str
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4826
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4832
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4836
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4840
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4844
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4848
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4854
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 790:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4887
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4897
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4903
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 793:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4909
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4919
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4924
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4930
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4937
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4941
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4947
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4953
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4958
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4962
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4966
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4970
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4977
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4989
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4994
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5000
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5007
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5011
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5017
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5037
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5043
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5049
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5060
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5072
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5078
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5088
		{
			yyVAL.str = yyDollar[1].str
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5092
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5098
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5105
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5111
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5119
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5125
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5132
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5139
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5147
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5153
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5162
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5174
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5185
		{
			yyVAL.str = ""
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5189
		{
			yyVAL.str = yyDollar[2].str
		}
	case 838:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5195
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5209
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5215
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5221
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5227
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5236
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5245
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5250
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5256
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5264
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5370
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5374
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5380
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5390
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5394
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5400
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5410
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5414
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5418
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5423
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5427
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5433
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5440
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5446
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5455
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5462
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5471
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5475
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5481
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5495
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5499
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5503
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5508
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5516
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5520
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5526
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5545
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5549
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5571
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5575
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5579
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5583
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5587
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5593
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5597
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5603
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5608
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5613
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5617
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5621
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5625
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5629
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5635
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5650
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5660
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5664
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5673
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5679
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5683
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5689
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5693
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5697
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5702
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5706
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5712
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5724
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5733
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5746
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5753
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5763
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5771
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5782
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5786
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5791
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5795
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5802
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5813
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5826
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5840
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5848
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5855
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5862
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5869
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5876
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5880
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5884
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5892
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5899
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5906
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5910
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5917
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5928
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5935
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5942
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5949
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5956
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5960
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5969
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5983
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5990
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6001
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6014
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6020
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6024
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6030
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6039
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6053
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6059
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6063
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6069
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6076
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6085
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6089
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6094
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6098
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6103
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6107
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6112
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6116
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6126
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6130
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6141
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6149
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6157
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6165
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6176
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6185
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6195
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6205
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6209
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6214
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6227
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6233
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6237
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6241
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6247
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6251
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6255
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6259
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6263
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6267
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6272
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6276
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6284
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6288
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6292
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6296
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6300
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6304
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6308
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6312
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6316
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6320
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6324
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6328
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6332
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6336
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6340
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6344
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6348
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6352
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6356
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6360
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6367
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6371
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6377
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6382
		{
			yyVAL.str = ""
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6386
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6390
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6396
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6400
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6404
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6408
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6412
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6416
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6430
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6434
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6443
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6448
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6454
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6461
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6465
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6471
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6475
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6479
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6485
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6489
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6495
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6504
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6529
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6543
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6549
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6558
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6567
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6577
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6585
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6591
		{
			yyVAL.str = ""
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6595
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6605
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6611
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6617
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6631
		{
			yyVAL.str = ""
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6635
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6641
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6647
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6651
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6655
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6661
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6665
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6669
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6673
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6679
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6683
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6687
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6692
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6696
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6702
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6706
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6712
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6716
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6720
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6724
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6728
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6732
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6737
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6741
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6745
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6749
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6753
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6757
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6761
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6765
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6784
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6788
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6793
		{
			yyVAL.str = ""
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6797
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6803
		{
			yyVAL.str = ""
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6807
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6813
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6825
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6832
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6839
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6846
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6853
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6862
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6868
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6874
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6878
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6882
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6886
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6890
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6895
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6902
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6906
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6910
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6919
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6924
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6928
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6944
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6950
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6954
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6958
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6962
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6966
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6970
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6974
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6978
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6982
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6986
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6990
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6994
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6998
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7004
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7008
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7012
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7016
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7020
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7024
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7028
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7032
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7036
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7040
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7044
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7048
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7053
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7061
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7066
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7070
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7079
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7083
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7087
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7091
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7095
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7101
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7109
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7117
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7126
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7130
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7139
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7145
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7149
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7155
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7164
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7176
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7193
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7210
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7223
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7236
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7262
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7277
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7292
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7309
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7324
		{
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7331
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7335
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7339
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7345
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7349
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7353
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7357
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7363
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7367
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7371
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7377
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7385
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7399
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7406
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7411
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7415
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7420
		{
			yyVAL.str = ","
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7424
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7436
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7462
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7473
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7483
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7492
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7501
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7511
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7521
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7531
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7541
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7551
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7561
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7571
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7581
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7591
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7601
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7611
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7621
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7638
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7646
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7654
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7662
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7670
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7680
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7688
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7697
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7705
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7713
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7721
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7729
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7740
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7750
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7762
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7773
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7795
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7831
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7843
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7855
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7866
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7874
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7881
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7888
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7900
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7908
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7918
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7928
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7936
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7947
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7956
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7965
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7973
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7983
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7991
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8005
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8015
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8034
		{
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8036
		{
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8077
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8088
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8092
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8096
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8102
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8111
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8117
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8121
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8128
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8132
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8136
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8144
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8148
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8152
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8156
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8162
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8166
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8170
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8174
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8178
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8182
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8186
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8190
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8194
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8198
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8206
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8210
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8214
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8218
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8222
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8226
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8230
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8234
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8238
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8242
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8252
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8258
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8262
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8269
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8273
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8277
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8283
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8287
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8291
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8295
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8299
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8303
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8307
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8313
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8317
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8321
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8325
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8331
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8344
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8349
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8355
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8359
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8372
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8377
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8381
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8385
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8389
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8393
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8397
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8411
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8415
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8422
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8433
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8438
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8444
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8456
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8468
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8480
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8493
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8506
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8519
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8532
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8545
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8558
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8571
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8584
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8597
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8610
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8625
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8652
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8694
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8742
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8759
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8771
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8791
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8811
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8831
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8847
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8860
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8873
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8886
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8899
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8911
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8923
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8935
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8947
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8959
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8971
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8983
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8995
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9007
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9033
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9048
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9056
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9065
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9075
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9098
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9103
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9109
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9116
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9120
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9125
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9129
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9135
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9141
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9148
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9155
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9164
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9171
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9178
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9187
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9191
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9195
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9201
		{
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9203
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9213
		{
			yyVAL.str = ""
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9217
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
