// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const CLUSTER = 57606
const TYPE = 57607
const ANY = 57608
const SOME = 57609
const EXTERNAL = 57610
const LOCALFILE = 57611
const URL = 57612
const PREPARE = 57613
const DEALLOCATE = 57614
const PROPERTIES = 57615
const PARSER = 57616
const VISIBLE = 57617
const INVISIBLE = 57618
const BTREE = 57619
const HASH = 57620
const RTREE = 57621
const BSI = 57622
const ZONEMAP = 57623
const LEADING = 57624
const BOTH = 57625
const TRAILING = 57626
const UNKNOWN = 57627
const EXPIRE = 57628
const ACCOUNT = 57629
const ACCOUNTS = 57630
const UNLOCK = 57631
const DAY = 57632
const NEVER = 57633
const PUMP = 57634
const SECOND = 57635
const ASCII = 57636
const COALESCE = 57637
const COLLATION = 57638
const HOUR = 57639
const MICROSECOND = 57640
const MINUTE = 57641
const MONTH = 57642
const QUARTER = 57643
const REPEAT = 57644
const REVERSE = 57645
const ROW_COUNT = 57646
const WEEK = 57647
const REVOKE = 57648
const FUNCTION = 57649
const PRIVILEGES = 57650
const TABLESPACE = 57651
const EXECUTE = 57652
const SUPER = 57653
const GRANT = 57654
const OPTION = 57655
const REFERENCES = 57656
const REPLICATION = 57657
const SLAVE = 57658
const CLIENT = 57659
const USAGE = 57660
const RELOAD = 57661
const FILE = 57662
const TEMPORARY = 57663
const ROUTINE = 57664
const EVENT = 57665
const SHUTDOWN = 57666
const NULLX = 57667
const AUTO_INCREMENT = 57668
const APPROXNUM = 57669
const SIGNED = 57670
const UNSIGNED = 57671
const ZEROFILL = 57672
const ENGINES = 57673
const LOW_CARDINALITY = 57674
const ADMIN_NAME = 57675
const RANDOM = 57676
const SUSPEND = 57677
const ATTRIBUTE = 57678
const HISTORY = 57679
const REUSE = 57680
const CURRENT = 57681
const OPTIONAL = 57682
const FAILED_LOGIN_ATTEMPTS = 57683
const PASSWORD_LOCK_TIME = 57684
const UNBOUNDED = 57685
const SECONDARY = 57686
const USER = 57687
const IDENTIFIED = 57688
const CIPHER = 57689
const ISSUER = 57690
const X509 = 57691
const SUBJECT = 57692
const SAN = 57693
const REQUIRE = 57694
const SSL = 57695
const NONE = 57696
const PASSWORD = 57697
const MAX_QUERIES_PER_HOUR = 57698
const MAX_UPDATES_PER_HOUR = 57699
const MAX_CONNECTIONS_PER_HOUR = 57700
const MAX_USER_CONNECTIONS = 57701
const FORMAT = 57702
const VERBOSE = 57703
const CONNECTION = 57704
const TRIGGERS = 57705
const PROFILES = 57706
const LOAD = 57707
const INFILE = 57708
const TERMINATED = 57709
const OPTIONALLY = 57710
const ENCLOSED = 57711
const ESCAPED = 57712
const STARTING = 57713
const LINES = 57714
const ROWS = 57715
const IMPORT = 57716
const MODUMP = 57717
const OVER = 57718
const PRECEDING = 57719
const FOLLOWING = 57720
const GROUPS = 57721
const DATABASES = 57722
const TABLES = 57723
const EXTENDED = 57724
const FULL = 57725
const PROCESSLIST = 57726
const FIELDS = 57727
const COLUMNS = 57728
const OPEN = 57729
const ERRORS = 57730
const WARNINGS = 57731
const INDEXES = 57732
const SCHEMAS = 57733
const NODE = 57734
const LOCKS = 57735
const NAMES = 57736
const GLOBAL = 57737
const SESSION = 57738
const ISOLATION = 57739
const LEVEL = 57740
const READ = 57741
const WRITE = 57742
const ONLY = 57743
const REPEATABLE = 57744
const COMMITTED = 57745
const UNCOMMITTED = 57746
const SERIALIZABLE = 57747
const LOCAL = 57748
const EVENTS = 57749
const PLUGINS = 57750
const CURRENT_TIMESTAMP = 57751
const DATABASE = 57752
const CURRENT_TIME = 57753
const LOCALTIME = 57754
const LOCALTIMESTAMP = 57755
const UTC_DATE = 57756
const UTC_TIME = 57757
const UTC_TIMESTAMP = 57758
const REPLACE = 57759
const CONVERT = 57760
const SEPARATOR = 57761
const TIMESTAMPDIFF = 57762
const CURRENT_DATE = 57763
const CURRENT_USER = 57764
const CURRENT_ROLE = 57765
const SECOND_MICROSECOND = 57766
const MINUTE_MICROSECOND = 57767
const MINUTE_SECOND = 57768
const HOUR_MICROSECOND = 57769
const HOUR_SECOND = 57770
const HOUR_MINUTE = 57771
const DAY_MICROSECOND = 57772
const DAY_SECOND = 57773
const DAY_MINUTE = 57774
const DAY_HOUR = 57775
const YEAR_MONTH = 57776
const SQL_TSI_HOUR = 57777
const SQL_TSI_DAY = 57778
const SQL_TSI_WEEK = 57779
const SQL_TSI_MONTH = 57780
const SQL_TSI_QUARTER = 57781
const SQL_TSI_YEAR = 57782
const SQL_TSI_SECOND = 57783
const SQL_TSI_MINUTE = 57784
const RECURSIVE = 57785
const CONFIG = 57786
const DRAINER = 57787
const MATCH = 57788
const AGAINST = 57789
const BOOLEAN = 57790
const LANGUAGE = 57791
const WITH = 57792
const QUERY = 57793
const EXPANSION = 57794
const ADDDATE = 57795
const BIT_AND = 57796
const BIT_OR = 57797
const BIT_XOR = 57798
const CAST = 57799
const COUNT = 57800
const APPROX_COUNT_DISTINCT = 57801
const APPROX_PERCENTILE = 57802
const CURDATE = 57803
const CURTIME = 57804
const DATE_ADD = 57805
const DATE_SUB = 57806
const EXTRACT = 57807
const GROUP_CONCAT = 57808
const MAX = 57809
const MID = 57810
const MIN = 57811
const NOW = 57812
const POSITION = 57813
const SESSION_USER = 57814
const STD = 57815
const STDDEV = 57816
const STDDEV_POP = 57817
const STDDEV_SAMP = 57818
const SUBDATE = 57819
const SUBSTR = 57820
const SUBSTRING = 57821
const SUM = 57822
const SYSDATE = 57823
const SYSTEM_USER = 57824
const TRANSLATE = 57825
const TRIM = 57826
const VARIANCE = 57827
const VAR_POP = 57828
const VAR_SAMP = 57829
const AVG = 57830
const ARROW = 57831
const ROW = 57832
const OUTFILE = 57833
const HEADER = 57834
const MAX_FILE_SIZE = 57835
const FORCE_QUOTE = 57836
const UNUSED = 57837
const BINDINGS = 57838
const DO = 57839
const DECLARE = 57840
const KILL = 57841

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8133

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 84,
	21, 515,
	-2, 496,
	-1, 90,
	211, 696,
	-2, 743,
	-1, 107,
	42, 350,
	211, 350,
	238, 357,
	239, 357,
	407, 350,
	-2, 378,
	-1, 469,
	67, 1108,
	-2, 1617,
	-1, 470,
	67, 1126,
	-2, 1588,
	-1, 475,
	67, 1127,
	-2, 1616,
	-1, 495,
	67, 1040,
	-2, 1664,
	-1, 496,
	67, 1041,
	-2, 1663,
	-1, 497,
	67, 1042,
	-2, 1653,
	-1, 498,
	67, 1628,
	-2, 1648,
	-1, 499,
	67, 1629,
	-2, 1649,
	-1, 500,
	67, 1630,
	-2, 1655,
	-1, 501,
	67, 1631,
	-2, 1638,
	-1, 502,
	67, 1632,
	-2, 1646,
	-1, 503,
	67, 1633,
	-2, 1656,
	-1, 504,
	67, 1634,
	-2, 1657,
	-1, 505,
	67, 1635,
	-2, 1662,
	-1, 506,
	67, 1636,
	-2, 1667,
	-1, 507,
	67, 1637,
	-2, 1668,
	-1, 509,
	67, 1105,
	-2, 1469,
	-1, 516,
	67, 1114,
	-2, 1495,
	-1, 520,
	67, 1118,
	-2, 1534,
	-1, 521,
	67, 1119,
	-2, 1612,
	-1, 529,
	67, 1129,
	-2, 1597,
	-1, 531,
	67, 1131,
	-2, 1607,
	-1, 543,
	67, 1021,
	-2, 1658,
	-1, 544,
	67, 1022,
	-2, 1659,
	-1, 545,
	67, 1023,
	-2, 1660,
	-1, 552,
	21, 516,
	-2, 479,
	-1, 601,
	402, 378,
	403, 378,
	-2, 351,
	-1, 643,
	103, 1469,
	114, 1469,
	133, 1469,
	-2, 1267,
	-1, 680,
	21, 516,
	-2, 479,
	-1, 778,
	21, 515,
	-2, 933,
	-1, 1085,
	67, 1174,
	-2, 1614,
	-1, 1086,
	67, 1175,
	-2, 1615,
	-1, 1241,
	1, 722,
	68, 722,
	517, 722,
	-2, 729,
	-1, 1360,
	133, 1277,
	-2, 1275,
	-1, 1362,
	133, 639,
	-2, 1272,
	-1, 1363,
	133, 640,
	-2, 1273,
	-1, 1656,
	1, 723,
	68, 723,
	517, 723,
	-2, 729,
	-1, 1711,
	21, 515,
	-2, 606,
	-1, 1882,
	65, 422,
	134, 422,
	-2, 838,
	-1, 2148,
	87, 729,
	129, 729,
	166, 729,
	169, 729,
	-2, 786,
	-1, 2150,
	272, 901,
	-2, 880,
	-1, 2178,
	87, 729,
	129, 729,
	166, 729,
	169, 729,
	-2, 786,
	-1, 2181,
	65, 422,
	134, 422,
	-2, 839,
	-1, 2219,
	87, 729,
	129, 729,
	166, 729,
	169, 729,
	-2, 787,
	-1, 2247,
	272, 901,
	-2, 881,
	-1, 2658,
	68, 758,
	134, 758,
	-2, 729,
	-1, 2662,
	68, 758,
	134, 758,
	-2, 729,
	-1, 2676,
	68, 762,
	134, 762,
	-2, 729,
	-1, 2681,
	68, 763,
	134, 763,
	-2, 729,
}

const yyPrivate = 57344

const yyLast = 28654

var yyAct = [...]int{
	440, 2220, 1149, 2662, 2661, 2638, 2670, 2503, 1065, 2286,
	422, 2584, 2627, 442, 2259, 2540, 2568, 2469, 2569, 1708,
	2402, 2449, 2206, 2284, 1640, 2215, 1320, 415, 805, 977,
	2473, 931, 2142, 1286, 2410, 2285, 467, 125, 125, 2457,
	1704, 1061, 2304, 125, 360, 367, 1195, 367, 365, 29,
	553, 2269, 1857, 2321, 2173, 2204, 2035, 2248, 1247, 1885,
	2218, 2268, 1068, 128, 916, 2031, 1007, 904, 1738, 371,
	124, 124, 1346, 1352, 642, 1308, 351, 1902, 2161, 1278,
	2154, 2036, 548, 414, 834, 1745, 1777, 1703, 2040, 420,
	1744, 2109, 1547, 585, 1923, 2092, 2051, 2046, 2048, 1664,
	377, 674, 1983, 918, 1353, 1219, 2029, 455, 84, 1543,
	1198, 1205, 1776, 1357, 1360, 548, 1347, 1936, 1301, 1354,
	419, 1542, 646, 1281, 125, 1901, 1859, 1279, 1818, 1148,
	1692, 1663, 1249, 1260, 2223, 3, 1854, 364, 18, 1657,
	1259, 669, 1237, 1227, 1575, 649, 40, 421, 350, 361,
	8, 84, 840, 999, 1649, 1059, 83, 676, 363, 7,
	1261, 1305, 1272, 1544, 668, 353, 644, 423, 1271, 29,
	362, 6, 1628, 1554, 1113, 1099, 1558, 431, 1050, 1706,
	1341, 634, 604, 356, 1058, 670, 1324, 1064, 1713, 40,
	969, 691, 584, 1236, 946, 1267, 956, 550, 1210, 15,
	1119, 635, 885, 1118, 379, 9, 932, 552, 597, 582,
	4, 998, 366, 115, 1779, 1976, 380, 1976, 118, 1561,
	1551, 120, 2317, 1739, 648, 2141, 1223, 2491, 84, 1349,
	551, 806, 119, 2531, 36, 109, 91, 119, 1139, 36,
	109, 91, 119, 119, 36, 109, 91, 561, 119, 119,
	119, 958, 710, 1764, 349, 2277, 667, 119, 18, 369,
	119, 1548, 2521, 902, 1559, 121, 40, 1139, 1017, 1772,
	8, 743, 744, 647, 538, 1845, 537, 539, 540, 7,
	541, 542, 614, 547, 1014, 1051, 2118, 1055, 928, 116,
	574, 6, 1856, 1953, 116, 1035, 1289, 1290, 1263, 116,
	1010, 943, 959, 944, 1004, 1016, 116, 116, 737, 2557,
	2313, 1054, 2555, 1067, 116, 937, 938, 116, 742, 654,
	653, 655, 2572, 2573, 2302, 2492, 2493, 1154, 935, 374,
	1819, 934, 937, 938, 2544, 2545, 562, 2305, 2306, 2307,
	2308, 2022, 2395, 2398, 1855, 725, 2023, 726, 2024, 652,
	2319, 2143, 694, 125, 684, 1070, 1759, 685, 376, 2472,
	2126, 1294, 718, 683, 720, 748, 749, 750, 747, 367,
	2162, 125, 1302, 1555, 2062, 728, 618, 2169, 2530, 1056,
	1135, 2052, 554, 1132, 1046, 2378, 682, 1134, 1131, 1133,
	1137, 1138, 721, 1687, 1647, 1136, 1298, 657, 2282, 1053,
	679, 681, 1971, 1862, 701, 1625, 1194, 1193, 2060, 1135,
	2266, 576, 1132, 650, 1969, 739, 1134, 1131, 1133, 1137,
	1138, 573, 572, 1769, 1136, 90, 2312, 117, 780, 713,
	740, 741, 2314, 2381, 619, 410, 2279, 1749, 411, 723,
	2559, 2582, 566, 368, 751, 107, 694, 678, 2533, 2534,
	2372, 1069, 2571, 779, 2411, 2655, 714, 926, 2671, 2057,
	2058, 787, 1565, 1567, 1568, 84, 84, 648, 2593, 2501,
	2502, 651, 2505, 680, 2059, 705, 2056, 2554, 716, 730,
	2505, 731, 792, 570, 1560, 2600, 923, 569, 2528, 2365,
	719, 722, 2630, 735, 736, 2471, 413, 724, 645, 1077,
	1080, 1081, 1052, 40, 40, 2649, 564, 2334, 2333, 733,
	1078, 2356, 412, 903, 715, 2511, 647, 1868, 945, 965,
	964, 2360, 696, 695, 703, 1142, 1143, 1144, 1145, 1146,
	1147, 1140, 1141, 778, 2561, 2562, 656, 2672, 1009, 2639,
	571, 687, 688, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1142, 1143, 1144, 1145, 1146, 1147,
	1140, 1141, 727, 950, 565, 930, 929, 2666, 2054, 922,
	921, 2322, 2137, 729, 781, 782, 783, 784, 675, 717,
	2393, 699, 647, 1576, 585, 1549, 1549, 905, 2678, 702,
	1925, 1927, 375, 1765, 1549, 2458, 2459, 2460, 2462, 2461,
	882, 2130, 957, 1975, 1720, 689, 2631, 1552, 734, 1231,
	785, 1870, 1871, 1872, 1873, 2044, 696, 695, 2041, 2044,
	936, 908, 814, 2532, 1979, 1974, 1563, 911, 933, 575,
	910, 732, 370, 906, 907, 1929, 909, 548, 548, 548,
	1985, 1984, 981, 981, 937, 938, 2560, 937, 938, 710,
	579, 580, 581, 927, 913, 2434, 2063, 2053, 367, 1002,
	1002, 37, 890, 2379, 1005, 1562, 37, 1550, 1861, 2494,
	2495, 1303, 983, 1717, 2470, 1292, 985, 615, 1012, 962,
	1972, 1566, 1293, 979, 979, 745, 1001, 1001, 2665, 92,
	1716, 1028, 1029, 1291, 92, 621, 924, 622, 1033, 92,
	92, 1295, 2278, 940, 941, 92, 92, 92, 816, 817,
	981, 1018, 981, 684, 92, 2283, 1773, 92, 1079, 1876,
	1865, 1866, 1066, 1008, 1047, 2361, 2362, 1015, 709, 2628,
	2629, 2358, 645, 704, 1864, 2357, 1297, 2045, 625, 1701,
	947, 2045, 947, 1926, 2055, 2636, 2038, 1042, 1719, 1718,
	2039, 2042, 2677, 987, 960, 961, 617, 350, 2612, 616,
	887, 746, 2684, 615, 1752, 1756, 660, 665, 666, 1250,
	1883, 552, 710, 889, 1072, 1073, 1074, 1075, 1076, 1032,
	1603, 2683, 84, 1602, 2674, 624, 84, 1031, 1250, 627,
	626, 1117, 2149, 915, 1634, 1764, 1702, 84, 1327, 2656,
	1729, 1164, 2043, 951, 1548, 2328, 84, 939, 1071, 1639,
	942, 1170, 1607, 1539, 2651, 2642, 1115, 1116, 2641, 2616,
	2586, 1063, 1151, 1176, 1177, 1638, 2579, 1158, 746, 1740,
	975, 976, 948, 2574, 548, 40, 1041, 2563, 972, 973,
	974, 1877, 617, 1702, 40, 616, 963, 746, 1038, 746,
	2675, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 349, 986, 1557, 1108, 1109, 1044, 1037,
	997, 1003, 2549, 1024, 1082, 2435, 2437, 2438, 2439, 2436,
	2652, 1557, 1216, 1019, 1557, 1557, 2587, 1702, 1020, 1884,
	1201, 1202, 2383, 748, 749, 750, 747, 1060, 1040, 2383,
	2526, 552, 1172, 1729, 1039, 1234, 2089, 981, 1209, 1036,
	1241, 2525, 1221, 1057, 1217, 585, 1225, 1325, 1248, 1228,
	1163, 981, 2524, 1107, 1150, 1729, 1153, 1062, 1240, 2073,
	949, 1165, 662, 663, 664, 2523, 1585, 1637, 2550, 1049,
	1048, 1171, 914, 1173, 1268, 1268, 1111, 1273, 954, 955,
	677, 1101, 1273, 1200, 2513, 1234, 981, 1288, 2390, 2389,
	1220, 748, 749, 750, 747, 1266, 2383, 548, 1651, 981,
	1232, 1207, 1208, 555, 966, 2588, 2168, 2383, 1242, 1243,
	990, 991, 992, 993, 994, 995, 996, 2382, 2383, 2184,
	1233, 1234, 981, 2074, 1319, 125, 125, 1221, 1884, 1152,
	2078, 2383, 1329, 1221, 1221, 1584, 125, 1938, 1239, 2202,
	708, 1164, 1345, 1270, 1943, 1886, 669, 1164, 1164, 1174,
	2514, 1920, 1322, 1841, 2391, 1668, 1254, 1767, 1321, 1321,
	1839, 1837, 1335, 1257, 1258, 1190, 1835, 1824, 1766, 1321,
	1275, 1362, 748, 749, 750, 747, 1248, 1781, 1762, 1754,
	981, 1750, 1314, 2383, 1758, 947, 1746, 1255, 710, 1256,
	670, 1667, 1650, 1635, 1287, 1610, 1299, 1251, 1609, 1556,
	1262, 707, 1684, 1264, 1265, 1944, 1316, 1212, 1304, 1215,
	1944, 1218, 1599, 1586, 1538, 1363, 2004, 1702, 883, 1842,
	1224, 1332, 1021, 1318, 1238, 1968, 1840, 1836, 881, 790,
	1025, 763, 1836, 746, 1540, 1570, 1715, 1245, 1252, 1244,
	697, 677, 1966, 746, 1668, 1747, 1253, 1751, 648, 1546,
	1274, 970, 1747, 919, 648, 623, 1157, 1668, 948, 1634,
	1343, 746, 971, 84, 746, 1557, 1343, 1312, 1313, 1578,
	1269, 708, 1582, 1238, 968, 1277, 1967, 1175, 1300, 1276,
	1178, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1323, 577, 1309, 1310, 1311, 1026, 647, 1156, 1155,
	1545, 40, 677, 647, 2625, 1787, 1317, 1106, 2613, 1060,
	1858, 2515, 1592, 2090, 1614, 1593, 1977, 1597, 1315, 1757,
	1333, 1722, 1104, 1105, 1103, 1573, 1574, 1350, 686, 1114,
	1852, 1361, 1796, 1608, 750, 747, 1611, 1612, 1613, 1536,
	778, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1537, 1623,
	1114, 1355, 1581, 1356, 967, 1235, 949, 1541, 880, 877,
	878, 879, 125, 125, 1801, 2548, 1800, 1799, 1797, 628,
	747, 2368, 2367, 125, 125, 1665, 2158, 2153, 1564, 1942,
	2351, 2660, 1572, 2645, 1273, 2516, 2610, 1675, 1182, 647,
	2594, 1569, 2047, 360, 1168, 1643, 1645, 748, 749, 750,
	747, 1273, 620, 2648, 1169, 2483, 1660, 1661, 1669, 1571,
	669, 1101, 1595, 2445, 2443, 2441, 1288, 1580, 1641, 1642,
	1674, 766, 767, 768, 769, 770, 763, 2451, 1798, 762,
	761, 771, 772, 764, 765, 766, 767, 768, 769, 770,
	763, 748, 749, 750, 747, 981, 2647, 2431, 1605, 2429,
	1789, 2444, 2442, 2440, 670, 2428, 1002, 2427, 1288, 2280,
	2166, 1733, 2424, 1735, 2418, 1594, 2415, 1221, 1221, 1221,
	1164, 1234, 748, 749, 750, 747, 2414, 1709, 1709, 2251,
	1709, 2165, 2061, 1001, 2020, 2430, 1727, 748, 749, 750,
	747, 2019, 1962, 1678, 1940, 1712, 1633, 2281, 2167, 1632,
	855, 1631, 1710, 2261, 1714, 1627, 1658, 1630, 764, 765,
	766, 767, 768, 769, 770, 763, 2254, 1673, 1626, 1022,
	1676, 1677, 2249, 1711, 900, 2581, 2646, 2264, 2265, 2565,
	1262, 2676, 1680, 2250, 1682, 1812, 2450, 1732, 2216, 1748,
	2546, 1742, 1652, 1743, 671, 672, 673, 1802, 1803, 1583,
	410, 2509, 1672, 411, 2508, 1679, 2432, 1683, 1681, 2425,
	2421, 1688, 2420, 1685, 2419, 1287, 2380, 2353, 2255, 2318,
	2214, 2212, 647, 762, 761, 771, 772, 764, 765, 766,
	767, 768, 769, 770, 763, 814, 2176, 1730, 754, 755,
	756, 757, 758, 759, 760, 752, 1737, 1589, 2164, 2163,
	843, 1723, 1724, 1725, 833, 748, 749, 750, 747, 1731,
	748, 749, 750, 747, 2160, 2129, 1778, 2018, 863, 867,
	869, 871, 873, 874, 876, 1997, 880, 877, 878, 879,
	1973, 1941, 858, 859, 860, 861, 841, 842, 864, 1932,
	844, 1636, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 856, 862, 1629, 2263, 1334, 2037, 494, 493,
	2653, 866, 868, 870, 872, 875, 1230, 1023, 815, 1760,
	1996, 810, 748, 749, 750, 747, 2566, 809, 791, 981,
	2065, 981, 2257, 981, 2401, 2178, 2177, 2148, 684, 2139,
	2138, 2122, 748, 749, 750, 747, 857, 1774, 748, 749,
	750, 747, 2476, 2108, 2256, 2258, 771, 772, 764, 765,
	766, 767, 768, 769, 770, 763, 981, 1805, 2377, 2107,
	2079, 2002, 1770, 1995, 748, 749, 750, 747, 1987, 1982,
	1813, 1838, 1834, 1833, 981, 1615, 2208, 1606, 1604, 1788,
	748, 749, 750, 747, 2207, 1804, 1601, 1806, 1807, 2133,
	1600, 1598, 1591, 1810, 1811, 2000, 1588, 979, 748, 749,
	750, 747, 1999, 1814, 1587, 1816, 748, 749, 750, 747,
	2266, 748, 749, 750, 747, 979, 1167, 748, 749, 750,
	747, 981, 2252, 1998, 748, 749, 750, 747, 2262, 1832,
	1166, 119, 1221, 1882, 1831, 1846, 1847, 1228, 1791, 1888,
	988, 2673, 2624, 2618, 1771, 748, 749, 750, 747, 2601,
	2598, 748, 749, 750, 747, 1897, 748, 749, 750, 747,
	684, 1288, 1288, 1288, 1288, 1815, 1880, 2596, 1785, 1903,
	807, 2482, 684, 1288, 1768, 1763, 2467, 1761, 1851, 119,
	1843, 1903, 109, 91, 2455, 29, 2452, 1782, 116, 2447,
	2407, 981, 1197, 2375, 1784, 556, 557, 558, 559, 125,
	125, 1830, 2374, 1875, 2373, 2370, 1060, 1795, 555, 1820,
	1899, 2364, 2349, 917, 1825, 2194, 1919, 2192, 1164, 2171,
	2159, 2006, 1949, 748, 749, 750, 747, 1164, 1206, 1199,
	1948, 1879, 1934, 1935, 1878, 981, 116, 1853, 1918, 1709,
	1753, 1721, 1889, 1666, 84, 1102, 1890, 116, 1960, 1340,
	1211, 1221, 1214, 1848, 1894, 1221, 1895, 989, 1204, 1203,
	1045, 1658, 1011, 1867, 1881, 884, 1874, 832, 1287, 1287,
	1287, 1287, 1887, 1954, 18, 865, 831, 1891, 830, 1892,
	1287, 1893, 40, 1945, 829, 1900, 8, 1981, 1904, 1905,
	1906, 1907, 1961, 1898, 1896, 7, 1917, 1916, 1955, 1220,
	828, 1915, 827, 1957, 552, 826, 825, 6, 1238, 824,
	2001, 1933, 1930, 1988, 823, 1928, 1990, 822, 1992, 821,
	820, 819, 2371, 1829, 684, 1939, 818, 813, 2050, 1952,
	812, 1956, 84, 2034, 1970, 811, 1965, 1946, 2622, 1950,
	125, 808, 1958, 1959, 1964, 748, 749, 750, 747, 684,
	684, 804, 803, 801, 1288, 1665, 800, 2077, 2034, 2034,
	799, 798, 1978, 2081, 797, 796, 1986, 795, 794, 793,
	2050, 789, 788, 2066, 1980, 1993, 1994, 712, 1989, 1828,
	2093, 2094, 1991, 1827, 1671, 762, 761, 771, 772, 764,
	765, 766, 767, 768, 769, 770, 763, 1654, 2067, 2068,
	2069, 748, 749, 750, 747, 748, 749, 750, 747, 1805,
	700, 2606, 2604, 2570, 2096, 1234, 2005, 1869, 1728, 1234,
	2007, 2008, 2009, 2010, 1826, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 1337, 2075, 761, 771, 772, 764, 765, 766,
	767, 768, 769, 770, 763, 125, 748, 749, 750, 747,
	125, 1823, 2072, 711, 2076, 2070, 2071, 2099, 1912, 2098,
	1910, 1287, 2116, 1913, 2119, 1911, 2085, 2087, 2086, 2197,
	2084, 2196, 2097, 748, 749, 750, 747, 2659, 2127, 1914,
	2114, 1698, 1699, 2131, 2104, 2105, 2106, 2101, 1822, 1909,
	2120, 1908, 1821, 2080, 1947, 2132, 2123, 2082, 2083, 125,
	2117, 2113, 2134, 1755, 2088, 2195, 1339, 1850, 2152, 2121,
	748, 749, 750, 747, 748, 749, 750, 747, 1817, 2100,
	67, 84, 1338, 84, 39, 1783, 2025, 2026, 2125, 1659,
	1191, 1741, 2147, 2128, 2124, 1641, 1642, 122, 981, 981,
	748, 749, 750, 747, 1288, 2181, 2146, 762, 761, 771,
	772, 764, 765, 766, 767, 768, 769, 770, 763, 1780,
	684, 346, 38, 1775, 886, 347, 2028, 2172, 1648, 1903,
	1694, 1697, 1698, 1699, 1695, 345, 1696, 1700, 2156, 979,
	2174, 706, 2537, 2320, 2199, 2027, 1164, 2151, 1221, 2150,
	1809, 2191, 2157, 1246, 2193, 1156, 1155, 953, 2155, 952,
	2155, 898, 899, 348, 738, 84, 1709, 2183, 2198, 2188,
	2103, 1535, 748, 749, 750, 747, 1808, 896, 897, 920,
	684, 1786, 888, 2180, 2270, 2272, 2619, 2270, 2270, 2034,
	2179, 894, 895, 892, 893, 2187, 2190, 2189, 748, 749,
	750, 747, 684, 748, 749, 750, 747, 1110, 2499, 2487,
	2620, 1287, 2485, 2412, 2408, 2400, 2209, 2276, 2399, 2200,
	2397, 2201, 2299, 1248, 2203, 2296, 2298, 2213, 2210, 748,
	749, 750, 747, 2145, 2144, 2111, 2271, 2267, 2182, 2211,
	891, 555, 2217, 2315, 2185, 2245, 2110, 2186, 2273, 2274,
	2293, 2324, 1937, 1689, 1250, 1963, 2275, 762, 761, 771,
	772, 764, 765, 766, 767, 768, 769, 770, 763, 2290,
	2289, 2183, 556, 557, 558, 559, 1694, 1697, 1698, 1699,
	1695, 2294, 1696, 1700, 1590, 555, 981, 2608, 2607, 2300,
	698, 2607, 2608, 2366, 2115, 925, 46, 125, 1, 1229,
	560, 1336, 1921, 1922, 2325, 2326, 2272, 2329, 2330, 2331,
	2332, 2102, 1924, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2174, 2327, 1553,
	2369, 1686, 1646, 2064, 2267, 2350, 912, 578, 1159, 901,
	2354, 1030, 2291, 2292, 659, 2385, 693, 1027, 692, 690,
	1112, 457, 1348, 2448, 2295, 2413, 2536, 2376, 2583, 2481,
	2539, 1043, 774, 2384, 777, 441, 2392, 2021, 2301, 2406,
	2394, 2352, 2388, 2303, 2387, 2386, 2396, 1844, 2446, 775,
	776, 773, 2205, 762, 761, 771, 772, 764, 765, 766,
	767, 768, 769, 770, 763, 1951, 593, 489, 465, 2409,
	802, 684, 1013, 1006, 684, 684, 684, 661, 2426, 464,
	2416, 2417, 2170, 1863, 684, 563, 2422, 2423, 658, 594,
	1624, 2140, 2479, 1192, 2456, 1213, 1196, 2464, 2465, 2466,
	2669, 1709, 2658, 2453, 2637, 2617, 2504, 2654, 2497, 2475,
	2553, 2599, 2463, 2311, 2309, 2310, 2592, 981, 981, 2474,
	2478, 2500, 2477, 2486, 2490, 2488, 2489, 2484, 84, 381,
	1296, 2406, 546, 632, 2498, 2468, 382, 1670, 2529, 2454,
	567, 1653, 568, 1656, 1655, 1083, 2506, 2507, 125, 753,
	1100, 2135, 2136, 786, 418, 1579, 684, 430, 979, 979,
	424, 1860, 2260, 1931, 45, 44, 43, 1328, 684, 1358,
	459, 127, 1359, 2496, 2512, 2316, 2541, 439, 438, 2522,
	2517, 1321, 2518, 2543, 437, 436, 1693, 1691, 1690, 1283,
	1282, 2527, 1326, 2567, 2519, 2520, 2542, 2363, 2433, 2359,
	684, 2535, 2355, 2510, 2219, 2246, 2247, 2253, 839, 2551,
	835, 837, 838, 2547, 836, 1794, 1790, 2032, 2033, 2030,
	2095, 2091, 1344, 1226, 2556, 2558, 1849, 1284, 1280, 2288,
	549, 30, 5, 28, 27, 26, 2564, 14, 13, 1034,
	12, 17, 25, 24, 23, 22, 75, 74, 2585, 73,
	72, 2590, 21, 684, 2575, 2576, 2577, 2578, 11, 71,
	70, 2591, 1066, 69, 20, 19, 64, 65, 56, 2589,
	55, 54, 63, 62, 61, 592, 2406, 53, 52, 51,
	50, 60, 59, 2580, 2602, 58, 2605, 2603, 2543, 2615,
	57, 49, 48, 47, 2609, 89, 88, 684, 87, 684,
	86, 2542, 2611, 2614, 31, 2621, 1066, 2623, 1066, 762,
	761, 771, 772, 764, 765, 766, 767, 768, 769, 770,
	763, 2632, 32, 2585, 2633, 684, 33, 2640, 34, 99,
	98, 100, 96, 2644, 1066, 94, 97, 2650, 95, 93,
	41, 2635, 10, 16, 2, 2595, 0, 2597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2657, 0,
	2664, 0, 0, 0, 2668, 0, 0, 2667, 0, 0,
	0, 0, 0, 0, 0, 0, 2679, 0, 2664, 0,
	2681, 2682, 2680, 2668, 0, 0, 0, 0, 1474, 1516,
	0, 2626, 1463, 295, 1421, 1476, 1394, 1410, 1484, 1411,
	1412, 1449, 1373, 1431, 257, 1408, 0, 0, 0, 0,
	0, 0, 1466, 1365, 1397, 1398, 1367, 1404, 1368, 1395,
	1423, 202, 1393, 1434, 227, 1446, 1407, 1428, 1482, 0,
	0, 287, 241, 0, 0, 1426, 1468, 1429, 1454, 1420,
	1450, 1381, 1442, 1477, 1409, 0, 1447, 1478, 0, 0,
	0, 0, 671, 672, 673, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 1445, 1472, 1406, 0, 186,
	1475, 1427, 1448, 0, 0, 1366, 1443, 0, 1371, 1374,
	1483, 1470, 1401, 1402, 0, 0, 0, 0, 0, 0,
	0, 0, 1424, 1430, 1451, 1417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1399, 0, 1439, 0, 0,
	0, 1376, 1372, 0, 1422, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 1515,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 0, 305, 333, 195, 324, 1375, 316,
	178, 1510, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 0, 217, 265, 231, 266, 218,
	243, 242, 244, 1494, 1495, 1496, 1497, 1498, 344, 1506,
	1507, 0, 1511, 1512, 1513, 1380, 0, 1400, 1452, 0,
	1364, 1461, 1469, 1419, 318, 1471, 1416, 1415, 1501, 0,
	1500, 291, 1502, 1503, 226, 1467, 1396, 1405, 334, 1403,
	277, 259, 1473, 1438, 1514, 275, 229, 303, 267, 309,
	293, 317, 271, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 1499, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 331, 332, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 1508, 0, 1509, 330, 209, 166, 167, 313, 0,
	255, 0, 1464, 1369, 1379, 1377, 1413, 1440, 1441, 251,
	329, 1456, 1460, 1457, 1485, 280, 0, 0, 0, 0,
	0, 220, 261, 1458, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1370, 0, 288, 311, 323,
	340, 343, 1517, 1518, 1519, 171, 342, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 314, 1414, 1387, 1425, 322, 1390,
	1388, 1455, 1389, 1444, 338, 245, 246, 247, 248, 212,
	0, 188, 341, 270, 1435, 1418, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1436, 1528, 1529, 1530, 1531, 1532, 1392,
	335, 208, 214, 2003, 216, 187, 260, 210, 320, 223,
	1462, 1533, 1534, 252, 219, 285, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 234, 0, 0, 1386, 1391,
	1385, 1432, 1433, 1479, 1480, 1481, 1453, 1378, 1465, 0,
	1382, 1384, 1383, 0, 0, 0, 0, 0, 0, 0,
	762, 761, 771, 772, 764, 765, 766, 767, 768, 769,
	770, 763, 1459, 295, 471, 1437, 168, 0, 228, 1486,
	269, 207, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 432, 0, 0,
	0, 202, 0, 0, 227, 0, 0, 0, 463, 0,
	0, 287, 241, 0, 0, 0, 0, 517, 525, 1504,
	1505, 326, 327, 328, 312, 0, 199, 1527, 0, 425,
	0, 0, 456, 494, 493, 443, 452, 0, 1577, 183,
	444, 0, 451, 445, 449, 448, 446, 447, 0, 509,
	0, 0, 0, 0, 0, 0, 416, 429, 2403, 433,
	762, 761, 771, 772, 764, 765, 766, 767, 768, 769,
	770, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 427, 0, 0, 0, 0, 472, 0, 428,
	0, 0, 474, 453, 454, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 0,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 450, 470, 475, 195, 531, 468, 316,
	178, 0, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 532, 217, 265, 231, 266, 218,
	243, 242, 244, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 0, 0, 318, 0, 0, 515, 0, 0,
	0, 291, 0, 0, 226, 0, 0, 0, 469, 0,
	277, 259, 528, 417, 0, 275, 229, 303, 267, 309,
	293, 317, 271, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 0, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 331, 332, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 330, 209, 166, 167, 313, 513,
	255, 0, 527, 508, 510, 511, 514, 518, 519, 520,
	521, 522, 524, 526, 530, 280, 0, 0, 0, 0,
	0, 220, 261, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 311, 323,
	340, 343, 0, 0, 0, 171, 342, 0, 2404, 0,
	0, 0, 2405, 0, 529, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 473, 245, 246, 247, 248, 516,
	0, 188, 341, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 208, 214, 0, 216, 187, 260, 210, 320, 223,
	0, 0, 0, 252, 219, 285, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 234, 0, 0, 538, 512,
	537, 539, 540, 536, 541, 542, 523, 435, 0, 478,
	534, 533, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 228, 0,
	269, 207, 501, 482, 483, 484, 434, 485, 480, 481,
	502, 476, 498, 499, 458, 461, 486, 497, 487, 500,
	503, 504, 543, 544, 545, 490, 505, 496, 495, 488,
	477, 506, 507, 462, 460, 491, 492, 479, 295, 471,
	0, 326, 327, 328, 312, 0, 199, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 0, 0, 0, 202, 0, 0, 227,
	0, 0, 0, 463, 0, 0, 287, 241, 0, 0,
	0, 0, 517, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 0, 0, 456, 494, 493,
	443, 452, 0, 0, 183, 444, 0, 451, 445, 449,
	448, 446, 447, 0, 509, 0, 0, 0, 0, 0,
	0, 416, 429, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 427, 0, 0,
	0, 0, 472, 0, 428, 0, 0, 474, 453, 454,
	0, 0, 174, 292, 308, 184, 283, 321, 189, 290,
	179, 256, 279, 0, 0, 176, 306, 289, 238, 221,
	222, 175, 0, 274, 200, 213, 196, 254, 450, 470,
	475, 195, 531, 468, 316, 178, 0, 315, 253, 302,
	307, 239, 233, 177, 304, 237, 232, 225, 204, 532,
	217, 265, 231, 266, 218, 243, 242, 244, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 0, 0, 318,
	0, 0, 515, 0, 0, 0, 291, 0, 0, 226,
	0, 0, 0, 469, 0, 277, 259, 528, 417, 0,
	275, 229, 303, 267, 309, 293, 317, 271, 268, 169,
	294, 198, 240, 180, 182, 194, 201, 203, 205, 206,
	249, 250, 262, 282, 296, 297, 298, 197, 190, 276,
	191, 215, 192, 170, 284, 193, 172, 263, 301, 0,
	211, 272, 236, 173, 235, 264, 300, 299, 181, 325,
	331, 332, 336, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 1161, 1160, 1162, 330,
	209, 166, 167, 313, 513, 255, 0, 527, 508, 510,
	511, 514, 518, 519, 520, 521, 522, 524, 526, 530,
	280, 0, 0, 0, 0, 0, 220, 261, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 311, 323, 340, 343, 0, 0, 0,
	171, 342, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 473,
	245, 246, 247, 248, 516, 0, 188, 341, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 208, 214, 0, 216,
	187, 260, 210, 320, 223, 0, 0, 0, 252, 219,
	285, 224, 230, 273, 319, 258, 278, 185, 310, 286,
	234, 0, 0, 538, 512, 537, 539, 540, 536, 541,
	542, 523, 435, 0, 478, 534, 533, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 228, 0, 269, 207, 501, 482, 483,
	484, 434, 485, 480, 481, 502, 476, 498, 499, 458,
	461, 486, 497, 487, 500, 503, 504, 543, 544, 545,
	490, 505, 496, 495, 488, 477, 506, 507, 462, 460,
	491, 492, 479, 295, 471, 0, 326, 327, 328, 312,
	0, 199, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 432, 0, 0,
	0, 202, 0, 0, 227, 0, 0, 0, 463, 0,
	0, 287, 241, 0, 0, 0, 0, 517, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 425,
	0, 0, 456, 494, 493, 443, 452, 0, 0, 183,
	444, 0, 451, 445, 449, 448, 446, 447, 0, 509,
	0, 0, 0, 0, 0, 0, 416, 429, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 427, 0, 0, 0, 0, 472, 0, 428,
	0, 0, 474, 453, 454, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 0,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 450, 470, 475, 195, 531, 468, 316,
	178, 0, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 532, 217, 265, 231, 266, 218,
	243, 242, 244, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 0, 0, 318, 0, 0, 515, 0, 0,
	0, 291, 0, 0, 226, 0, 0, 0, 469, 0,
	277, 259, 528, 417, 0, 275, 229, 303, 267, 309,
	293, 317, 271, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 0, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 331, 332, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 330, 209, 166, 167, 313, 513,
	255, 0, 527, 508, 510, 511, 514, 518, 519, 520,
	521, 522, 524, 526, 530, 280, 0, 0, 0, 0,
	0, 220, 261, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 311, 323,
	340, 343, 0, 0, 0, 171, 342, 0, 2404, 0,
	0, 0, 2405, 0, 529, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 473, 245, 246, 247, 248, 516,
	0, 188, 341, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 208, 214, 0, 216, 187, 260, 210, 320, 223,
	0, 0, 0, 252, 219, 285, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 234, 0, 0, 538, 512,
	537, 539, 540, 536, 541, 542, 523, 435, 0, 478,
	534, 533, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 228, 0,
	269, 207, 501, 482, 483, 484, 434, 485, 480, 481,
	502, 476, 498, 499, 458, 461, 486, 497, 487, 500,
	503, 504, 543, 544, 545, 490, 505, 496, 495, 488,
	477, 506, 507, 462, 460, 491, 492, 479, 295, 471,
	0, 326, 327, 328, 312, 0, 199, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 0, 0, 0, 202, 1222, 0, 227,
	0, 0, 0, 463, 0, 0, 287, 241, 0, 0,
	0, 0, 517, 525, 0, 0, 0, 0, 0, 0,
	0, 1306, 0, 0, 425, 0, 0, 456, 494, 493,
	443, 452, 0, 0, 183, 444, 0, 451, 445, 449,
	448, 446, 447, 0, 509, 0, 0, 0, 0, 0,
	0, 416, 429, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 427, 0, 0,
	0, 0, 472, 0, 428, 0, 0, 1307, 453, 454,
	0, 0, 174, 292, 308, 184, 283, 321, 189, 290,
	179, 256, 279, 0, 0, 176, 306, 289, 238, 221,
	222, 175, 0, 274, 200, 213, 196, 254, 450, 470,
	475, 195, 531, 468, 316, 178, 0, 315, 253, 302,
	307, 239, 233, 177, 304, 237, 232, 225, 204, 532,
	217, 265, 231, 266, 218, 243, 242, 244, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 0, 0, 318,
	0, 0, 515, 0, 0, 0, 291, 0, 0, 226,
	0, 0, 0, 469, 0, 277, 259, 528, 417, 0,
	275, 229, 303, 267, 309, 293, 317, 271, 268, 169,
	294, 198, 240, 180, 182, 194, 201, 203, 205, 206,
	249, 250, 262, 282, 296, 297, 298, 197, 190, 276,
	191, 215, 192, 170, 284, 193, 172, 263, 301, 0,
	211, 272, 236, 173, 235, 264, 300, 299, 181, 325,
	331, 332, 336, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 330,
	209, 166, 167, 313, 513, 255, 0, 527, 508, 510,
	511, 514, 518, 519, 520, 521, 522, 524, 526, 530,
	280, 0, 0, 0, 0, 0, 220, 261, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 311, 323, 340, 343, 0, 0, 0,
	171, 342, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 473,
	245, 246, 247, 248, 516, 0, 188, 341, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 208, 214, 0, 216,
	187, 260, 210, 320, 223, 0, 0, 0, 252, 219,
	285, 224, 230, 273, 319, 258, 278, 185, 310, 286,
	234, 0, 0, 538, 512, 537, 539, 540, 536, 541,
	542, 523, 435, 0, 478, 534, 533, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 228, 0, 269, 207, 501, 482, 483,
	484, 434, 485, 480, 481, 502, 476, 498, 499, 458,
	461, 486, 497, 487, 500, 503, 504, 543, 544, 545,
	490, 505, 496, 495, 488, 477, 506, 507, 462, 460,
	491, 492, 479, 119, 295, 471, 326, 327, 328, 312,
	0, 199, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 0,
	0, 0, 202, 0, 0, 227, 0, 0, 0, 463,
	0, 0, 287, 241, 0, 0, 0, 0, 517, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 0, 0, 456, 494, 493, 443, 452, 0, 0,
	183, 444, 0, 451, 445, 449, 448, 446, 447, 0,
	509, 0, 0, 0, 0, 0, 0, 416, 429, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 427, 0, 0, 0, 0, 472, 0,
	428, 0, 0, 474, 453, 454, 0, 0, 174, 292,
	308, 184, 283, 321, 189, 290, 179, 256, 279, 0,
	0, 176, 306, 289, 238, 221, 222, 175, 0, 274,
	200, 213, 196, 254, 450, 470, 475, 195, 531, 468,
	316, 178, 0, 315, 253, 302, 307, 239, 233, 177,
	304, 237, 232, 225, 204, 532, 217, 265, 231, 266,
	218, 243, 242, 244, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 0, 0, 318, 0, 0, 515, 0,
	0, 0, 291, 0, 0, 226, 0, 0, 0, 469,
	0, 277, 259, 528, 417, 0, 275, 229, 303, 267,
	309, 293, 317, 271, 268, 169, 294, 198, 240, 180,
	182, 194, 201, 203, 205, 206, 249, 250, 262, 282,
	296, 297, 298, 197, 190, 276, 191, 215, 192, 170,
	284, 193, 172, 263, 301, 0, 211, 272, 236, 173,
	235, 264, 300, 299, 181, 325, 331, 332, 336, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 0, 330, 209, 166, 167, 313,
	513, 255, 0, 527, 508, 510, 511, 514, 518, 519,
	520, 521, 522, 524, 526, 530, 280, 0, 0, 0,
	0, 0, 220, 261, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 311,
	323, 340, 343, 0, 0, 0, 171, 342, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 322,
	0, 0, 0, 0, 0, 473, 245, 246, 247, 248,
	516, 0, 188, 341, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 208, 214, 0, 216, 187, 260, 210, 320,
	223, 0, 0, 0, 252, 219, 285, 224, 230, 273,
	319, 258, 278, 185, 310, 286, 234, 0, 0, 538,
	512, 537, 539, 540, 536, 541, 542, 523, 435, 0,
	478, 534, 533, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 228,
	92, 269, 207, 501, 482, 483, 484, 434, 485, 480,
	481, 502, 476, 498, 499, 458, 461, 486, 497, 487,
	500, 503, 504, 543, 544, 545, 490, 505, 496, 495,
	488, 477, 506, 507, 462, 460, 491, 492, 479, 295,
	471, 0, 326, 327, 328, 312, 0, 199, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 432, 0, 0, 0, 202, 2634, 0,
	227, 0, 0, 0, 463, 0, 0, 287, 241, 0,
	0, 0, 0, 517, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 0, 0, 456, 494,
	493, 443, 452, 0, 0, 183, 444, 0, 451, 445,
	449, 448, 446, 447, 0, 509, 0, 0, 0, 0,
	0, 0, 416, 429, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 426, 427, 0,
	0, 0, 0, 472, 0, 428, 0, 0, 474, 453,
	454, 0, 0, 174, 292, 308, 184, 283, 321, 189,
	290, 179, 256, 279, 0, 0, 176, 306, 289, 238,
	221, 222, 175, 0, 274, 200, 213, 196, 254, 450,
	470, 475, 195, 531, 468, 316, 178, 0, 315, 253,
	302, 307, 239, 233, 177, 304, 237, 232, 225, 204,
	532, 217, 265, 231, 266, 218, 243, 242, 244, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 0, 0,
	318, 0, 0, 515, 0, 0, 0, 291, 0, 0,
	226, 0, 0, 0, 469, 0, 277, 259, 528, 417,
	0, 275, 229, 303, 267, 309, 293, 317, 271, 268,
	169, 294, 198, 240, 180, 182, 194, 201, 203, 205,
	206, 249, 250, 262, 282, 296, 297, 298, 197, 190,
	276, 191, 215, 192, 170, 284, 193, 172, 263, 301,
	0, 211, 272, 236, 173, 235, 264, 300, 299, 181,
	325, 331, 332, 336, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 0, 0,
	330, 209, 166, 167, 313, 513, 255, 0, 527, 508,
	510, 511, 514, 518, 519, 520, 521, 522, 524, 526,
	530, 280, 0, 0, 0, 0, 0, 220, 261, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 311, 323, 340, 343, 0, 0,
	0, 171, 342, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	473, 245, 246, 247, 248, 516, 0, 188, 341, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 208, 214, 0,
	216, 187, 260, 210, 320, 223, 0, 0, 0, 252,
	219, 285, 224, 230, 273, 319, 258, 278, 185, 310,
	286, 234, 0, 0, 538, 512, 537, 539, 540, 536,
	541, 542, 523, 435, 0, 478, 534, 533, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 228, 0, 269, 207, 501, 482,
	483, 484, 434, 485, 480, 481, 502, 476, 498, 499,
	458, 461, 486, 497, 487, 500, 503, 504, 543, 544,
	545, 490, 505, 496, 495, 488, 477, 506, 507, 462,
	460, 491, 492, 479, 295, 471, 0, 326, 327, 328,
	312, 0, 199, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 0,
	0, 0, 202, 1222, 0, 227, 0, 0, 0, 463,
	0, 0, 287, 241, 0, 0, 0, 0, 517, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 0, 0, 456, 494, 493, 443, 452, 0, 0,
	183, 444, 0, 451, 445, 449, 448, 446, 447, 0,
	509, 0, 0, 0, 0, 0, 0, 416, 429, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 427, 0, 0, 0, 0, 472, 0,
	428, 0, 0, 474, 453, 454, 0, 0, 174, 292,
	308, 184, 283, 321, 189, 290, 179, 256, 279, 0,
	0, 176, 306, 289, 238, 221, 222, 175, 0, 274,
	200, 213, 196, 254, 450, 470, 475, 195, 531, 468,
	316, 178, 0, 315, 253, 302, 307, 239, 233, 177,
	304, 237, 232, 225, 204, 532, 217, 265, 231, 266,
	218, 243, 242, 244, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 0, 0, 318, 0, 0, 515, 0,
	0, 0, 291, 0, 0, 226, 0, 0, 0, 469,
	0, 277, 259, 528, 417, 0, 275, 229, 303, 267,
	309, 293, 317, 271, 268, 169, 294, 198, 240, 180,
	182, 194, 201, 203, 205, 206, 249, 250, 262, 282,
	296, 297, 298, 197, 190, 276, 191, 215, 192, 170,
	284, 193, 172, 263, 301, 0, 211, 272, 236, 173,
	235, 264, 300, 299, 181, 325, 331, 332, 336, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 0, 330, 209, 166, 167, 313,
	513, 255, 0, 527, 508, 510, 511, 514, 518, 519,
	520, 521, 522, 524, 526, 530, 280, 0, 0, 0,
	0, 0, 220, 261, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 311,
	323, 340, 343, 0, 0, 0, 171, 342, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 322,
	0, 0, 0, 0, 0, 473, 245, 246, 247, 248,
	516, 0, 188, 341, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 208, 214, 0, 216, 187, 260, 210, 320,
	223, 0, 0, 0, 252, 219, 285, 224, 230, 273,
	319, 258, 278, 185, 310, 286, 234, 0, 0, 538,
	512, 537, 539, 540, 536, 541, 542, 523, 435, 0,
	478, 534, 533, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 228,
	0, 269, 207, 501, 482, 483, 484, 434, 485, 480,
	481, 502, 476, 498, 499, 458, 461, 486, 497, 487,
	500, 503, 504, 543, 544, 545, 490, 505, 496, 495,
	488, 477, 506, 507, 462, 460, 491, 492, 479, 295,
	471, 0, 326, 327, 328, 312, 0, 199, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 432, 0, 0, 0, 202, 0, 0,
	227, 0, 0, 0, 463, 0, 0, 287, 241, 0,
	0, 0, 0, 517, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 0, 0, 456, 494,
	493, 443, 452, 0, 0, 183, 444, 0, 451, 445,
	449, 448, 446, 447, 0, 509, 0, 0, 0, 0,
	0, 0, 416, 429, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 426, 427, 1000,
	0, 0, 0, 472, 0, 428, 0, 0, 474, 453,
	454, 0, 0, 174, 292, 308, 184, 283, 321, 189,
	290, 179, 256, 279, 0, 0, 176, 306, 289, 238,
	221, 222, 175, 0, 274, 200, 213, 196, 254, 450,
	470, 475, 195, 531, 468, 316, 178, 0, 315, 253,
	302, 307, 239, 233, 177, 304, 237, 232, 225, 204,
	532, 217, 265, 231, 266, 218, 243, 242, 244, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 0, 0,
	318, 0, 0, 515, 0, 0, 0, 291, 0, 0,
	226, 0, 0, 0, 469, 0, 277, 259, 528, 417,
	0, 275, 229, 303, 267, 309, 293, 317, 271, 268,
	169, 294, 198, 240, 180, 182, 194, 201, 203, 205,
	206, 249, 250, 262, 282, 296, 297, 298, 197, 190,
	276, 191, 215, 192, 170, 284, 193, 172, 263, 301,
	0, 211, 272, 236, 173, 235, 264, 300, 299, 181,
	325, 331, 332, 336, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 0, 0,
	330, 209, 166, 167, 313, 513, 255, 0, 527, 508,
	510, 511, 514, 518, 519, 520, 521, 522, 524, 526,
	530, 280, 0, 0, 0, 0, 0, 220, 261, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 311, 323, 340, 343, 0, 0,
	0, 171, 342, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	473, 245, 246, 247, 248, 516, 0, 188, 341, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 208, 214, 0,
	216, 187, 260, 210, 320, 223, 0, 0, 0, 252,
	219, 285, 224, 230, 273, 319, 258, 278, 185, 310,
	286, 234, 0, 0, 538, 512, 537, 539, 540, 536,
	541, 542, 523, 435, 0, 478, 534, 533, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 228, 0, 269, 207, 501, 482,
	483, 484, 434, 485, 480, 481, 502, 476, 498, 499,
	458, 461, 486, 497, 487, 500, 503, 504, 543, 544,
	545, 490, 505, 496, 495, 488, 477, 506, 507, 462,
	460, 491, 492, 479, 0, 0, 0, 326, 327, 328,
	312, 0, 199, 295, 471, 0, 0, 1596, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 432, 0, 0,
	0, 202, 0, 0, 227, 0, 0, 0, 463, 0,
	0, 287, 241, 0, 0, 0, 0, 517, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 425,
	0, 0, 456, 494, 493, 443, 452, 0, 0, 183,
	444, 0, 451, 445, 449, 448, 446, 447, 0, 509,
	0, 0, 0, 0, 0, 0, 416, 429, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 427, 0, 0, 0, 0, 472, 0, 428,
	0, 0, 474, 453, 454, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 0,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 450, 470, 475, 195, 531, 468, 316,
	178, 0, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 532, 217, 265, 231, 266, 218,
	243, 242, 244, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 0, 0, 318, 0, 0, 515, 0, 0,
	0, 291, 0, 0, 226, 0, 0, 0, 469, 0,
	277, 259, 528, 417, 0, 275, 229, 303, 267, 309,
	293, 317, 271, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 0, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 331, 332, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 330, 209, 166, 167, 313, 513,
	255, 0, 527, 508, 510, 511, 514, 518, 519, 520,
	521, 522, 524, 526, 530, 280, 0, 0, 0, 0,
	0, 220, 261, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 311, 323,
	340, 343, 0, 0, 0, 171, 342, 0, 0, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 473, 245, 246, 247, 248, 516,
	0, 188, 341, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 208, 214, 0, 216, 187, 260, 210, 320, 223,
	0, 0, 0, 252, 219, 285, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 234, 0, 0, 538, 512,
	537, 539, 540, 536, 541, 542, 523, 435, 0, 478,
	534, 533, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 228, 0,
	269, 207, 501, 482, 483, 484, 434, 485, 480, 481,
	502, 476, 498, 499, 458, 461, 486, 497, 487, 500,
	503, 504, 543, 544, 545, 490, 505, 496, 495, 488,
	477, 506, 507, 462, 460, 491, 492, 479, 295, 471,
	0, 326, 327, 328, 312, 0, 199, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 0, 0, 0, 202, 0, 0, 227,
	0, 0, 0, 463, 0, 0, 287, 241, 0, 0,
	0, 0, 517, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 0, 0, 456, 494, 493,
	443, 452, 0, 0, 183, 444, 0, 451, 445, 449,
	448, 446, 447, 0, 509, 0, 0, 0, 0, 0,
	0, 416, 429, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 427, 0, 0,
	0, 0, 472, 0, 428, 0, 0, 474, 453, 454,
	0, 0, 174, 292, 308, 184, 283, 321, 189, 290,
	179, 256, 279, 0, 0, 176, 306, 289, 238, 221,
	222, 175, 0, 274, 200, 213, 196, 254, 450, 470,
	475, 195, 531, 468, 316, 178, 0, 315, 253, 302,
	307, 239, 233, 177, 304, 237, 232, 225, 204, 532,
	217, 265, 231, 266, 218, 243, 242, 244, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 0, 0, 318,
	0, 0, 515, 0, 0, 0, 291, 0, 0, 226,
	0, 0, 0, 469, 0, 277, 259, 528, 417, 0,
	275, 229, 303, 267, 309, 293, 317, 271, 268, 169,
	294, 198, 240, 180, 182, 194, 201, 203, 205, 206,
	249, 250, 262, 282, 296, 297, 298, 197, 190, 276,
	191, 215, 192, 170, 284, 193, 172, 263, 301, 0,
	211, 272, 236, 173, 235, 264, 300, 299, 181, 325,
	331, 332, 336, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 330,
	209, 166, 167, 313, 513, 255, 0, 527, 508, 510,
	511, 514, 518, 519, 520, 521, 522, 524, 526, 530,
	280, 0, 0, 0, 0, 0, 220, 261, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 311, 323, 340, 343, 0, 0, 0,
	171, 342, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 473,
	245, 246, 247, 248, 516, 0, 188, 341, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 208, 214, 0, 216,
	187, 260, 210, 320, 223, 0, 0, 0, 252, 219,
	285, 224, 230, 273, 319, 258, 278, 185, 310, 286,
	234, 0, 0, 538, 512, 537, 539, 540, 536, 541,
	542, 523, 435, 0, 478, 534, 533, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 228, 0, 269, 207, 501, 482, 483,
	484, 434, 485, 480, 481, 502, 476, 498, 499, 458,
	461, 486, 497, 487, 500, 503, 504, 543, 544, 545,
	490, 505, 496, 495, 488, 477, 506, 507, 462, 460,
	491, 492, 479, 295, 471, 0, 326, 327, 328, 312,
	0, 199, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 1084, 0, 0, 0, 432, 0, 0,
	0, 202, 0, 0, 227, 0, 0, 0, 463, 0,
	0, 287, 241, 0, 0, 0, 0, 517, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 425,
	0, 0, 456, 494, 493, 443, 452, 0, 0, 183,
	444, 0, 451, 445, 449, 448, 446, 447, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 427, 0, 0, 0, 0, 472, 0, 428,
	0, 0, 474, 453, 454, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 0,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 450, 470, 475, 195, 531, 468, 316,
	178, 0, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 532, 217, 265, 231, 266, 218,
	243, 242, 244, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 0, 0, 318, 0, 0, 515, 0, 0,
	0, 291, 0, 0, 226, 0, 0, 0, 469, 0,
	277, 259, 528, 0, 0, 275, 229, 303, 267, 309,
	293, 317, 271, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 0, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 1085, 1086, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 330, 209, 166, 167, 313, 513,
	255, 0, 527, 508, 510, 511, 514, 518, 519, 520,
	521, 522, 524, 526, 530, 280, 0, 0, 0, 0,
	0, 220, 261, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 311, 323,
	340, 343, 0, 0, 0, 171, 342, 0, 0, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 473, 245, 246, 247, 248, 516,
	0, 188, 341, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 208, 214, 0, 216, 187, 260, 210, 320, 223,
	0, 0, 0, 252, 219, 285, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 234, 0, 0, 538, 512,
	537, 539, 540, 536, 541, 542, 523, 435, 0, 478,
	534, 533, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 228, 0,
	269, 207, 501, 482, 483, 484, 434, 485, 480, 481,
	502, 476, 498, 499, 458, 461, 486, 497, 487, 500,
	503, 504, 543, 544, 545, 490, 505, 496, 495, 488,
	477, 506, 507, 462, 460, 491, 492, 479, 295, 471,
	0, 326, 327, 328, 312, 0, 199, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 0, 0, 0, 202, 0, 0, 227,
	0, 0, 0, 463, 0, 0, 287, 241, 0, 0,
	0, 0, 517, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 456, 494, 493,
	443, 452, 0, 0, 183, 444, 0, 451, 445, 449,
	448, 446, 447, 0, 509, 0, 0, 0, 0, 0,
	0, 416, 429, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 427, 0, 0,
	0, 0, 472, 0, 428, 0, 0, 474, 453, 454,
	0, 0, 174, 292, 308, 184, 283, 321, 189, 290,
	179, 256, 279, 0, 0, 176, 306, 289, 238, 221,
	222, 175, 0, 274, 200, 213, 196, 254, 450, 470,
	475, 195, 531, 468, 316, 178, 0, 315, 253, 302,
	307, 239, 233, 177, 304, 237, 232, 225, 204, 532,
	217, 265, 231, 266, 218, 243, 242, 244, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 0, 0, 318,
	0, 0, 515, 0, 0, 0, 291, 0, 0, 226,
	0, 0, 0, 469, 0, 277, 259, 528, 417, 0,
	275, 229, 303, 267, 309, 293, 317, 271, 268, 169,
	294, 198, 240, 180, 182, 194, 201, 203, 205, 206,
	249, 250, 262, 282, 296, 297, 298, 197, 190, 276,
	191, 215, 192, 170, 284, 193, 172, 263, 301, 0,
	211, 272, 236, 173, 235, 264, 300, 299, 181, 325,
	331, 332, 336, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 330,
	209, 166, 167, 313, 513, 255, 0, 527, 508, 510,
	511, 514, 518, 519, 520, 521, 522, 524, 526, 530,
	280, 0, 0, 0, 0, 0, 220, 261, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 311, 323, 340, 343, 0, 0, 0,
	171, 342, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 473,
	245, 246, 247, 248, 516, 0, 188, 341, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 208, 214, 0, 216,
	187, 260, 210, 320, 223, 0, 0, 0, 252, 219,
	285, 224, 230, 273, 319, 258, 278, 185, 310, 286,
	234, 0, 0, 538, 512, 537, 539, 540, 536, 541,
	542, 523, 435, 0, 478, 534, 533, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 228, 0, 269, 207, 501, 482, 483,
	484, 434, 485, 480, 481, 502, 476, 498, 499, 458,
	461, 486, 497, 487, 500, 503, 504, 543, 544, 545,
	490, 505, 496, 495, 488, 477, 506, 507, 462, 460,
	491, 492, 479, 295, 471, 0, 326, 327, 328, 312,
	0, 199, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 432, 0, 0,
	0, 202, 0, 0, 227, 0, 0, 0, 463, 0,
	0, 287, 241, 0, 0, 0, 0, 517, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 425,
	0, 0, 456, 494, 493, 443, 452, 0, 0, 183,
	444, 0, 451, 445, 449, 448, 446, 447, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 429, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 427, 0, 0, 0, 0, 472, 0, 428,
	0, 0, 474, 453, 454, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 0,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 450, 470, 475, 195, 531, 468, 316,
	178, 0, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 532, 217, 265, 231, 266, 218,
	243, 242, 244, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 0, 0, 318, 0, 0, 515, 0, 0,
	0, 291, 0, 0, 226, 0, 0, 0, 469, 0,
	277, 259, 528, 0, 0, 275, 229, 303, 267, 309,
	293, 317, 271, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 0, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 331, 332, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 330, 209, 166, 167, 313, 513,
	255, 0, 527, 508, 510, 511, 514, 518, 519, 520,
	521, 522, 524, 526, 530, 280, 0, 0, 0, 0,
	0, 220, 261, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 311, 323,
	340, 343, 0, 0, 0, 171, 342, 0, 0, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 473, 245, 246, 247, 248, 516,
	0, 188, 341, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 208, 214, 0, 216, 187, 260, 210, 320, 223,
	0, 0, 0, 252, 219, 285, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 234, 0, 0, 538, 512,
	537, 539, 540, 536, 541, 542, 523, 435, 0, 478,
	534, 533, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 228, 0,
	269, 207, 501, 482, 483, 484, 434, 485, 480, 481,
	502, 476, 498, 499, 458, 461, 486, 497, 487, 500,
	503, 504, 543, 544, 545, 490, 505, 496, 495, 488,
	477, 506, 507, 462, 460, 491, 492, 479, 0, 0,
	0, 326, 327, 328, 312, 0, 199, 119, 295, 36,
	109, 91, 0, 0, 0, 0, 0, 0, 0, 257,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 287, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 292, 308, 184, 283, 321, 189, 290,
	179, 256, 279, 0, 0, 176, 306, 289, 238, 221,
	222, 175, 0, 274, 200, 213, 196, 254, 0, 305,
	333, 195, 324, 0, 316, 178, 0, 315, 253, 302,
	307, 239, 233, 177, 304, 237, 232, 225, 204, 0,
	217, 265, 231, 266, 218, 243, 242, 244, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 226,
	0, 0, 0, 334, 0, 277, 259, 0, 0, 0,
	275, 229, 303, 267, 309, 293, 317, 271, 268, 169,
	294, 198, 240, 180, 182, 194, 201, 203, 205, 206,
	249, 250, 262, 282, 296, 297, 298, 197, 190, 276,
	191, 215, 192, 170, 284, 193, 172, 263, 301, 0,
	211, 272, 236, 173, 235, 264, 300, 299, 181, 325,
	331, 332, 336, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 330,
	209, 166, 167, 313, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 329, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 220, 261, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 311, 323, 340, 343, 0, 0, 0,
	171, 342, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 338,
	245, 246, 247, 248, 355, 357, 188, 341, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 208, 214, 0, 216,
	187, 260, 210, 320, 223, 0, 0, 0, 252, 219,
	285, 224, 230, 273, 319, 258, 278, 185, 310, 286,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 37, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 228, 92, 269, 207, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 295, 0, 0, 326, 327, 328, 312,
	0, 199, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 287, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	2041, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 0,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 0, 305, 333, 195, 324, 0, 316,
	178, 0, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 0, 217, 265, 231, 266, 218,
	243, 242, 244, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2045, 318, 0, 0, 0, 2038, 0,
	2037, 291, 2039, 2042, 226, 0, 0, 0, 334, 0,
	277, 259, 0, 0, 0, 275, 229, 303, 267, 309,
	293, 317, 271, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 2043, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 331, 332, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 330, 209, 166, 167, 313, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	329, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 220, 261, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 311, 323,
	340, 343, 0, 0, 0, 171, 342, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 338, 245, 246, 247, 248, 212,
	0, 188, 341, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 208, 214, 0, 216, 187, 260, 210, 320, 223,
	0, 0, 0, 252, 219, 285, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 228, 0,
	269, 207, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 295, 0,
	0, 326, 327, 328, 312, 0, 199, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1330, 0, 0, 0, 0, 202, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 287, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	1331, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 748, 749, 750,
	747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 292, 308, 184, 283, 321, 189, 290,
	179, 256, 279, 0, 0, 176, 306, 289, 238, 221,
	222, 175, 0, 274, 200, 213, 196, 254, 0, 305,
	333, 195, 324, 0, 316, 178, 0, 315, 253, 302,
	307, 239, 233, 177, 304, 237, 232, 225, 204, 0,
	217, 265, 231, 266, 218, 243, 242, 244, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 226,
	0, 0, 0, 334, 0, 277, 259, 0, 0, 0,
	275, 229, 303, 267, 309, 293, 317, 271, 268, 169,
	294, 198, 240, 180, 182, 194, 201, 203, 205, 206,
	249, 250, 262, 282, 296, 297, 298, 197, 190, 276,
	191, 215, 192, 170, 284, 193, 172, 263, 301, 0,
	211, 272, 236, 173, 235, 264, 300, 299, 181, 325,
	331, 332, 336, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 330,
	209, 166, 167, 313, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 329, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 220, 261, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 311, 323, 340, 343, 0, 0, 0,
	171, 342, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 338,
	245, 246, 247, 248, 212, 0, 188, 341, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 208, 214, 0, 216,
	187, 260, 210, 320, 223, 0, 0, 0, 252, 219,
	285, 224, 230, 273, 319, 258, 278, 185, 310, 286,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 228, 0, 269, 207, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 295, 0, 0, 326, 327, 328, 312,
	0, 199, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 631, 0, 227, 0, 0, 0, 0, 0,
	0, 287, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 639, 640, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 0,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 0, 305, 333, 195, 324, 617, 316,
	178, 616, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 0, 217, 265, 231, 266, 218,
	243, 242, 244, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 226, 0, 0, 0, 334, 0,
	277, 259, 0, 0, 0, 275, 229, 303, 267, 309,
	293, 317, 629, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 0, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 331, 332, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 330, 209, 166, 167, 313, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	329, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 220, 261, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 311, 323,
	340, 343, 0, 0, 0, 171, 342, 0, 0, 0,
	0, 0, 0, 630, 314, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 633, 245, 246, 247, 248, 212,
	0, 188, 341, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 208, 214, 0, 216, 187, 260, 210, 320, 223,
	0, 0, 0, 641, 636, 637, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 228, 0,
	269, 207, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 119, 295,
	0, 326, 327, 328, 312, 0, 199, 0, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 287, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 1351, 0, 126, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 292, 308, 184, 283, 321, 189,
	290, 179, 256, 279, 0, 0, 176, 306, 289, 238,
	221, 222, 175, 0, 274, 200, 213, 196, 254, 0,
	305, 333, 195, 324, 0, 316, 178, 0, 315, 253,
	302, 307, 239, 233, 177, 304, 237, 232, 225, 204,
	0, 217, 265, 231, 266, 218, 243, 242, 244, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	226, 0, 0, 0, 334, 0, 277, 259, 0, 0,
	0, 275, 229, 303, 267, 309, 293, 317, 271, 268,
	169, 294, 198, 240, 180, 182, 194, 201, 203, 205,
	206, 249, 250, 262, 282, 296, 297, 298, 197, 190,
	276, 191, 215, 192, 170, 284, 193, 172, 263, 301,
	0, 211, 272, 236, 173, 235, 264, 300, 299, 181,
	325, 331, 332, 336, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 0, 0,
	330, 209, 166, 167, 313, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 329, 0, 0, 0,
	0, 280, 0, 0, 0, 0, 0, 220, 261, 0,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 311, 323, 340, 343, 0, 0,
	0, 171, 342, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	338, 245, 246, 247, 248, 212, 0, 188, 341, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 208, 214, 0,
	216, 187, 260, 210, 320, 223, 0, 0, 0, 252,
	219, 285, 224, 230, 273, 319, 258, 278, 185, 310,
	286, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 228, 92, 269, 207, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 119, 295, 0, 326, 327, 328,
	312, 0, 199, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 287, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 1342, 0, 126, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	292, 308, 184, 283, 321, 189, 290, 179, 256, 279,
	0, 0, 176, 306, 289, 238, 221, 222, 175, 0,
	274, 200, 213, 196, 254, 0, 305, 333, 195, 324,
	0, 316, 178, 0, 315, 253, 302, 307, 239, 233,
	177, 304, 237, 232, 225, 204, 0, 217, 265, 231,
	266, 218, 243, 242, 244, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 226, 0, 0, 0,
	334, 0, 277, 259, 0, 0, 0, 275, 229, 303,
	267, 309, 293, 317, 271, 268, 169, 294, 198, 240,
	180, 182, 194, 201, 203, 205, 206, 249, 250, 262,
	282, 296, 297, 298, 197, 190, 276, 191, 215, 192,
	170, 284, 193, 172, 263, 301, 0, 211, 272, 236,
	173, 235, 264, 300, 299, 181, 325, 331, 332, 336,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 0, 330, 209, 166, 167,
	313, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 329, 0, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 220, 261, 0, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	311, 323, 340, 343, 0, 0, 0, 171, 342, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	322, 0, 0, 0, 0, 0, 338, 245, 246, 247,
	248, 212, 0, 188, 341, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 208, 214, 0, 216, 187, 260, 210,
	320, 223, 0, 0, 0, 252, 219, 285, 224, 230,
	273, 319, 258, 278, 185, 310, 286, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	228, 92, 269, 207, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	295, 0, 0, 326, 327, 328, 312, 0, 199, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 287, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	639, 640, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 292, 308, 184, 283, 321,
	189, 290, 179, 256, 279, 0, 0, 176, 306, 289,
	238, 221, 222, 175, 0, 274, 200, 213, 196, 254,
	0, 305, 333, 195, 324, 617, 316, 178, 616, 315,
	253, 302, 307, 239, 233, 177, 304, 237, 232, 225,
	204, 0, 217, 265, 231, 266, 218, 243, 242, 244,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 226, 0, 0, 0, 334, 0, 277, 259, 0,
	0, 0, 275, 229, 303, 267, 309, 293, 317, 271,
	268, 169, 294, 198, 240, 180, 182, 194, 201, 203,
	205, 206, 249, 250, 262, 282, 296, 297, 298, 197,
	190, 276, 191, 215, 192, 170, 284, 193, 172, 263,
	301, 0, 211, 272, 236, 173, 235, 264, 300, 299,
	181, 325, 331, 332, 336, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 330, 209, 166, 167, 313, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 329, 0, 0,
	0, 0, 280, 0, 0, 0, 0, 0, 220, 261,
	0, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 311, 323, 340, 343, 0,
	0, 0, 171, 342, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 322, 0, 0, 0, 0,
	0, 338, 245, 246, 247, 248, 212, 0, 188, 341,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 208, 214,
	0, 216, 187, 260, 210, 320, 223, 0, 0, 0,
	641, 636, 637, 224, 230, 273, 319, 258, 278, 185,
	310, 286, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 228, 0, 269, 207, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 119, 295, 0, 326, 327,
	328, 312, 0, 199, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 287, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 292, 308, 184, 283, 321, 189, 290, 179, 256,
	279, 0, 0, 176, 306, 289, 238, 221, 222, 175,
	0, 274, 200, 213, 196, 254, 0, 305, 333, 195,
	324, 0, 316, 178, 0, 315, 253, 302, 307, 239,
	233, 177, 304, 237, 232, 225, 204, 0, 217, 265,
	231, 266, 218, 243, 242, 244, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 226, 0, 0,
	0, 334, 0, 277, 259, 0, 0, 0, 275, 229,
	303, 267, 309, 293, 317, 271, 268, 169, 294, 198,
	240, 180, 182, 194, 201, 203, 205, 206, 249, 250,
	262, 282, 296, 297, 298, 197, 190, 276, 191, 215,
	192, 170, 284, 193, 172, 263, 301, 0, 211, 272,
	236, 173, 235, 264, 300, 299, 181, 325, 331, 332,
	336, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 330, 209, 166,
	167, 313, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 329, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 220, 261, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 311, 323, 340, 343, 0, 0, 0, 171, 342,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 338, 245, 246,
	247, 248, 212, 0, 188, 341, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 208, 214, 0, 216, 187, 260,
	210, 320, 223, 0, 0, 0, 252, 219, 285, 224,
	230, 273, 319, 258, 278, 185, 310, 286, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 228, 92, 269, 207, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 295, 0, 0, 326, 327, 328, 312, 0, 199,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	984, 0, 227, 0, 0, 0, 0, 0, 0, 287,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 982, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	980, 0, 0, 0, 0, 174, 292, 308, 184, 283,
	321, 189, 290, 179, 256, 279, 0, 0, 176, 306,
	289, 238, 221, 222, 175, 0, 274, 200, 213, 196,
	254, 0, 305, 333, 195, 324, 0, 316, 178, 0,
	315, 253, 302, 307, 239, 233, 177, 304, 237, 232,
	225, 204, 0, 217, 265, 231, 266, 218, 243, 242,
	244, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 226, 0, 0, 0, 334, 0, 277, 259,
	0, 0, 0, 275, 229, 303, 267, 309, 293, 317,
	271, 268, 169, 294, 198, 240, 180, 182, 194, 201,
	203, 205, 206, 249, 250, 262, 282, 296, 297, 298,
	197, 190, 276, 191, 215, 192, 170, 284, 193, 172,
	263, 301, 0, 211, 272, 236, 173, 235, 264, 300,
	299, 181, 325, 331, 332, 336, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 330, 209, 166, 167, 313, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 329, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 220,
	261, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 311, 323, 340, 343,
	0, 0, 0, 171, 342, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 338, 245, 246, 247, 248, 212, 0, 188,
	341, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 208,
	214, 0, 216, 187, 260, 210, 320, 223, 0, 0,
	0, 252, 219, 285, 224, 230, 273, 319, 258, 278,
	185, 310, 286, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 228, 0, 269, 207,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 295, 0, 0, 326,
	327, 328, 312, 0, 199, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 978, 0, 227, 0, 0,
	0, 0, 0, 0, 287, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 982, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 980, 0, 0, 0, 0,
	174, 292, 308, 184, 283, 321, 189, 290, 179, 256,
	279, 0, 0, 176, 306, 289, 238, 221, 222, 175,
	0, 274, 200, 213, 196, 254, 0, 305, 333, 195,
	324, 0, 316, 178, 0, 315, 253, 302, 307, 239,
	233, 177, 304, 237, 232, 225, 204, 0, 217, 265,
	231, 266, 218, 243, 242, 244, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 226, 0, 0,
	0, 334, 0, 277, 259, 0, 0, 0, 275, 229,
	303, 267, 309, 293, 317, 271, 268, 169, 294, 198,
	240, 180, 182, 194, 201, 203, 205, 206, 249, 250,
	262, 282, 296, 297, 298, 197, 190, 276, 191, 215,
	192, 170, 284, 193, 172, 263, 301, 0, 211, 272,
	236, 173, 235, 264, 300, 299, 181, 325, 331, 332,
	336, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 330, 209, 166,
	167, 313, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 329, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 220, 261, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 311, 323, 340, 343, 0, 0, 0, 171, 342,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 338, 245, 246,
	247, 248, 212, 0, 188, 341, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 208, 214, 0, 216, 187, 260,
	210, 320, 223, 0, 0, 0, 252, 219, 285, 224,
	230, 273, 319, 258, 278, 185, 310, 286, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 228, 0, 269, 207, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 295, 0, 0, 326, 327, 328, 312, 0, 199,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 287,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2538, 0,
	126, 494, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 292, 308, 184, 283,
	321, 189, 290, 179, 256, 279, 0, 0, 176, 306,
	289, 238, 221, 222, 175, 0, 274, 200, 213, 196,
	254, 0, 305, 333, 195, 324, 0, 316, 178, 0,
	315, 253, 302, 307, 239, 233, 177, 304, 237, 232,
	225, 204, 0, 217, 265, 231, 266, 218, 243, 242,
	244, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 226, 0, 0, 0, 334, 0, 277, 259,
	0, 0, 0, 275, 229, 303, 267, 309, 293, 317,
	271, 268, 169, 294, 198, 240, 180, 182, 194, 201,
	203, 205, 206, 249, 250, 262, 282, 296, 297, 298,
	197, 190, 276, 191, 215, 192, 170, 284, 193, 172,
	263, 301, 0, 211, 272, 236, 173, 235, 264, 300,
	299, 181, 325, 331, 332, 336, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 330, 209, 166, 167, 313, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 329, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 220,
	261, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 311, 323, 340, 343,
	0, 0, 0, 171, 342, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 338, 245, 246, 247, 248, 212, 0, 188,
	341, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 208,
	214, 0, 216, 187, 260, 210, 320, 223, 0, 0,
	0, 252, 219, 285, 224, 230, 273, 319, 258, 278,
	185, 310, 286, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 228, 0, 269, 207,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 295, 0, 0, 326,
	327, 328, 312, 0, 199, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 287, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 982, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 980, 0, 0, 0, 0,
	174, 292, 308, 184, 283, 321, 189, 290, 179, 256,
	279, 0, 0, 176, 306, 289, 238, 221, 222, 175,
	0, 274, 200, 213, 196, 254, 0, 305, 333, 195,
	324, 0, 316, 178, 0, 315, 253, 302, 307, 239,
	233, 177, 304, 237, 232, 225, 204, 0, 217, 265,
	231, 266, 218, 243, 242, 244, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 226, 0, 0,
	0, 334, 0, 277, 259, 0, 0, 0, 275, 229,
	303, 267, 309, 293, 317, 271, 268, 169, 294, 198,
	240, 180, 182, 194, 201, 203, 205, 206, 249, 250,
	262, 282, 296, 297, 298, 197, 190, 276, 191, 215,
	192, 170, 284, 193, 172, 263, 301, 0, 211, 272,
	236, 173, 235, 264, 300, 299, 181, 325, 331, 332,
	336, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 330, 209, 166,
	167, 313, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 329, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 220, 261, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 311, 323, 340, 343, 0, 0, 0, 171, 342,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 338, 245, 246,
	247, 248, 212, 0, 188, 341, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 208, 214, 0, 216, 187, 260,
	210, 320, 223, 0, 0, 0, 252, 219, 285, 224,
	230, 273, 319, 258, 278, 185, 310, 286, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 228, 0, 269, 207, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 295, 0, 0, 326, 327, 328, 312, 0, 199,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 287,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 982, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2175, 0, 0, 0, 0, 174, 292, 308, 184, 283,
	321, 189, 290, 179, 256, 279, 0, 0, 176, 306,
	289, 238, 221, 222, 175, 0, 274, 200, 213, 196,
	254, 0, 305, 333, 195, 324, 0, 316, 178, 0,
	315, 253, 302, 307, 239, 233, 177, 304, 237, 232,
	225, 204, 0, 217, 265, 231, 266, 218, 243, 242,
	244, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 226, 0, 0, 0, 334, 0, 277, 259,
	0, 0, 0, 275, 229, 303, 267, 309, 293, 317,
	271, 268, 169, 294, 198, 240, 180, 182, 194, 201,
	203, 205, 206, 249, 250, 262, 282, 296, 297, 298,
	197, 190, 276, 191, 215, 192, 170, 284, 193, 172,
	263, 301, 0, 211, 272, 236, 173, 235, 264, 300,
	299, 181, 325, 331, 332, 336, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 330, 209, 166, 167, 313, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 329, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 220,
	261, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 311, 323, 340, 343,
	0, 0, 0, 171, 342, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 338, 245, 246, 247, 248, 212, 0, 188,
	341, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 208,
	214, 0, 216, 187, 260, 210, 320, 223, 0, 0,
	0, 252, 219, 285, 224, 230, 273, 319, 258, 278,
	185, 310, 286, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 228, 0, 269, 207,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 295, 0, 0, 326,
	327, 328, 312, 0, 199, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 1726, 0, 227, 0, 0,
	0, 0, 0, 0, 287, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 982, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 292, 308, 184, 283, 321, 189, 290, 179, 256,
	279, 0, 0, 176, 306, 289, 238, 221, 222, 175,
	0, 274, 200, 213, 196, 254, 0, 305, 333, 195,
	324, 0, 316, 178, 0, 315, 253, 302, 307, 239,
	233, 177, 304, 237, 232, 225, 204, 0, 217, 265,
	231, 266, 218, 243, 242, 244, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 226, 0, 0,
	0, 334, 0, 277, 259, 0, 0, 0, 275, 229,
	303, 267, 309, 293, 317, 271, 268, 169, 294, 198,
	240, 180, 182, 194, 201, 203, 205, 206, 249, 250,
	262, 282, 296, 297, 298, 197, 190, 276, 191, 215,
	192, 170, 284, 193, 172, 263, 301, 0, 211, 272,
	236, 173, 235, 264, 300, 299, 181, 325, 331, 332,
	336, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 330, 209, 166,
	167, 313, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 329, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 220, 261, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 311, 323, 340, 343, 0, 0, 0, 171, 342,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 338, 245, 246,
	247, 248, 212, 0, 188, 341, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 208, 214, 0, 216, 187, 260,
	210, 320, 223, 0, 0, 0, 252, 219, 285, 224,
	230, 273, 319, 258, 278, 185, 310, 286, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 228, 0, 269, 207, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 295, 0, 0, 326, 327, 328, 312, 0, 199,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 287,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2643, 0,
	126, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 292, 308, 184, 283,
	321, 189, 290, 179, 256, 279, 0, 0, 176, 306,
	289, 238, 221, 222, 175, 0, 274, 200, 213, 196,
	254, 0, 305, 333, 195, 324, 0, 316, 178, 0,
	315, 253, 302, 307, 239, 233, 177, 304, 237, 232,
	225, 204, 0, 217, 265, 231, 266, 218, 243, 242,
	244, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 226, 0, 0, 0, 334, 0, 277, 259,
	0, 0, 0, 275, 229, 303, 267, 309, 293, 317,
	271, 268, 169, 294, 198, 240, 180, 182, 194, 201,
	203, 205, 206, 249, 250, 262, 282, 296, 297, 298,
	197, 190, 276, 191, 215, 192, 170, 284, 193, 172,
	263, 301, 0, 211, 272, 236, 173, 235, 264, 300,
	299, 181, 325, 331, 332, 336, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 330, 209, 166, 167, 313, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 329, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 220,
	261, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 311, 323, 340, 343,
	0, 0, 0, 171, 342, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 338, 245, 246, 247, 248, 212, 0, 188,
	341, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 208,
	214, 0, 216, 187, 260, 210, 320, 223, 0, 0,
	0, 252, 219, 285, 224, 230, 273, 319, 258, 278,
	185, 310, 286, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 228, 0, 269, 207,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 295, 0, 0, 326,
	327, 328, 312, 0, 199, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 287, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 494, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 292, 308, 184, 283, 321, 189, 290, 179, 256,
	279, 0, 0, 176, 306, 289, 238, 221, 222, 175,
	0, 274, 200, 213, 196, 254, 0, 305, 333, 195,
	324, 0, 316, 178, 0, 315, 253, 302, 307, 239,
	233, 177, 304, 237, 232, 225, 204, 0, 217, 265,
	231, 266, 218, 243, 242, 244, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 226, 0, 0,
	0, 334, 0, 277, 259, 0, 0, 0, 275, 229,
	303, 267, 309, 293, 317, 271, 268, 169, 294, 198,
	240, 180, 182, 194, 201, 203, 205, 206, 249, 250,
	262, 282, 296, 297, 298, 197, 190, 276, 191, 215,
	192, 170, 284, 193, 172, 263, 301, 0, 211, 272,
	236, 173, 235, 264, 300, 299, 181, 325, 331, 332,
	336, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 330, 209, 166,
	167, 313, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 329, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 220, 261, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 311, 323, 340, 343, 0, 0, 0, 171, 342,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 338, 245, 246,
	247, 248, 212, 0, 188, 341, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 208, 214, 0, 216, 187, 260,
	210, 320, 223, 0, 0, 0, 252, 219, 285, 224,
	230, 273, 319, 258, 278, 185, 310, 286, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 228, 0, 269, 207, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 295, 0, 0, 326, 327, 328, 312, 0, 199,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 287,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2552, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 292, 308, 184, 283,
	321, 189, 290, 179, 256, 279, 0, 0, 176, 306,
	289, 238, 221, 222, 175, 0, 274, 200, 213, 196,
	254, 0, 305, 333, 195, 324, 0, 316, 178, 0,
	315, 253, 302, 307, 239, 233, 177, 304, 237, 232,
	225, 204, 0, 217, 265, 231, 266, 218, 243, 242,
	244, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 226, 0, 0, 0, 334, 0, 277, 259,
	0, 0, 0, 275, 229, 303, 267, 309, 293, 317,
	271, 268, 169, 294, 198, 240, 180, 182, 194, 201,
	203, 205, 206, 249, 250, 262, 282, 296, 297, 298,
	197, 190, 276, 191, 215, 192, 170, 284, 193, 172,
	263, 301, 0, 211, 272, 236, 173, 235, 264, 300,
	299, 181, 325, 331, 332, 336, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 330, 209, 166, 167, 313, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 329, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 220,
	261, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 311, 323, 340, 343,
	0, 0, 0, 171, 342, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 338, 245, 246, 247, 248, 212, 0, 188,
	341, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 208,
	214, 0, 216, 187, 260, 210, 320, 223, 0, 0,
	0, 252, 219, 285, 224, 230, 273, 319, 258, 278,
	185, 310, 286, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 228, 0, 269, 207,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 295, 0, 0, 326,
	327, 328, 312, 0, 199, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 287, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2287, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 292, 308, 184, 283, 321, 189, 290, 179, 256,
	279, 0, 0, 176, 306, 289, 238, 221, 222, 175,
	0, 274, 200, 213, 196, 254, 0, 305, 333, 195,
	324, 0, 316, 178, 0, 315, 253, 302, 307, 239,
	233, 177, 304, 237, 232, 225, 204, 0, 217, 265,
	231, 266, 218, 243, 242, 244, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 226, 0, 0,
	0, 334, 0, 277, 259, 0, 0, 0, 275, 229,
	303, 267, 309, 293, 317, 271, 268, 169, 294, 198,
	240, 180, 182, 194, 201, 203, 205, 206, 249, 250,
	262, 282, 296, 297, 298, 197, 190, 276, 191, 215,
	192, 170, 284, 193, 172, 263, 301, 0, 211, 272,
	236, 173, 235, 264, 300, 299, 181, 325, 331, 332,
	336, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 330, 209, 166,
	167, 313, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 329, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 220, 261, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 311, 323, 340, 343, 0, 0, 0, 171, 342,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 338, 245, 246,
	247, 248, 212, 0, 188, 341, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 208, 214, 0, 216, 187, 260,
	210, 320, 223, 0, 0, 0, 252, 219, 285, 224,
	230, 273, 319, 258, 278, 185, 310, 286, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 228, 0, 269, 207, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 295, 0, 0, 326, 327, 328, 312, 0, 199,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 287,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 292, 308, 184, 283,
	321, 189, 290, 179, 256, 279, 0, 0, 176, 306,
	289, 238, 221, 222, 175, 0, 274, 200, 213, 196,
	254, 0, 305, 333, 195, 324, 0, 316, 178, 0,
	315, 253, 302, 307, 239, 233, 177, 304, 237, 232,
	225, 204, 0, 217, 265, 231, 266, 218, 243, 242,
	244, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 2480, 0, 0, 291,
	0, 0, 226, 0, 0, 0, 334, 0, 277, 259,
	0, 0, 0, 275, 229, 303, 267, 309, 293, 317,
	271, 268, 169, 294, 198, 240, 180, 182, 194, 201,
	203, 205, 206, 249, 250, 262, 282, 296, 297, 298,
	197, 190, 276, 191, 215, 192, 170, 284, 193, 172,
	263, 301, 0, 211, 272, 236, 173, 235, 264, 300,
	299, 181, 325, 331, 332, 336, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 330, 209, 166, 167, 313, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 329, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 220,
	261, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 311, 323, 340, 343,
	0, 0, 0, 171, 342, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 338, 245, 246, 247, 248, 212, 0, 188,
	341, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 208,
	214, 0, 216, 187, 260, 210, 320, 223, 0, 0,
	0, 252, 219, 285, 224, 230, 273, 319, 258, 278,
	185, 310, 286, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 228, 0, 269, 207,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 295, 0, 0, 326,
	327, 328, 312, 0, 199, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 287, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 292, 308, 184, 283, 321, 189, 290, 179, 256,
	279, 0, 0, 176, 306, 289, 238, 221, 222, 175,
	0, 274, 200, 213, 196, 254, 0, 305, 333, 195,
	324, 0, 316, 178, 0, 315, 253, 302, 307, 239,
	233, 177, 304, 237, 232, 225, 204, 0, 217, 265,
	231, 266, 218, 243, 242, 244, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 2297, 0, 0, 291, 0, 0, 226, 0, 0,
	0, 334, 0, 277, 259, 0, 0, 0, 275, 229,
	303, 267, 309, 293, 317, 271, 268, 169, 294, 198,
	240, 180, 182, 194, 201, 203, 205, 206, 249, 250,
	262, 282, 296, 297, 298, 197, 190, 276, 191, 215,
	192, 170, 284, 193, 172, 263, 301, 0, 211, 272,
	236, 173, 235, 264, 300, 299, 181, 325, 331, 332,
	336, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 330, 209, 166,
	167, 313, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 329, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 220, 261, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 311, 323, 340, 343, 0, 0, 0, 171, 342,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 338, 245, 246,
	247, 248, 212, 0, 188, 341, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 208, 214, 0, 216, 187, 260,
	210, 320, 223, 0, 0, 0, 252, 219, 285, 224,
	230, 273, 319, 258, 278, 185, 310, 286, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 228, 0, 269, 207, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 295, 0, 0, 326, 327, 328, 312, 0, 199,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 287,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 292, 308, 184, 283,
	321, 189, 290, 179, 256, 279, 0, 0, 176, 306,
	289, 238, 221, 222, 175, 0, 274, 200, 213, 196,
	254, 0, 305, 333, 195, 324, 0, 316, 178, 0,
	315, 253, 302, 307, 239, 233, 177, 304, 237, 232,
	225, 204, 0, 217, 265, 231, 266, 218, 243, 242,
	244, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 226, 0, 0, 0, 334, 0, 277, 259,
	0, 0, 0, 275, 229, 303, 267, 309, 293, 317,
	271, 268, 169, 294, 198, 240, 180, 182, 194, 201,
	203, 205, 206, 249, 250, 262, 282, 296, 297, 298,
	197, 190, 276, 191, 215, 192, 170, 284, 193, 172,
	263, 301, 0, 211, 272, 236, 173, 235, 264, 300,
	299, 181, 325, 331, 332, 336, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 330, 209, 166, 167, 313, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 329, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 220,
	261, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 311, 323, 340, 343,
	0, 0, 0, 171, 342, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 338, 245, 246, 247, 248, 212, 0, 188,
	341, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 208,
	214, 0, 216, 187, 260, 210, 320, 223, 0, 0,
	0, 252, 219, 285, 224, 230, 273, 319, 258, 278,
	185, 310, 286, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 228, 0, 269, 207,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 295, 0, 0, 326,
	327, 328, 312, 0, 199, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 287, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 292, 308, 184, 283, 321, 189, 290, 179, 256,
	279, 0, 0, 176, 306, 289, 238, 221, 222, 175,
	0, 274, 200, 213, 196, 254, 0, 305, 333, 195,
	324, 0, 316, 178, 0, 315, 253, 302, 307, 239,
	233, 177, 304, 237, 232, 225, 204, 0, 217, 265,
	231, 266, 218, 243, 242, 244, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 226, 0, 0,
	0, 334, 0, 277, 259, 0, 0, 0, 275, 229,
	303, 267, 309, 293, 317, 271, 268, 169, 294, 198,
	240, 180, 182, 194, 201, 203, 205, 206, 249, 250,
	262, 282, 296, 297, 298, 197, 190, 276, 191, 215,
	192, 170, 284, 193, 172, 263, 301, 0, 211, 272,
	236, 173, 235, 264, 300, 299, 181, 325, 331, 332,
	336, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 330, 209, 166,
	167, 313, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 329, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 220, 261, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 311, 323, 340, 343, 0, 0, 0, 171, 342,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 338, 245, 246,
	247, 248, 212, 0, 188, 341, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 208, 214, 0, 216, 187, 260,
	210, 320, 223, 0, 0, 0, 252, 219, 285, 224,
	230, 273, 319, 258, 278, 185, 310, 286, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 228, 0, 269, 207, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 295, 0, 0, 326, 327, 328, 312, 0, 199,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 287,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 292, 308, 184, 283,
	321, 189, 290, 179, 256, 279, 0, 0, 176, 306,
	289, 238, 221, 222, 175, 0, 274, 200, 213, 196,
	254, 0, 305, 333, 195, 324, 0, 316, 178, 0,
	315, 253, 302, 307, 239, 233, 177, 304, 237, 232,
	225, 204, 0, 217, 265, 231, 266, 218, 243, 242,
	244, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 226, 0, 0, 0, 334, 0, 277, 259,
	0, 0, 0, 275, 229, 303, 267, 309, 293, 317,
	271, 268, 169, 294, 198, 240, 180, 182, 194, 201,
	203, 205, 206, 249, 250, 262, 282, 296, 297, 298,
	197, 190, 276, 191, 215, 192, 170, 284, 193, 172,
	263, 301, 0, 211, 272, 236, 173, 235, 264, 300,
	299, 181, 325, 331, 332, 336, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 330, 209, 166, 167, 313, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 329, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 220,
	261, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 311, 323, 340, 343,
	0, 0, 0, 171, 342, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 338, 245, 246, 247, 248, 212, 0, 188,
	341, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 208,
	214, 0, 216, 187, 260, 210, 320, 223, 0, 0,
	0, 252, 219, 285, 224, 230, 273, 319, 258, 278,
	185, 310, 286, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 228, 0, 269, 207,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 295, 0, 0, 326,
	327, 328, 312, 0, 199, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 287, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 2049, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 292, 308, 184, 283, 321, 189, 290, 179, 256,
	279, 0, 0, 176, 306, 289, 238, 221, 222, 175,
	0, 274, 200, 213, 196, 254, 0, 305, 333, 195,
	324, 0, 316, 178, 0, 315, 253, 302, 307, 239,
	233, 177, 304, 237, 232, 225, 204, 0, 217, 265,
	231, 266, 218, 243, 242, 244, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 226, 0, 0,
	0, 334, 0, 277, 259, 0, 0, 0, 275, 229,
	303, 267, 309, 293, 317, 271, 268, 169, 294, 198,
	240, 180, 182, 194, 201, 203, 205, 206, 249, 250,
	262, 282, 296, 297, 298, 197, 190, 276, 191, 215,
	192, 170, 284, 193, 172, 263, 301, 0, 211, 272,
	236, 173, 235, 264, 300, 299, 181, 325, 331, 332,
	336, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 330, 209, 166,
	167, 313, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 329, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 220, 261, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 311, 323, 340, 343, 0, 0, 0, 171, 342,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 338, 245, 246,
	247, 248, 212, 0, 188, 341, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 208, 214, 0, 216, 187, 260,
	210, 320, 223, 0, 0, 0, 252, 219, 285, 224,
	230, 273, 319, 258, 278, 185, 310, 286, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 228, 0, 269, 207, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 295, 0, 0, 326, 327, 328, 312, 0, 199,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 287,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 982, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 292, 308, 184, 283,
	321, 189, 290, 179, 256, 279, 0, 0, 176, 306,
	289, 238, 221, 222, 175, 0, 274, 200, 213, 196,
	254, 0, 305, 333, 195, 324, 0, 316, 178, 0,
	315, 253, 302, 307, 239, 233, 177, 304, 237, 232,
	225, 204, 0, 217, 265, 231, 266, 218, 243, 242,
	244, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 226, 0, 0, 0, 334, 0, 277, 259,
	0, 0, 0, 275, 229, 303, 267, 309, 293, 317,
	271, 268, 169, 294, 198, 240, 180, 182, 194, 201,
	203, 205, 206, 249, 250, 262, 282, 296, 297, 298,
	197, 190, 276, 191, 215, 192, 170, 284, 193, 172,
	263, 301, 0, 211, 272, 236, 173, 235, 264, 300,
	299, 181, 325, 331, 332, 336, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 330, 209, 166, 167, 313, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 329, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 220,
	261, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 311, 323, 340, 343,
	0, 0, 0, 171, 342, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 338, 245, 246, 247, 248, 212, 0, 188,
	341, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 208,
	214, 0, 216, 187, 260, 210, 320, 223, 0, 0,
	0, 252, 219, 285, 224, 230, 273, 319, 258, 278,
	185, 310, 286, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 228, 0, 269, 207,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 295, 0, 0, 326,
	327, 328, 312, 0, 199, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 287, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 292, 308, 184, 283, 321, 189, 290, 179, 256,
	279, 0, 0, 176, 306, 289, 238, 221, 222, 175,
	0, 274, 200, 213, 196, 254, 0, 305, 333, 195,
	324, 0, 316, 178, 0, 315, 253, 302, 307, 239,
	233, 177, 304, 237, 232, 225, 204, 0, 217, 265,
	231, 266, 218, 243, 242, 244, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 226, 0, 0,
	0, 334, 0, 277, 259, 0, 0, 0, 275, 229,
	303, 267, 309, 293, 317, 271, 268, 169, 294, 198,
	240, 180, 182, 194, 201, 203, 205, 206, 249, 250,
	262, 282, 296, 297, 298, 197, 190, 276, 191, 215,
	192, 170, 284, 193, 172, 263, 301, 0, 211, 272,
	236, 173, 235, 264, 300, 299, 181, 325, 331, 332,
	336, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 330, 209, 166,
	167, 313, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 329, 0, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 220, 261, 0, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 311, 323, 340, 343, 0, 0, 0, 171, 342,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 322, 0, 0, 0, 0, 0, 338, 245, 246,
	247, 248, 212, 0, 188, 341, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 208, 214, 0, 216, 187, 260,
	210, 320, 223, 0, 0, 0, 252, 219, 285, 224,
	230, 273, 319, 258, 278, 185, 310, 286, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 228, 0, 269, 207, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 295, 0, 0, 326, 327, 328, 312, 0, 199,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 287,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 1734, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 292, 308, 184, 283,
	321, 189, 290, 179, 256, 279, 0, 0, 176, 306,
	289, 238, 221, 222, 175, 0, 274, 200, 213, 196,
	254, 0, 305, 333, 195, 324, 0, 316, 178, 0,
	315, 253, 302, 307, 239, 233, 177, 304, 237, 232,
	225, 204, 0, 217, 265, 231, 266, 218, 243, 242,
	244, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 226, 0, 0, 0, 334, 0, 277, 259,
	0, 0, 0, 275, 229, 303, 267, 309, 293, 317,
	271, 268, 169, 294, 198, 240, 180, 182, 194, 201,
	203, 205, 206, 249, 250, 262, 282, 296, 297, 298,
	197, 190, 276, 191, 215, 192, 170, 284, 193, 172,
	263, 301, 0, 211, 272, 236, 173, 235, 264, 300,
	299, 181, 325, 331, 332, 336, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 330, 209, 166, 167, 313, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 329, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 220,
	261, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 311, 323, 340, 343,
	0, 0, 0, 171, 342, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 322, 0, 0, 0,
	0, 0, 338, 245, 246, 247, 248, 212, 0, 188,
	341, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 208,
	214, 0, 216, 187, 260, 210, 320, 223, 0, 0,
	0, 252, 219, 285, 224, 230, 273, 319, 258, 278,
	185, 310, 286, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 228, 0, 269, 207,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 0, 0, 326,
	327, 328, 312, 295, 199, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 287, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 0,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 0, 305, 333, 195, 324, 0, 316,
	178, 0, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 0, 217, 265, 231, 266, 218,
	243, 242, 244, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 226, 0, 0, 0, 334, 0,
	277, 259, 0, 0, 0, 275, 229, 303, 267, 309,
	293, 317, 271, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 0, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 331, 332, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 330, 209, 166, 167, 313, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	329, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 220, 261, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 311, 323,
	340, 343, 0, 0, 0, 171, 342, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 338, 245, 246, 247, 248, 212,
	0, 188, 341, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 208, 214, 0, 216, 187, 260, 210, 320, 223,
	0, 0, 0, 252, 219, 285, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 228, 0,
	269, 207, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 295, 0,
	0, 326, 327, 328, 312, 0, 199, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 287, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 292, 308, 184, 283, 321, 189, 290,
	179, 256, 279, 0, 0, 176, 306, 289, 238, 221,
	222, 175, 0, 274, 200, 213, 196, 254, 0, 305,
	333, 195, 324, 0, 316, 178, 0, 315, 253, 302,
	307, 239, 233, 177, 304, 237, 232, 225, 204, 0,
	217, 265, 231, 266, 218, 243, 242, 244, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 1644, 0, 0, 0, 291, 0, 0, 226,
	0, 0, 0, 334, 0, 277, 259, 0, 0, 0,
	275, 229, 303, 267, 309, 293, 317, 271, 268, 169,
	294, 198, 240, 180, 182, 194, 201, 203, 205, 206,
	249, 250, 262, 282, 296, 297, 298, 197, 190, 276,
	191, 215, 192, 170, 284, 193, 172, 263, 301, 0,
	211, 272, 236, 173, 235, 264, 300, 299, 181, 325,
	331, 332, 336, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 330,
	209, 166, 167, 313, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 329, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 220, 261, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 311, 323, 340, 343, 0, 0, 0,
	171, 342, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 338,
	245, 246, 247, 248, 212, 0, 188, 341, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 208, 214, 0, 216,
	187, 260, 210, 320, 223, 0, 0, 0, 252, 219,
	285, 224, 230, 273, 319, 258, 278, 185, 310, 286,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 228, 0, 269, 207, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 295, 0, 0, 326, 327, 328, 312,
	0, 199, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 287, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 0,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 0, 305, 333, 195, 324, 0, 316,
	178, 0, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 0, 217, 265, 231, 266, 218,
	243, 242, 244, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 226, 0, 0, 0, 334, 0,
	277, 259, 0, 0, 0, 275, 229, 303, 267, 309,
	293, 317, 271, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 0, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 331, 332, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 330, 209, 166, 167, 313, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	329, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 220, 261, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 311, 323,
	340, 343, 0, 0, 0, 171, 342, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 338, 245, 246, 247, 248, 212,
	0, 188, 341, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 208, 214, 0, 216, 187, 260, 210, 320, 223,
	0, 0, 0, 252, 219, 285, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 168, 0, 228, 0,
	269, 207, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 295, 0,
	0, 326, 327, 328, 312, 0, 199, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 287, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 292, 308, 184, 283, 321, 189, 290,
	179, 256, 279, 0, 0, 176, 306, 289, 238, 221,
	222, 175, 0, 274, 200, 213, 196, 254, 0, 305,
	333, 195, 324, 0, 316, 178, 0, 315, 253, 302,
	307, 239, 233, 177, 304, 237, 232, 225, 204, 0,
	217, 265, 231, 266, 218, 243, 242, 244, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 226,
	0, 0, 0, 334, 0, 277, 259, 0, 0, 0,
	275, 229, 303, 267, 309, 293, 317, 372, 268, 169,
	294, 198, 240, 180, 182, 194, 201, 203, 205, 206,
	249, 250, 262, 282, 296, 297, 298, 197, 190, 276,
	191, 215, 192, 170, 284, 193, 172, 263, 301, 0,
	211, 272, 236, 173, 235, 264, 300, 299, 181, 325,
	331, 332, 336, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 330,
	209, 166, 167, 313, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 329, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 220, 261, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 311, 323, 340, 343, 0, 0, 0,
	171, 342, 0, 0, 0, 0, 0, 0, 373, 314,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 338,
	245, 246, 247, 248, 212, 0, 188, 341, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 208, 214, 0, 216,
	187, 260, 210, 320, 223, 0, 0, 0, 252, 219,
	285, 224, 230, 273, 319, 258, 278, 185, 310, 286,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 228, 0, 269, 207, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 295, 0, 0, 326, 327, 328, 312,
	0, 199, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 287, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 0,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 0, 305, 333, 195, 324, 0, 316,
	178, 0, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 0, 217, 265, 231, 266, 218,
	243, 242, 244, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 318, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 226, 0, 0, 0, 334, 0,
	277, 259, 0, 0, 0, 275, 229, 303, 267, 309,
	293, 317, 271, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 0, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 331, 332, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 330, 209, 166, 167, 313, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	329, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 220, 261, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 311, 323,
	340, 343, 0, 0, 0, 171, 342, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 338, 245, 246, 247, 248, 212,
	0, 188, 341, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 208, 214, 0, 216, 187, 260, 210, 320, 223,
	0, 0, 0, 252, 219, 285, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 228, 0,
	269, 207, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 295, 0,
	0, 326, 327, 328, 312, 0, 199, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 202, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 287, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 292, 308, 184, 283, 321, 189, 290,
	179, 256, 279, 0, 0, 176, 306, 289, 238, 221,
	222, 175, 0, 274, 200, 213, 196, 254, 0, 305,
	333, 195, 324, 0, 316, 178, 0, 315, 253, 302,
	307, 239, 233, 177, 304, 237, 232, 225, 204, 0,
	217, 265, 231, 266, 218, 243, 242, 244, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 226,
	0, 0, 0, 334, 0, 277, 259, 0, 0, 0,
	275, 229, 303, 267, 309, 293, 317, 271, 268, 169,
	294, 198, 240, 180, 182, 194, 201, 203, 205, 206,
	249, 250, 262, 282, 296, 297, 298, 197, 190, 276,
	191, 215, 192, 170, 284, 193, 172, 263, 301, 0,
	211, 272, 236, 173, 235, 264, 300, 299, 181, 325,
	331, 332, 336, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 330,
	209, 166, 167, 313, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 329, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 220, 261, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 311, 323, 340, 343, 0, 0, 0,
	171, 342, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 338,
	245, 246, 247, 248, 212, 0, 188, 341, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 208, 214, 0, 216,
	187, 260, 210, 320, 223, 0, 0, 0, 252, 219,
	285, 224, 230, 273, 319, 258, 278, 185, 310, 286,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 228, 0, 269, 207, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 295, 0, 0, 326, 327, 328, 312,
	0, 199, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 287, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 292, 308,
	184, 283, 321, 189, 290, 179, 256, 279, 0, 0,
	176, 306, 289, 238, 221, 222, 175, 0, 274, 200,
	213, 196, 254, 0, 305, 333, 195, 324, 0, 316,
	178, 0, 315, 253, 302, 307, 239, 233, 177, 304,
	237, 232, 225, 204, 0, 217, 265, 231, 266, 218,
	243, 242, 244, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 226, 0, 0, 0, 334, 0,
	277, 259, 0, 0, 0, 275, 229, 303, 267, 309,
	293, 317, 271, 268, 169, 294, 198, 240, 180, 182,
	194, 201, 203, 205, 206, 249, 250, 262, 282, 296,
	297, 298, 197, 190, 276, 191, 215, 192, 170, 284,
	193, 172, 263, 301, 0, 211, 272, 236, 173, 235,
	264, 300, 299, 181, 325, 331, 332, 336, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 330, 209, 166, 167, 313, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	329, 0, 0, 0, 0, 280, 0, 0, 0, 0,
	0, 220, 261, 0, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 311, 323,
	340, 343, 0, 0, 0, 171, 342, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 322, 0,
	0, 0, 0, 0, 338, 245, 246, 247, 248, 212,
	0, 188, 341, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 208, 214, 0, 216, 187, 260, 210, 320, 223,
	0, 0, 0, 252, 219, 285, 224, 230, 273, 319,
	258, 278, 185, 310, 286, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 228, 0,
	269, 207, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 295, 0,
	0, 326, 327, 328, 312, 0, 199, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 202, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 287, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 671, 672, 673,
	1707, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 292, 308, 184, 283, 321, 189, 290,
	179, 256, 279, 0, 0, 176, 306, 289, 238, 221,
	222, 175, 0, 274, 200, 213, 196, 254, 0, 305,
	333, 195, 324, 0, 316, 178, 0, 315, 253, 302,
	307, 239, 233, 177, 304, 237, 232, 225, 204, 0,
	217, 265, 231, 266, 218, 243, 242, 244, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 226,
	0, 0, 0, 334, 0, 277, 259, 0, 0, 0,
	275, 229, 303, 267, 309, 293, 317, 271, 268, 169,
	294, 198, 240, 180, 182, 194, 201, 203, 205, 206,
	249, 250, 262, 282, 296, 297, 298, 197, 190, 276,
	191, 215, 192, 170, 284, 193, 172, 263, 301, 0,
	211, 272, 236, 173, 235, 264, 300, 299, 181, 325,
	331, 332, 336, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 330,
	209, 166, 167, 313, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 329, 0, 0, 0, 0,
	280, 0, 0, 0, 0, 0, 220, 261, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 311, 323, 340, 343, 0, 0, 0,
	171, 342, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 322, 0, 0, 0, 0, 0, 338,
	245, 246, 247, 248, 212, 0, 188, 341, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 335, 208, 214, 0, 216,
	187, 260, 210, 320, 223, 257, 0, 0, 252, 219,
	285, 224, 230, 273, 319, 258, 278, 185, 310, 286,
	234, 0, 202, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 287, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 671, 672, 673, 1707, 0, 0, 0,
	183, 168, 0, 228, 0, 269, 207, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 327, 328, 312,
	0, 199, 0, 0, 0, 0, 0, 0, 174, 292,
	308, 184, 283, 321, 189, 290, 179, 256, 279, 0,
	0, 176, 306, 289, 238, 221, 222, 175, 0, 274,
	200, 213, 196, 254, 0, 305, 333, 195, 324, 0,
	316, 178, 0, 315, 253, 302, 307, 239, 233, 177,
	304, 237, 232, 225, 204, 0, 217, 265, 231, 266,
	218, 243, 242, 244, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 226, 0, 0, 0, 334,
	0, 277, 259, 0, 0, 0, 275, 229, 303, 267,
	309, 293, 317, 271, 268, 169, 294, 198, 240, 180,
	182, 194, 201, 203, 205, 206, 249, 250, 262, 282,
	296, 297, 298, 197, 190, 276, 191, 215, 192, 170,
	284, 193, 172, 263, 301, 0, 211, 272, 236, 173,
	235, 264, 300, 299, 181, 325, 331, 332, 336, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 0, 330, 209, 166, 167, 313,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 329, 0, 0, 0, 0, 280, 0, 0, 0,
	0, 0, 220, 261, 0, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 311,
	323, 340, 343, 0, 0, 0, 171, 342, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 322,
	0, 0, 0, 0, 0, 338, 245, 246, 247, 248,
	212, 0, 188, 341, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 335, 208, 214, 0, 216, 187, 260, 210, 320,
	223, 257, 0, 0, 252, 219, 285, 224, 230, 273,
	319, 258, 278, 185, 310, 286, 234, 0, 202, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 287, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 671,
	672, 673, 0, 0, 0, 0, 183, 168, 0, 228,
	0, 269, 207, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 327, 328, 312, 0, 199, 0, 0,
	0, 0, 0, 0, 174, 292, 308, 184, 283, 321,
	189, 290, 179, 256, 279, 0, 0, 176, 306, 289,
	238, 221, 222, 175, 0, 274, 200, 213, 196, 254,
	0, 305, 333, 195, 324, 0, 316, 178, 0, 315,
	253, 302, 307, 239, 233, 177, 304, 237, 232, 225,
	204, 0, 217, 265, 231, 266, 218, 243, 242, 244,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 226, 0, 0, 0, 334, 0, 277, 259, 0,
	0, 0, 275, 229, 303, 267, 309, 293, 317, 271,
	268, 169, 294, 198, 240, 180, 182, 194, 201, 203,
	205, 206, 249, 250, 262, 282, 296, 297, 298, 197,
	190, 276, 191, 215, 192, 170, 284, 193, 172, 263,
	301, 0, 211, 272, 236, 173, 235, 264, 300, 299,
	181, 325, 331, 332, 336, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 330, 209, 166, 167, 313, 119, 255, 36, 109,
	91, 0, 0, 0, 0, 0, 251, 329, 0, 0,
	0, 0, 280, 0, 0, 0, 114, 0, 220, 261,
	0, 281, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 0, 288, 311, 323, 340, 343, 0,
	0, 0, 171, 342, 0, 0, 0, 68, 0, 0,
	0, 314, 0, 116, 0, 322, 0, 0, 0, 0,
	0, 338, 245, 246, 247, 248, 212, 0, 188, 341,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 208, 214,
	0, 216, 187, 260, 210, 320, 223, 0, 0, 0,
	252, 219, 285, 224, 230, 273, 319, 258, 278, 185,
	310, 286, 234, 0, 0, 855, 0, 0, 0, 0,
	0, 110, 111, 0, 112, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 228, 0, 269, 207, 0,
	0, 0, 0, 0, 0, 748, 749, 750, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 90,
	108, 117, 0, 66, 0, 0, 0, 0, 326, 327,
	328, 312, 855, 199, 0, 0, 0, 0, 0, 107,
	102, 101, 0, 0, 0, 843, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 863, 867, 869, 871, 873, 874, 876,
	1139, 880, 877, 878, 879, 0, 0, 858, 859, 860,
	861, 841, 842, 864, 0, 844, 587, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 856, 862, 0,
	0, 0, 0, 0, 104, 105, 866, 868, 870, 872,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 843, 0, 0, 0, 0, 0, 0, 76,
	0, 857, 0, 106, 0, 77, 0, 615, 0, 0,
	863, 867, 869, 871, 873, 874, 876, 0, 880, 877,
	878, 879, 0, 0, 858, 859, 860, 861, 841, 842,
	864, 2243, 844, 0, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 856, 862, 0, 0, 0, 0,
	0, 0, 0, 866, 868, 870, 872, 875, 78, 0,
	0, 0, 0, 0, 0, 1659, 0, 79, 35, 0,
	0, 0, 1135, 0, 0, 1132, 0, 0, 0, 1134,
	1131, 1133, 1137, 1138, 0, 0, 617, 1136, 857, 616,
	0, 0, 2663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2225, 0, 0, 0, 0, 0, 0, 0,
	37, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 1793, 0, 602, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 81, 85, 2243, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 1120, 1121, 1122, 1123,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 1142, 1143, 1144,
	1145, 1146, 1147, 1140, 1141, 0, 0, 1659, 0, 0,
	0, 0, 0, 586, 0, 0, 2229, 2225, 0, 0,
	865, 0, 0, 0, 589, 610, 0, 2233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2225, 0, 0, 2222, 605, 0,
	0, 2224, 2226, 2228, 0, 2230, 2231, 2232, 2234, 2235,
	2236, 2238, 2239, 2240, 2241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2323, 0, 0, 0, 0, 0,
	606, 611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2244, 0, 599, 0, 601,
	614, 0, 0, 0, 598, 596, 595, 865, 600, 590,
	591, 0, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 609, 0, 0, 0, 0,
	0, 2242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 391, 398, 388, 0, 2221, 0,
	0, 2229, 0, 0, 0, 0, 395, 396, 0, 397,
	401, 603, 2233, 383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 2237, 2229, 0,
	0, 0, 2222, 0, 2227, 0, 2224, 2226, 2228, 2233,
	2230, 2231, 2232, 2234, 2235, 2236, 2238, 2239, 2240, 2241,
	0, 0, 410, 0, 0, 411, 0, 0, 0, 2222,
	0, 0, 0, 2224, 2226, 2228, 0, 2230, 2231, 2232,
	2234, 2235, 2236, 2238, 2239, 2240, 2241, 0, 0, 392,
	2244, 391, 398, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 0, 397, 401, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 2244, 0, 0,
	406, 0, 0, 0, 0, 0, 2242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 2221, 391, 398, 388, 0, 0, 410,
	0, 0, 411, 2242, 0, 0, 395, 396, 0, 397,
	401, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	2221, 0, 2237, 406, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 386, 385, 0, 2237,
	0, 0, 0, 390, 0, 0, 2227, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 386, 385, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 387, 0, 0, 389,
	393, 399, 0, 400, 402, 0, 0, 403, 404, 405,
	0, 0, 407, 408, 0, 384, 386, 385, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 393, 399, 0,
	400, 402, 0, 0, 403, 404, 405, 0, 0, 407,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	393, 399, 0, 400, 402, 0, 0, 403, 404, 405,
	0, 0, 407, 408,
}

var yyPact = [...]int{
	27496, -1000, -296, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -162, 25437, 25437, -1000, -1000,
	1699, -1000, 24942, 9587, 25932, 155, 25932, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 422, -1000, 24447, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 377, 28172, 264, 248,
	7597, 25932, -277, -1000, 2236, -132, -1000, -1000, -1000, -1000,
	202, 450, 23952, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 27740, 72, 450,
	555, 560, 645, 645, 11072, 2236, 250, 109, -1000, 735,
	27496, 27199, 346, 25932, -1000, 978, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 346, -1000, -1000, -1000, 2236,
	2236, -1000, 25932, 25932, -22, 1095, -1000, 232, 227, 239,
	977, -1000, -1000, -1000, -1000, -1000, 2245, -1000, 25932, 1875,
	25932, -1000, 1350, 284, 28259, 2076, 1007, 515, 1919, -1000,
	-1000, 1840, -1000, 104, 152, 135, 269, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 96, -1000, 2108, -1000, -1000, 85,
	-1000, -1000, 97, -1000, -1000, -1000, -80, -1000, -1000, -1000,
	-1000, -1000, -151, -151, 627, 1177, 7597, -1000, 1355, -1000,
	2238, -1000, -1000, -1000, -1000, 5113, 9082, 9082, 9082, 9082,
	-1000, -1000, 1710, 7597, 1835, 1834, -1000, -1000, -1000, -1000,
	966, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1475, 8587, -1000, 1832, 1831, 1830, 1828,
	1827, 1824, 1823, 1819, 1816, 1815, 1814, 1633, 1804, 1474,
	1468, 1798, 1793, 1790, 9082, 1465, 1633, 1633, 1789, 1784,
	1783, 1782, 1780, 1777, 1772, 1769, 1768, 1765, 1763, 1747,
	1741, 1739, 1730, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1340, -1000, 965, 954,
	-1000, 1728, 2056, 2131, 1651, 2190, 2132, 2130, 2116, 2100,
	1316, -1000, -1000, 53, 372, 372, 372, 410, 372, 420,
	417, -1000, -1000, -1000, -1000, -1000, -1000, 507, -1000, -1000,
	-1000, -1000, 808, 25932, -1000, 1676, 1012, 2126, 332, 331,
	211, -1000, 1012, 246, 327, 2131, 2131, -70, -118, 1012,
	1012, -118, 91, -1000, -1000, -1000, 1113, 325, 1113, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2099, 2097, 377, 377,
	388, -1000, -165, -1000, -1000, 611, -1000, 534, -1000, 1350,
	280, 279, 840, 1121, -1000, 1018, 25932, 25932, 25932, 1018,
	1018, 14045, 13550, -1000, 2131, 1651, -1000, 1602, 1719, 1651,
	377, 377, 377, 377, 377, 377, 377, 25932, 6598, 6598,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 266, -1000,
	-1000, -1000, -1000, -1000, 233, 1725, -1000, 25932, 238, 2131,
	2056, 2131, -1000, -1000, 959, 1311, 1464, -1000, -1000, 232,
	1032, -1000, 607, -1000, -1000, -1000, -1000, 25932, 222, -1000,
	1457, 1723, -1000, 353, 876, 924, -1000, 75, 28312, 21470,
	1350, 21470, 25932, -1000, -1000, -1000, -1000, -1000, -1000, -85,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 68, -1000, 68, 7597, 7597, 7597, 7597,
	7597, -1000, 416, 8092, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 9082, 9082, 9082, 9082, 9082, 9082, 9082, 9082, 9082,
	9082, 9082, 9082, 1708, 1081, 9082, 9082, 9082, 1719, 2109,
	812, -1000, -1000, -1000, -1000, -1000, 1101, 1177, 7597, 7597,
	25932, -1000, 27585, 7597, 7597, 102, 7597, 2094, 2094, 3627,
	25932, 7597, -1000, 1592, 1578, -1000, -1000, 1196, 7597, -1000,
	-1000, 7597, 9082, 7597, -1000, -1000, -1000, -1000, 73, 2094,
	7597, 7597, 2094, 2094, 2094, 1137, 2094, 2094, 2094, 2094,
	2094, 2094, 2094, 25932, 2020, 61, -1000, -1000, -1000, 1655,
	-1000, 1692, 1692, 1655, 1655, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1722, 1721, -1000, -1000, 1691, 1691,
	1691, 1655, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1713, 1713, 1715,
	1713, 25932, 2131, -277, 6103, -1000, -282, 2056, 7597, -1000,
	-1000, 7597, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1463, 397, 372, -1000, 25932, 1131, 21470, 1350, 1344, 25932,
	372, 372, 388, -1000, 25932, 808, 2089, 25932, 2208, 9082,
	21470, 1113, 1012, -1000, 2208, 1113, -1000, -1000, -1000, 1012,
	1012, -1000, -1000, -1000, -1000, 1113, 1113, -1000, -1000, -100,
	2208, 2208, -87, 25932, 25932, 372, 25932, -1000, -1000, -1000,
	-1000, 25932, -1000, -1000, 25932, 21470, 19985, -1000, -121, 552,
	531, 539, -1000, -1000, 330, 365, 12559, 299, 21470, 4617,
	-1000, -1000, 1018, 1018, 1018, 4617, 4617, 923, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2056, -1000, -1000, -1000, -1000,
	25932, 21470, 1350, 25932, 25932, 25932, 27199, -1000, 783, -1000,
	-1000, 10577, 958, 783, 1453, 25932, 1898, 2006, -1000, 1712,
	12064, 25932, -1000, -1000, -278, -1000, 11568, 25932, 2056, -1000,
	2056, 2682, -1000, 2118, -1000, 232, 145, -1000, -1000, -1000,
	-1000, -1000, -1000, 951, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 679, -1000, 25932, -1000, -1000, 75, 21470,
	1049, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 127, -1000,
	-1000, 149, -1000, 394, 10, 1001, -1000, -1000, 50, 146,
	430, 50, 1177, -1000, 1112, 1112, 1147, -1000, 379, -1000,
	-1000, -1000, -1000, 1710, -1000, -1000, -1000, 1459, 1848, -1000,
	1170, 1170, 975, 975, 975, 975, 975, 1259, 1259, -1000,
	-1000, -1000, 5113, 1708, 9082, 9082, 9082, 356, 2494, 3115,
	-1000, 7597, 1122, -1000, 7597, 1385, 871, 950, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1566, 627,
	1558, 1452, 2239, 1554, 7597, -1000, -1000, 7597, 1267, 7102,
	-1000, -1000, -1000, 1553, 949, 1552, -1000, -1000, -1000, 1548,
	715, 1540, 1184, 1539, 678, 7597, 1000, 997, 7597, 7597,
	7597, 7597, 1537, 7597, 7597, 7597, 7597, 7597, 7597, 7597,
	-1000, 7597, 58, -1000, -1000, -1000, -1000, 1310, -1000, 1297,
	-1000, -1000, -1000, 1451, 1451, -1000, 1293, -1000, -1000, -1000,
	-1000, 1291, -1000, -1000, 1288, -1000, -1000, -1000, -1000, 995,
	-1000, 1177, -1000, 1438, -1000, 803, 675, -1000, 1252, -1000,
	-1000, 23457, 25932, 44, -1000, 2063, 928, -1000, 10, 638,
	1862, 2019, 25932, 25932, 22962, -1000, 1706, 993, -1000, -1000,
	7597, -1000, 1849, 25932, 2208, -1000, 25932, 2208, 2208, 1012,
	27199, 1113, 25932, 1113, -1000, -1000, 1113, -1000, 939, -1000,
	25932, -1000, -1000, -1000, -1000, 43, 928, 2193, 709, -1000,
	-1000, -1000, -1000, 26427, 26427, 13055, 26427, -1000, 1039, -1000,
	-1000, 548, 528, 604, -1000, -1000, 391, -1000, -1000, 638,
	-1000, -1000, -1000, 1704, 1088, -1000, -1000, 9082, -1000, 4617,
	4617, 4617, -1000, -1000, 16025, -1000, -1000, 670, 638, 1884,
	666, -1000, 666, -1000, 2208, 6598, -1000, 19985, -1000, -1000,
	22460, -1000, 21965, 2208, -287, 791, -1000, 2022, -278, 25932,
	25932, 988, 132, -1000, 983, -1000, 630, -1000, 1703, -1000,
	981, 1987, 631, -1000, 1086, -1000, -1000, -1000, 921, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -23, -1000, -1000, 25932, 1457,
	980, 1049, 661, -1000, 380, 905, 894, -1000, 21470, 94,
	21470, -1000, 21470, -1000, -1000, 249, -1000, 25932, 2055, -1000,
	-1000, -1000, 1413, -305, 2051, -1000, -1000, -1000, -1000, -1000,
	979, -1000, 356, 2494, 1962, -1000, 9082, 9082, 2083, 1074,
	-1000, 7597, 1221, 27595, 1072, 15035, 25932, -1000, -1000, 7597,
	7597, -1000, 2078, 2052, -1000, 7597, 7597, 1390, -1000, 25932,
	-1000, -1000, -1000, 15035, -1000, 9082, -1000, 7597, 1980, -63,
	-63, 1954, 1950, 1913, 969, -63, 1886, 1845, 1841, 1785,
	1663, 1596, 1591, 1177, -1000, -1000, 1535, 1534, 968, -1000,
	963, 1533, 962, 955, 6103, -1000, -127, 7597, 7597, 7597,
	1994, -1000, -1000, 1676, 1106, 1700, -60, 1077, -1000, 362,
	21470, 277, -1000, 1883, 317, -1000, 2019, -1000, 590, -1000,
	1697, 1694, 25932, 755, -1000, 882, 27496, -1000, 25932, 1177,
	-1000, 1350, 1012, -1000, 2208, 817, -1000, -1000, 2208, -1000,
	1012, -1000, 1012, 1113, 25932, -1000, -60, 1077, 362, 25932,
	19985, 19985, 19985, 19985, -1000, 1968, 1966, -1000, 1937, 1935,
	1956, 25932, 19985, 1676, -1000, 26813, -1000, -1000, -1000, -1000,
	-1000, 1719, 953, 2047, 529, 7597, -1000, -1000, -1000, 490,
	21470, 1436, 299, -1000, -1000, -1000, -1000, -1000, 25932, 25932,
	2205, -1000, 662, -1000, -1000, 874, -1000, 2205, -1000, 1286,
	1428, 1160, 630, 631, 946, -1000, 132, 25932, 1978, 1693,
	-1000, 25932, -278, 6103, 247, -278, 25932, 6103, 2682, 1284,
	-1000, -1000, -1000, 2210, 21470, 1350, 991, 1025, -1000, 84,
	-1000, 119, 329, 1427, -1000, 415, 83, -1000, 1083, 1413,
	414, -1000, -1000, 9082, -1000, -1000, -1000, -1000, 1177, 7597,
	1531, -1000, 488, 488, 1530, -1000, 1655, 1692, -1000, 1655,
	1691, 1655, 488, 488, 1525, -1000, 1472, 1585, -1000, -1000,
	1564, 1557, 7597, -1000, 1523, 3015, 952, -63, -1000, 1684,
	-1000, -63, -63, -63, -63, -1000, -63, -63, -63, -63,
	-63, -63, -63, -1000, -1000, -1000, 1414, -1000, -1000, -1000,
	1283, -1000, 1276, -1000, -48, -38, 1177, 1177, -1000, -1000,
	2012, 2081, 2061, 10082, 1185, -1000, -1000, 20975, -1000, 304,
	-1000, -1000, -1000, 436, 105, 1274, 296, -1000, 1480, 25932,
	-1000, -1000, -1000, -1000, -1000, 1077, 1077, 1077, 10082, 10082,
	346, 864, 860, 19985, 25932, -1000, 19490, 1522, -1000, 638,
	2208, -1000, 25932, -1000, 2208, 2208, 1012, -1000, 1185, 20975,
	304, 772, -1000, 1080, 1846, 1880, 1846, -1000, -1000, -1000,
	-1000, 1936, -1000, 1934, -1000, -1000, 772, -1000, -1000, -1000,
	-1000, -1000, 529, -1000, 2117, 526, 526, 526, 1521, -1000,
	661, 1505, -1000, -1000, -1000, -1000, 2198, 2185, 20480, 2198,
	-1000, -287, 2251, 250, 25932, 240, -1000, -278, 25932, -1000,
	-1000, 1493, 660, -278, -1000, 630, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1350, -1000, 118, -1000, -1000, -1000, -1000,
	-1000, -1000, -12, -1000, 25932, -1000, 1413, 1412, 81, 25932,
	-1000, 1177, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7597, -1000, -1000,
	-1000, 1551, -1000, -1000, 7597, -1000, 340, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1492,
	1491, -284, -33, 2184, 2183, -1000, -1000, 250, 25932, 1489,
	658, -1000, -1000, -1000, 27682, 530, -1000, 25932, 1158, 526,
	372, 526, 1157, 1683, -1000, -1000, -1000, 1411, 7, -1000,
	-1000, -1000, 1396, 1395, 1273, -1000, -1000, 1290, 844, 21,
	-1000, -1000, -1000, -1000, -1000, -1000, 1682, 15035, 15530, 1383,
	1488, 1487, 26427, 19985, 19490, 753, -1000, 856, -1000, -1000,
	-1000, 2208, -1000, -1000, 2208, -1000, 7, -1000, 2192, 25932,
	6103, -1000, -1000, 7597, 1680, -1000, 7597, -1000, -1000, -1000,
	-1000, -1000, 1678, 1982, -1000, -1000, -1000, -1000, -1000, -1000,
	7597, 7597, -1000, -1000, -1000, 25932, -1000, -1000, -278, -1000,
	630, 941, -1000, 630, 638, -1000, -1000, 132, -1000, -1000,
	-1000, -87, 1546, -1000, 1538, 2192, -1000, 2178, -1000, -1000,
	-287, 1368, -1000, 2177, 1367, 1335, -1000, 1676, 28007, 10082,
	1309, -1000, -1000, 25932, 25932, -1000, 25932, 25932, 372, 7597,
	-1000, -1000, 235, -1000, -1000, 129, -1000, -1000, 1289, 358,
	-1000, 18005, -1000, -1000, -1000, -1000, -1000, 68, 28007, 2208,
	753, 856, -1000, -1000, 879, -1000, -1000, -1000, 2131, -1000,
	-1000, 1177, 25932, 1177, 18995, -1000, 2176, 2172, 1177, 627,
	631, 630, -1000, -87, -1000, -65, -47, -1000, -1000, 36,
	7597, -289, -1000, 1366, -36, -1000, -1000, 2079, 339, 27980,
	-1000, 1077, 1077, 676, 1077, 1077, 1077, 1077, 259, 258,
	1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
	1077, 1077, 1077, 1077, 1675, -1000, -1000, 1309, -1000, -1000,
	1167, 9082, -1000, -1000, 1364, 15530, 471, 481, 1674, -1000,
	217, 2250, -1000, 1153, 1152, -1000, 25932, -1000, 1668, 1787,
	168, 1667, -1000, 1665, 1656, 25932, 1520, 312, 1363, -1000,
	-1000, 126, -1000, -1000, 919, -1000, 1655, 7597, -1000, -87,
	339, 2192, -1000, -1000, 891, 890, -1000, -1000, -1000, -1000,
	-1000, 366, -46, -47, -1000, 2170, -43, 2168, 2165, 1486,
	-1000, 3132, -1000, -1000, -1000, 627, -1000, 1653, -1000, 2164,
	250, 173, 2163, 28007, -1000, 1268, 1258, 1077, 1077, 1256,
	1361, 1359, 1357, 1077, 1077, 1254, 1356, 26813, 1249, 1247,
	1241, 1277, 1353, 615, 1245, 1244, 1243, 25932, 1652, 1333,
	-1000, -1000, 2494, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1219, 1649, -152, -1000, -1000, 1647,
	18005, 301, 301, 18005, 18005, 18005, 1639, 401, -1000, -13,
	-1000, -1000, -1000, 18005, 2029, 1504, -1000, 173, 2131, -1000,
	-1000, 18500, 1634, 1197, -33, 2162, -1000, 1335, 2159, 1335,
	1335, -1000, -1000, 4122, -280, -69, 275, 25932, 1335, -1000,
	-1000, 2158, 195, -1000, -1000, -1000, 15035, 15035, -1000, -1000,
	-1000, -1000, 1351, 1348, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 272, 25932, 886, -1000,
	1078, 1187, 7597, 1633, -201, 18005, 867, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 854, 843, 832, 18005, -1000, -1000,
	-1000, 215, -1000, 156, -1000, -1000, 2029, -1000, -1000, -1000,
	-1000, 2082, 14540, -55, -1000, 1337, -1000, 1335, -1000, -1000,
	1142, -1000, -1000, -1000, -1000, -1000, 804, -1000, -1000, 17510,
	199, 245, 242, -1000, 351, -1000, -1000, -1000, -1000, -1000,
	-1000, 290, 769, -1000, 1333, 1326, -1000, 1478, -1000, 1879,
	-1000, 52, 765, -1000, -1000, -1000, -1000, 758, -1000, -1000,
	1077, 1322, 150, -1000, -1000, -1000, -1000, 25932, -1000, 752,
	-1000, -1000, -1000, 842, -1000, -1000, -1000, -1000, 4122, -1000,
	25932, -1000, 25932, 189, 1182, 9082, 1630, 9082, 1613, 209,
	1612, -1000, -1000, -1000, -1000, -1000, 401, -1000, 1878, 1877,
	2244, -1000, -1000, -1000, -1000, 156, 156, 156, 156, 79,
	1178, -1000, 1344, 624, -1000, 1075, -1000, 17015, 25932, -1000,
	-1000, 751, 1606, 2136, -1000, 2112, 25932, 1800, 25932, 1605,
	1071, 9082, -1000, -1000, 2249, -1000, 2247, 462, 462, -1000,
	-1000, -1000, 25932, 5608, -1000, 612, -1000, -1000, 307, 203,
	-1000, 750, -1000, 747, 16520, 1175, 1328, -1000, -1000, -1000,
	1233, 236, -1000, -1000, -1000, 1177, 25932, 746, -1000, 1460,
	175, -1000, -1000, -1000, 731, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 307, 1961, -1000, 1173, -1000, -1000, 27845, 454,
	-1000, -1000, 27845, 179, -1000, 302, 1604, -1000, -1000, 716,
	-1000, 1331, 521, 7597, -1000, 179, 28007, -1000, 7597, 713,
	-1000, 28007, 694, -1000, -1000,
}

var yyPgo = [...]int{
	0, 135, 2644, 210, 170, 149, 205, 2643, 2642, 2092,
	2054, 2640, 2639, 2638, 2636, 2635, 2632, 2631, 2630, 2629,
	2628, 2626, 2622, 2604, 2600, 2598, 2596, 2595, 199, 2593,
	2592, 2591, 2590, 2585, 2582, 2581, 2580, 2579, 2578, 2577,
	2575, 2574, 2573, 2572, 2571, 2570, 2568, 2567, 2566, 137,
	2565, 2050, 2564, 2563, 2560, 2559, 2558, 183, 2552, 2550,
	2549, 2547, 2546, 2545, 2544, 2543, 2542, 2541, 2540, 2539,
	2538, 2537, 158, 2535, 2534, 2533, 2532, 2531, 2530, 197,
	202, 62, 2529, 55, 48, 156, 213, 107, 218, 211,
	153, 131, 79, 2528, 2067, 2527, 127, 188, 123, 24,
	2526, 143, 2523, 122, 50, 31, 206, 119, 58, 64,
	101, 2522, 180, 66, 90, 95, 2521, 2520, 106, 2519,
	65, 2518, 81, 33, 99, 26, 2517, 2516, 2515, 84,
	2514, 2512, 2511, 2510, 152, 2508, 102, 57, 2507, 2506,
	2505, 60, 2504, 29, 2503, 54, 2502, 2499, 2498, 2497,
	68, 2495, 2494, 12, 16, 18, 2493, 14, 1, 2492,
	186, 132, 91, 117, 2490, 382, 2489, 2488, 2487, 130,
	2486, 327, 2485, 2484, 2478, 2477, 9, 2476, 172, 2475,
	2473, 86, 112, 2472, 74, 162, 168, 2471, 2470, 114,
	63, 52, 113, 2469, 2467, 87, 179, 19, 41, 0,
	164, 40, 2466, 2465, 2464, 212, 165, 160, 195, 103,
	208, 140, 2463, 2462, 56, 2461, 126, 2460, 120, 89,
	2457, 147, 2455, 27, 144, 2454, 175, 2453, 129, 2,
	116, 2452, 2451, 28, 231, 2450, 2449, 2445, 139, 2444,
	2443, 67, 134, 2442, 2441, 2440, 23, 2439, 35, 30,
	2438, 100, 2437, 216, 2436, 187, 109, 155, 142, 121,
	184, 193, 77, 125, 1125, 118, 92, 17, 2435, 181,
	2433, 201, 190, 2432, 161, 2430, 204, 358, 178, 2429,
	163, 8, 53, 34, 2421, 7, 2416, 128, 2415, 2414,
	20, 2413, 22, 2411, 2410, 2407, 2406, 5, 2405, 2404,
	2402, 3, 6, 2400, 4, 177, 46, 110, 2396, 111,
	198, 2395, 2393, 2391, 2390, 2389, 329, 2388, 2385, 2383,
	2382, 2379, 2377, 2373, 2372, 72, 36, 2370, 2368, 2367,
	2366, 75, 105, 2365, 271, 176, 2352, 42, 2347, 2343,
	25, 2340, 32, 2338, 2337, 2336, 13, 167, 2335, 2331,
	15, 2330, 2329, 10, 11, 2328, 2326, 61, 2324, 51,
	39, 80, 88, 2323, 21, 73, 104, 2322, 2321, 203,
	200, 174, 2320, 145, 192, 209, 2319, 191, 2318, 2317,
	2316, 2314, 2311, 2309, 2308, 1162, 2307, 2306, 196, 59,
	85, 98, 2303, 2302, 2301, 78, 136, 97, 96, 173,
	2299, 154, 2282, 2281, 94, 2273, 2272, 2271, 2270, 2269,
	2268, 2266, 194, 133, 2265,
}

//line mysql_sql.y:8133
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 410, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 77, 408, 408, 408, 409, 409, 76, 76,
	66, 65, 356, 356, 355, 355, 354, 354, 353, 353,
	353, 352, 352, 352, 351, 351, 350, 350, 349, 349,
	347, 347, 348, 346, 345, 345, 345, 343, 343, 341,
	341, 342, 342, 336, 336, 339, 339, 337, 337, 337,
	337, 340, 335, 335, 335, 334, 334, 64, 64, 64,
	266, 266, 63, 63, 280, 280, 280, 280, 280, 278,
	278, 278, 278, 278, 278, 277, 277, 276, 276, 281,
	281, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 58, 58, 58, 58, 61, 61, 61, 62, 275,
	275, 275, 59, 60, 60, 265, 265, 270, 270, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 274, 274, 274, 272, 272, 271, 271, 273, 273,
	52, 52, 52, 55, 54, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 53, 53, 53, 53, 53, 53,
	50, 50, 50, 50, 50, 49, 49, 51, 51, 263,
	263, 262, 69, 69, 69, 69, 69, 69, 69, 68,
	68, 71, 71, 70, 57, 57, 57, 57, 57, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 380, 380,
	380, 382, 382, 203, 204, 411, 202, 202, 202, 376,
	376, 377, 378, 379, 379, 379, 67, 7, 7, 47,
	394, 394, 48, 401, 401, 316, 316, 216, 216, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 319, 320, 212, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 35, 34, 34, 252, 252,
	33, 412, 412, 186, 186, 41, 42, 43, 32, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 46, 46,
	330, 330, 414, 414, 414, 44, 45, 315, 315, 315,
	39, 38, 37, 36, 36, 31, 31, 30, 30, 209,
	209, 211, 211, 207, 413, 413, 292, 292, 210, 210,
	29, 29, 29, 208, 208, 185, 206, 206, 206, 8,
	8, 6, 11, 11, 11, 11, 11, 11, 11, 11,
	17, 19, 260, 260, 257, 18, 14, 13, 16, 12,
	15, 5, 5, 5, 5, 9, 9, 10, 91, 91,
	124, 124, 389, 389, 385, 385, 386, 386, 386, 387,
	387, 388, 388, 72, 324, 324, 324, 324, 324, 324,
	4, 113, 113, 114, 114, 323, 323, 323, 323, 323,
	323, 323, 407, 407, 365, 365, 365, 366, 112, 112,
	107, 107, 325, 325, 230, 367, 367, 333, 333, 332,
	332, 331, 331, 110, 110, 111, 111, 94, 94, 80,
	80, 338, 338, 338, 338, 344, 344, 313, 313, 150,
	150, 179, 179, 180, 180, 84, 84, 85, 85, 85,
	85, 85, 85, 373, 373, 375, 375, 374, 109, 109,
	105, 105, 106, 106, 106, 104, 104, 103, 102, 102,
	101, 99, 99, 99, 100, 100, 100, 87, 87, 86,
	86, 86, 86, 86, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 88, 88, 381, 381,
	381, 317, 317, 317, 322, 322, 162, 162, 163, 163,
	161, 161, 89, 89, 90, 90, 90, 90, 160, 160,
	159, 92, 92, 98, 97, 97, 93, 93, 93, 93,
	170, 170, 169, 169, 169, 169, 75, 78, 78, 79,
	117, 117, 168, 167, 167, 167, 116, 116, 115, 115,
	108, 108, 96, 96, 96, 96, 166, 95, 164, 406,
	406, 405, 405, 404, 402, 402, 402, 403, 403, 403,
	403, 358, 358, 358, 358, 358, 195, 195, 195, 201,
	201, 194, 194, 194, 194, 194, 205, 200, 200, 196,
	196, 197, 197, 197, 3, 3, 3, 3, 23, 23,
	23, 23, 27, 27, 383, 383, 20, 390, 393, 391,
	391, 395, 395, 395, 396, 396, 396, 397, 397, 21,
	392, 398, 398, 398, 261, 261, 258, 259, 259, 256,
	255, 255, 255, 400, 400, 399, 399, 399, 198, 198,
	22, 251, 251, 253, 254, 254, 245, 245, 245, 245,
	26, 249, 249, 250, 250, 250, 250, 250, 246, 246,
	248, 248, 244, 244, 244, 244, 244, 25, 243, 243,
	241, 241, 239, 239, 240, 240, 238, 238, 238, 242,
	242, 24, 24, 24, 82, 81, 81, 81, 182, 182,
	181, 181, 83, 318, 318, 282, 282, 283, 283, 283,
	286, 286, 298, 298, 299, 299, 297, 297, 304, 304,
	303, 303, 302, 302, 301, 301, 300, 300, 300, 300,
	295, 295, 294, 294, 284, 284, 284, 284, 284, 285,
	285, 285, 293, 293, 296, 296, 141, 141, 142, 142,
	142, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	363, 363, 364, 144, 144, 144, 148, 148, 148, 148,
	148, 148, 143, 143, 145, 145, 125, 125, 123, 123,
	118, 118, 119, 119, 120, 120, 121, 121, 122, 122,
	122, 122, 122, 122, 268, 268, 361, 361, 362, 362,
	357, 357, 357, 360, 360, 360, 360, 360, 359, 359,
	126, 177, 177, 177, 199, 199, 199, 176, 176, 176,
	140, 140, 139, 139, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 267,
	267, 213, 213, 214, 214, 157, 156, 156, 156, 156,
	156, 154, 155, 153, 153, 153, 153, 153, 152, 152,
	151, 151, 151, 247, 247, 149, 149, 147, 147, 147,
	146, 146, 146, 305, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 222, 222, 227,
	227, 372, 372, 371, 127, 127, 127, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 136, 136, 136, 290,
	290, 290, 290, 290, 291, 291, 291, 288, 288, 289,
	289, 231, 232, 232, 287, 287, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 329, 329, 329, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 384, 384, 384,
	368, 368, 368, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 174, 174, 174, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 233, 233,
	234, 234, 326, 326, 326, 326, 326, 326, 327, 327,
	328, 328, 328, 328, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 220, 171, 171, 171, 235, 228, 228,
	229, 229, 223, 223, 223, 223, 223, 223, 223, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 224,
	224, 226, 226, 237, 237, 237, 236, 236, 236, 236,
	236, 236, 236, 138, 138, 138, 138, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 129, 129,
	129, 129, 133, 133, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 134, 134,
	134, 134, 132, 132, 132, 132, 132, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 73, 74, 74, 131, 178, 178, 306,
	306, 309, 309, 307, 307, 308, 310, 310, 310, 311,
	311, 311, 312, 312, 312, 314, 314, 184, 184, 184,
	191, 191, 183, 183, 192, 192, 193, 193, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 4, 0, 1, 1, 0, 1, 6, 8,
	9, 10, 0, 2, 1, 3, 3, 3, 1, 3,
	5, 0, 2, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 0, 3, 3, 0, 3, 0,
	3, 0, 3, 0, 2, 1, 2, 3, 4, 3,
	3, 1, 0, 1, 1, 0, 1, 8, 5, 7,
	0, 3, 8, 5, 1, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 4, 1,
	3, 1, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 4, 6, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 2, 4, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 2, 1, 1, 1, 1, 6, 1, 1, 7,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 2, 5, 0, 2,
	7, 0, 1, 0, 1, 5, 3, 2, 4, 1,
	1, 1, 3, 2, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 6, 7, 4, 4, 7, 8, 0,
	2, 0, 2, 2, 1, 1, 1, 1, 0, 1,
	4, 4, 5, 1, 3, 1, 1, 3, 5, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 3, 1, 4, 6, 4, 4, 4,
	3, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 0, 4, 1, 3, 3, 1, 5, 6, 5,
	5, 3, 0, 5, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 4, 3, 4,
	5, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 11, 0, 1, 7, 1, 4, 1,
	1, 3, 4, 3, 0, 1, 1, 0, 2, 7,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 5, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 0, 1, 0, 6, 0, 3, 5,
	0, 4, 0, 3, 1, 3, 4, 5, 0, 3,
	1, 3, 2, 3, 1, 2, 0, 4, 6, 5,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 5,
	6, 5, 0, 3, 0, 1, 0, 1, 1, 3,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 4,
	1, 3, 3, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 1, 7, 7,
	7, 7, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 0, 1,
	3, 1, 3, 5, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 5, 6, 4, 1, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 1, 1, 1, 1, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 1, 2, 5, 0,
	1, 3, 0, 1, 0, 6, 6, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 1, 1, 1, 4, 4, 6, 8, 6, 4,
	5, 5, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 0, 1,
	1, 3, 3, 3, 3, 3, 2, 1, 1, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 1,
	3, 4, 4, 5, 3, 4, 5, 6, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -410, -2, -1, -3, -76, -4, -72, -5, -6,
	-8, -56, -68, -70, -71, -28, -7, -67, -49, -50,
	-52, -58, -63, -64, -65, -66, -73, -74, -75, -84,
	-77, -23, -22, -21, -20, 392, 12, 434, -9, -10,
	-373, -11, 230, -202, -203, -204, -411, -29, -30, -31,
	-36, -37, -38, -39, -44, -45, -46, -32, -33, -34,
	-35, -41, -42, -43, -48, -47, 207, -51, 61, -53,
	-54, -55, -59, -60, -61, -62, 323, 329, 382, 391,
	514, 515, 46, -85, -87, 516, -24, -25, -26, -27,
	203, 14, 467, -12, -15, -13, -16, -14, -18, -19,
	-17, 225, 224, 37, 288, 289, 327, 223, 204, 13,
	135, 136, 138, 139, 30, -86, 67, 205, -88, 10,
	517, 427, -94, 38, -123, -199, 70, -187, -190, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 437, 304, 305, 464, 242,
	266, 353, 269, 276, 135, 154, 148, 176, 168, 143,
	246, 281, 247, 77, 138, 420, 87, 403, 379, 141,
	261, 263, 265, 268, 248, 164, 159, 260, 244, 514,
	157, 249, 39, 250, 181, 251, 252, 469, 399, 303,
	405, 273, 377, 158, 400, 264, 402, 183, 187, 412,
	329, 152, 153, 407, 414, 180, 222, 42, 466, 234,
	415, 185, 179, 175, 423, 277, 275, 178, 151, 174,
	245, 50, 189, 188, 190, 373, 374, 375, 376, 253,
	254, 317, 411, 171, 160, 308, 144, 22, 418, 229,
	404, 330, 255, 270, 278, 184, 186, 236, 241, 468,
	381, 240, 274, 416, 156, 233, 262, 228, 419, 145,
	323, 332, 256, 139, 267, 413, 422, 49, 345, 150,
	142, 219, 136, 238, 243, 11, 257, 258, 259, 280,
	279, 271, 172, 235, 177, 162, 149, 173, 137, 237,
	421, 346, 512, 306, 362, 170, 167, 239, 212, 417,
	406, 140, 366, 347, 165, 282, 509, 510, 511, 318,
	302, 283, 284, 163, 226, 398, 285, 287, 372, 295,
	348, 380, 354, 349, 196, -94, -51, -10, -9, -86,
	-87, -123, 210, -206, 23, 377, -57, 378, 207, 67,
	-199, -5, -4, -72, -49, -84, -205, -199, 288, -205,
	210, -199, 240, 361, -316, 215, -277, -251, 241, -276,
	-253, -279, -254, 31, 203, 205, 204, 237, 14, 327,
	211, 12, 10, 328, 223, 24, 25, 27, 13, 329,
	331, 28, 332, 335, 336, 337, 41, 340, 341, 230,
	70, 73, 248, 248, -229, -223, 94, 231, -225, -218,
	-219, -221, -353, -347, -217, 67, 119, 120, 127, 95,
	-220, -305, 35, 97, 474, 435, -172, -173, -174, -175,
	-199, -348, -346, 73, 78, 81, 84, 85, 83, 82,
	161, 80, 74, 131, 132, -87, 70, -368, 482, -188,
	502, 483, 501, 46, -321, -328, 209, -326, 166, 226,
	162, 12, 125, 372, 130, 163, 479, 498, 437, 505,
	476, 477, 471, 472, 473, 475, 484, 486, 497, -329,
	493, 503, 504, 72, 71, 496, 495, 485, 480, 481,
	487, 470, 478, 488, 489, 494, 499, 500, 311, 87,
	312, 313, 427, 307, 314, 215, 377, 55, 315, 316,
	317, 318, 319, 434, 320, 56, 321, 310, 230, 362,
	322, 165, 182, 439, 438, 440, 431, 428, 426, 429,
	430, 432, 433, 490, 491, 492, -273, -271, -199, -78,
	-79, 507, -103, -104, -165, 19, 6, 7, 8, 9,
	-408, 379, 468, -318, 304, 362, 240, -245, -243, 285,
	281, 338, 220, 219, 88, 427, 209, -385, -386, 200,
	201, 202, -375, 460, -374, -199, 313, 26, 210, 324,
	409, 410, -40, -330, -315, 406, 405, -210, 404, 397,
	408, 399, 203, 461, -184, 348, 380, 236, 424, 425,
	325, 381, 412, 413, 400, 87, 169, 166, 304, 362,
	-385, 140, 137, -264, 140, 93, 145, 144, -264, 240,
	361, 40, -270, 372, -269, -271, 412, 413, 423, 71,
	72, 411, -184, 87, -104, -165, -103, -85, -87, -373,
	304, 362, 240, 211, 210, 212, 427, 288, -317, -381,
	31, -322, 197, 198, 199, 32, 33, -1, -200, -197,
	-190, 70, 71, 72, -110, 232, -123, 133, -110, -104,
	-103, -104, -123, -176, -199, 379, 103, -57, -57, 378,
	-376, -377, -378, -380, 207, 378, 377, 133, 15, -205,
	65, -123, -253, 240, -277, -251, 35, 64, 134, 213,
	134, 64, 67, 325, 304, 362, 326, 427, 210, 338,
	212, 240, 339, 304, 362, 210, 212, 427, 240, 304,
	210, 212, 362, 240, 339, 397, 398, 212, 26, 330,
	333, 334, 398, -334, 423, -334, 134, 93, 90, 91,
	92, -223, 110, -236, 103, 104, 105, 106, 107, 108,
	109, 116, 115, 126, 119, 120, 121, 122, 123, 124,
	125, 117, 118, 113, 94, 111, 112, 96, -87, -223,
	-229, -221, -221, -221, -221, -305, -227, -223, 67, 67,
	133, 73, -223, 67, 67, 67, 67, 67, 67, 67,
	67, 67, -327, 67, 67, -233, -234, 67, 67, 73,
	73, 67, 67, 67, -221, 73, -234, -234, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 134, -129, -133, -130, -132, -131, -135,
	-134, 166, 167, 130, 170, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 30, 182, 226, 162, 163,
	164, 165, 183, 148, 168, 465, 191, 149, 192, 150,
	193, 151, 194, 152, 153, 195, 154, 157, 158, 159,
	156, 133, -104, 134, 67, -80, 38, -106, 21, -88,
	-87, 20, 31, 32, 31, 32, 31, 32, 31, 32,
	78, -383, 210, 460, -241, 215, -241, -241, 211, -241,
	210, 210, -387, 147, 134, -375, -109, 67, -209, 111,
	23, 238, 238, 275, -209, -414, 211, 407, 42, 239,
	238, -105, -106, -105, 401, 398, -292, 402, 403, -210,
	-209, -209, -210, 210, 212, 427, -412, -413, 15, 113,
	238, -412, 30, 30, -316, -316, -388, 214, 416, 467,
	143, 144, 145, -253, 240, 240, 134, 103, 23, -272,
	103, 114, -271, -271, -271, -272, -272, -143, 40, -198,
	130, -199, 73, -143, 40, -105, -88, -87, 68, 68,
	-316, -316, -316, -316, -316, -316, -316, -205, -89, -90,
	121, -223, -199, -89, 38, 398, -323, -113, -84, 305,
	67, 67, -199, -324, 46, -84, 67, 30, -105, -80,
	-106, 133, 78, 73, -57, 68, 134, -379, 84, 85,
	-382, 180, 172, -199, -69, 73, -3, -4, -5, -6,
	-28, -49, -84, -349, -347, 67, 31, 371, 64, 15,
	-278, 210, 427, 324, 236, 212, 304, -276, -260, -257,
	-255, -198, -253, -256, -255, -281, -176, 398, -81, 383,
	287, -81, -223, -223, -223, -223, -223, 83, 94, 302,
	84, 85, -218, -237, 31, 283, 284, -219, -219, -219,
	-219, -219, -219, -219, -219, -219, -219, -219, -219, -226,
	-235, -305, 67, 113, 111, 112, 96, -221, -219, -219,
	68, 134, -372, -371, 98, -223, -223, -199, -369, -370,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 315, 310, 316, 314, 307, 322, 317, 318, 165,
	458, 459, 452, 453, 454, 455, 456, 457, -228, -229,
	-228, -223, -369, -228, -171, 32, 31, -171, -223, -384,
	300, 299, 301, -107, -199, -228, 68, 68, 68, 78,
	-229, -228, -219, -228, -370, -171, -229, -229, -171, -171,
	-171, -171, 121, -171, -171, -171, -171, -171, -171, -171,
	-271, 40, -312, 346, 345, -306, -308, 67, -307, 67,
	-307, -306, -306, 67, 67, -309, 67, -309, -309, -306,
	-310, 67, -310, -311, 67, -310, -199, -105, -79, -332,
	-331, -223, 40, 508, -80, -223, -102, -101, -223, -409,
	73, 212, -241, -390, -199, 94, -261, -258, -255, -251,
	-197, -199, -241, -241, -388, -374, 34, -108, -199, -161,
	16, -221, -255, -412, -209, -161, -413, -209, -209, -211,
	-413, -207, -413, 398, -161, -161, -292, -208, -199, -208,
	-241, -186, -185, -199, -186, -390, -261, -97, -92, -96,
	-93, -98, -164, -166, -95, 67, -123, -87, -199, 417,
	418, 141, 144, 143, 31, 371, -275, 371, 31, -251,
	-269, -265, 73, 372, -256, -274, 64, 130, -331, -272,
	-272, -272, -274, -274, 129, -80, -390, -260, -251, -199,
	-125, -123, -125, -200, -160, 134, -159, 15, -194, -199,
	34, 73, 133, -160, 73, -125, -407, 64, 46, 30,
	67, -112, 68, -107, -111, -199, -325, -230, -367, 507,
	-112, 68, -365, -366, -107, -80, -80, -192, -193, -183,
	-189, -196, -197, -190, 208, 31, 93, 34, 36, 311,
	343, 96, 130, 20, 97, 166, 129, 313, 435, 312,
	203, 59, 438, 440, 439, 428, 426, 364, 368, 370,
	367, 427, 397, 40, 14, 37, 224, 32, 33, 123,
	205, 100, 101, 227, 35, 225, 85, 44, 23, 62,
	15, 17, 18, 314, 363, 215, 214, 113, 383, 211,
	57, 12, 132, 38, 110, 365, 53, 89, 45, 55,
	111, 21, 429, 430, 41, 382, 391, 463, 231, 125,
	315, 316, 60, 94, 371, 83, 43, 64, 90, 19,
	58, 112, 206, 434, 56, 369, 319, 321, 331, 460,
	320, 209, 408, 10, 310, 436, 30, 223, 54, 210,
	99, 213, 84, 230, 6, 88, 13, 61, 65, 431,
	432, 433, 46, 98, 16, 322, 467, 384, 385, 386,
	387, 388, 389, 390, 191, 192, 193, 194, 195, 272,
	218, 216, 220, 221, 507, 508, 197, 198, 299, 301,
	169, 200, 201, 202, 232, 147, 7, 350, 351, 352,
	355, 356, 357, 358, 359, 360, 361, 515, 392, 393,
	394, 395, 396, 409, 410, 23, -57, -377, 133, 134,
	-108, -278, -259, -256, -280, 121, 70, -266, 134, 467,
	518, 71, 213, -400, -399, 363, 68, 134, -335, 214,
	434, 73, 519, 196, -335, 83, 302, 84, 85, -305,
	-229, -226, -221, -219, -219, -224, 227, 93, -223, -222,
	-371, 100, -223, 34, 134, 65, 133, 68, 68, 15,
	15, 68, -223, -223, 68, 15, 15, -223, 68, 133,
	68, 68, 68, 65, 68, 134, 68, 134, -223, 68,
	68, -223, -223, -223, -229, 68, -223, -223, -223, -223,
	-223, -223, -223, -223, -314, 347, 78, 78, -178, 73,
	-178, 78, 78, 78, 134, 68, 73, 134, 22, 134,
	-99, 36, 37, -123, 215, -123, -393, 350, 35, -401,
	134, 40, -399, -244, 65, -239, -240, -238, -242, 40,
	-123, -123, 15, -91, -124, -199, 67, 68, 134, -223,
	-252, 65, -186, -161, -123, -199, -161, -161, -209, -200,
	-211, -206, -211, -207, 133, -185, -394, 350, -401, 30,
	-167, -168, -169, -170, 53, 57, 59, 54, 55, 56,
	60, 30, 134, -195, -201, 34, -196, 73, -197, -190,
	-195, -87, -92, -97, -195, 67, 142, 145, 145, 144,
	213, 67, 103, -274, -274, -274, 40, -198, 64, 134,
	-161, -90, -92, -199, 73, -199, 121, -161, -150, 510,
	38, 39, -325, -365, -114, -390, 68, 134, -113, 305,
	68, 134, 134, 67, 68, 46, 134, 103, 133, 379,
	-199, -347, 68, -280, 134, 213, 133, 133, -257, 329,
	-198, -259, 20, 467, -176, 38, -182, -181, 73, 519,
	38, 68, -224, 93, -221, -218, 68, 101, -223, 99,
	-127, -129, 345, 346, -128, -134, 130, 166, 226, 165,
	164, 162, 345, 346, -143, -199, -223, -223, 68, 68,
	-223, -223, 15, -199, -143, -219, -223, 68, -287, 393,
	-287, 68, 68, 68, 68, -287, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 134, 68, 68, 68,
	134, 68, 134, -331, -338, 402, -223, -223, -101, -100,
	43, -109, 94, 67, -396, 404, 352, -191, 103, -216,
	-215, 306, 41, -319, 372, 358, 359, -258, 240, 64,
	294, 295, 296, 297, -238, -184, 129, 251, 67, 67,
	-123, -91, -199, 15, 134, -389, 133, -1, -199, -251,
	-209, -161, -413, -161, -209, -209, -211, -199, -396, -191,
	-216, -263, -262, -176, -96, -96, -96, -96, 53, 53,
	53, 58, 53, 58, 53, -169, -263, -98, -109, -201,
	68, -406, -405, -404, -402, 61, 214, 62, -228, 145,
	-259, -212, 73, -265, -123, -123, -163, 17, 133, -163,
	78, 73, 89, 68, 134, -113, -107, 46, 67, -199,
	-230, -333, -332, 46, -84, -325, -366, -331, -192, -189,
	-197, -190, 78, 15, -256, -251, 121, 121, 70, 330,
	-266, 73, 351, 73, 210, 520, 134, 103, -182, 210,
	-218, -223, 68, -136, 153, 152, -136, 68, -306, -307,
	-306, -309, -306, -136, -136, 68, 68, 23, 68, 68,
	68, -223, 68, 68, 134, -287, 67, -287, -287, -287,
	-287, -287, -287, -287, -287, -287, -287, -287, 73, 78,
	78, -344, 389, 384, 386, 44, 45, 34, 35, -118,
	-119, -120, -126, -121, -176, -214, -122, 218, 216, 220,
	-362, 88, 221, 272, 89, 211, -397, 77, -391, 73,
	-199, -398, 77, 353, 132, 308, 40, 354, 355, 369,
	303, 78, 78, 360, -392, 70, -123, -191, -191, -191,
	-118, -118, -110, 65, 133, -92, -124, -199, 121, 68,
	-161, -199, -161, -161, -209, -397, -391, -398, -161, 134,
	103, -116, -115, 64, 65, -117, 64, -115, 53, 53,
	-161, -404, -403, 23, -362, -362, -362, 68, 68, -162,
	18, 20, 121, -162, -150, 13, -84, -390, 46, -84,
	-325, -114, 68, -325, -251, -266, 372, -123, -181, 73,
	520, -123, -223, 68, -223, -232, -231, 232, 68, 68,
	-313, 509, -342, 384, 20, 20, -84, -123, 68, 134,
	-129, -122, -199, 89, -361, -362, -241, -361, 89, 67,
	73, -395, 363, 73, 73, 78, 40, 78, 132, 356,
	-320, 67, -143, -145, -198, 130, 73, 68, 68, -195,
	-92, -199, -161, -389, 133, -161, -161, -395, -104, -262,
	-331, -223, 67, -223, 67, 53, 19, 17, -223, -229,
	-365, -325, 68, -113, -83, -336, -292, 68, 68, -104,
	20, -150, 73, 20, 73, -340, 73, -109, -141, -142,
	-158, 343, 242, -242, 246, 77, 247, 379, 248, 211,
	250, 251, 252, 222, 253, 254, 255, 372, 256, 257,
	258, 259, 326, 6, 290, -120, -140, -139, -137, 83,
	94, 40, 343, -138, 77, 129, 265, 243, 266, -157,
	-213, 64, 349, 216, 88, 89, 331, -214, -357, -359,
	-199, -359, -199, -357, -357, -241, -223, 20, 467, 307,
	40, 78, 40, 357, -246, -248, -176, 67, -82, -81,
	-141, -161, -161, -105, -108, -358, -199, 216, 20, 20,
	-83, -343, 389, -339, -337, 384, 385, 386, 387, -289,
	-288, -291, 390, 274, 396, -229, -179, 511, 73, 386,
	34, -282, 232, 134, -158, -191, -191, -184, 129, -191,
	-191, -191, -191, 249, 249, -191, -191, -191, -191, -191,
	-191, -191, -191, -191, -191, -191, -191, -191, -191, 67,
	-137, 83, -219, 73, -145, -146, 40, 264, 260, -147,
	40, 244, 245, -149, 67, 272, 13, 89, 89, -123,
	67, 65, 282, 67, 67, 67, -359, 68, 73, 351,
	73, 307, 68, 134, -306, -223, -83, -282, -104, 68,
	68, 134, -345, 214, -341, 388, -337, 20, 386, 20,
	20, 68, -290, 96, 356, 360, -223, 67, 20, -84,
	-283, 281, 20, -158, 78, 78, -191, -191, 78, 73,
	73, 73, -191, -191, 78, 73, -201, 78, 78, 78,
	78, 40, 73, -148, 40, 260, 264, 261, 262, 263,
	78, 40, 78, 40, 78, 40, -199, 67, -363, -364,
	73, 78, 67, -326, -247, 67, -246, -360, 294, 295,
	296, 298, 297, -360, -246, -246, -246, 67, -268, -267,
	273, 94, 372, -249, -248, -99, 68, -283, -105, -199,
	216, -352, 67, 78, -342, 20, -340, 20, -340, -340,
	-290, 507, 394, 395, 394, 395, -180, -199, -340, 20,
	-284, 274, 275, -285, -296, 277, -143, -143, 73, 73,
	-144, 243, -125, 68, 134, 103, 68, -223, -233, -152,
	-151, 463, -246, 68, 68, 68, 68, -246, 273, -250,
	222, 77, 467, 292, 293, -99, -356, 30, 68, -351,
	-350, -177, -346, -199, 389, 390, 73, -340, 93, 68,
	134, -176, 67, -294, 278, 67, -292, 67, -292, 89,
	295, 244, 245, 68, -364, 73, 68, -156, -154, -155,
	64, 400, 270, 271, 68, -249, -249, -249, -249, 68,
	-191, 73, 291, -355, -354, -353, 68, 134, 133, -290,
	-199, -281, -286, 279, 78, -219, 67, -219, 67, -293,
	276, 67, -267, -155, 64, -154, 64, 14, 13, -157,
	78, -197, 134, 103, -350, -199, 68, -298, 67, 20,
	68, -281, 68, -281, 67, 103, -219, -153, 267, 268,
	30, 144, -153, -354, 40, -223, 133, -299, -297, 232,
	-285, 68, 68, 68, -281, 78, 68, 83, 40, 269,
	-199, 68, 134, 70, -295, 280, 68, -297, -300, 46,
	78, -304, -301, 67, -158, 234, 113, -304, -158, -303,
	-302, 279, 235, 67, 68, 134, 70, 231, 67, -229,
	-302, -301, -229, 68, 68,
}

var yyDef = [...]int{
	31, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 644, 645, 646, 647, 0, 0, 0, 411, 412,
	0, 391, 0, 0, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 315, 316, 317, 318, 319, 320,
	321, 322, 323, 324, 277, 278, 0, 225, 221, 200,
	201, 202, 161, 162, 163, 164, 285, 0, 0, 0,
	0, 0, 0, 495, -2, 33, 648, 649, 650, 651,
	-2, 424, 0, 392, 393, 394, 395, 396, 397, 398,
	399, 266, 267, 268, 263, 264, 265, -2, 0, 424,
	214, 0, 205, 205, 0, 515, 0, 0, 529, 551,
	31, 0, 473, 0, 478, 838, 874, 875, 876, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 473, 226, 413, 414, 515,
	515, 389, 0, 249, 0, 1495, 253, 0, 0, 0,
	386, 244, 245, 246, 247, 248, 0, 636, 0, 241,
	0, 220, 1554, 0, 0, 0, 0, 0, 0, 105,
	691, 107, 693, 111, 118, 0, 0, 123, 124, 127,
	128, 129, 130, 131, 0, 135, 0, 137, 140, 0,
	142, 143, 0, 146, 147, 148, 0, 158, 159, 160,
	694, 695, 85, 85, 1243, 1140, 0, 1147, 1148, 1159,
	1168, 946, 947, 948, 949, 0, 0, 0, 0, 0,
	956, 957, 0, 969, 1642, 0, 963, 964, 965, 966,
	48, 60, 61, 1187, 1188, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 0, 1113, 933, 874, 0, 1650, 0,
	1670, 1651, 1669, 0, 0, 1098, 0, 1088, 0, -2,
	-2, 0, 0, 1621, 0, -2, 1647, 1666, 1674, 1673,
	1644, 1645, 1639, 1640, 1641, 1643, 1652, 1654, 1665, 0,
	1661, 1671, 1672, 62, 63, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1104, -2,
	1106, 1107, 1109, 1110, 1111, 1112, -2, 1115, 1116, 1117,
	-2, -2, 1120, 1121, 1122, 1123, 1124, 1125, 1128, -2,
	1130, -2, 1132, 1100, 1101, 1102, 1103, 1092, 1093, 1094,
	1095, 1096, 1097, -2, -2, -2, 0, 198, 196, 515,
	587, 0, -2, 0, 0, 0, 534, 537, 540, 543,
	0, 34, 35, 654, 720, 720, 720, 0, 720, 0,
	0, 744, 697, 698, 699, 718, 719, 429, 425, 426,
	427, 428, 503, 0, 505, 508, 369, 326, 0, 0,
	0, 337, 369, 0, 0, 510, 510, 0, 378, 369,
	369, -2, 0, 339, 340, 341, 331, 0, 331, 345,
	346, 347, 358, 359, 379, 1267, 0, 0, 285, 285,
	431, 215, 216, 204, 206, 0, 210, 0, 203, 1554,
	0, 0, 172, 1621, 177, 0, 1502, 1568, 1517, 0,
	0, 1535, 0, -2, 510, 0, 516, 0, 515, 0,
	285, 285, 285, 285, 285, 285, 285, 0, 0, 0,
	552, 553, 548, 549, 550, 554, 555, 3, 0, 637,
	638, 641, 642, 643, 441, 0, 477, 0, 0, 510,
	-2, 0, 390, 250, 877, 0, 0, 254, 255, 0,
	0, 269, 0, 272, 258, 259, 260, 0, 0, 243,
	0, 0, 222, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 115, 112, 119, 122, 132, 139, 0,
	151, 153, 156, 113, 120, 125, 126, 133, 154, 114,
	116, 117, 121, 155, 157, 134, 138, 152, 136, 141,
	144, 145, 150, 0, 86, 0, 0, 0, 0, 0,
	0, 1146, 0, 0, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 1140,
	0, 952, 953, 954, 955, 958, 0, 970, 0, 0,
	0, 1197, 0, 1138, 1138, 0, 1138, 1134, 1134, 0,
	0, 1138, 1076, 0, 0, 1078, 1089, 0, 0, 1081,
	1082, 1138, 0, 1138, 1086, 1087, 1072, 1073, 0, 1134,
	0, 0, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134,
	1134, 1134, 1134, 0, 1244, 1262, 1199, 1200, 1201, 1249,
	1203, 1253, 1253, 1249, 1249, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 0, 0, 1242, 1222, 1251, 1251,
	1251, 1249, 1246, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1256, 1256, 1259,
	1256, 0, 510, 0, 0, 498, 0, 479, 0, 531,
	533, 0, 535, 536, 538, 539, 541, 542, 544, 545,
	36, 0, 720, 655, 0, 0, 0, 0, 0, 0,
	720, 720, 431, 430, 0, 504, 0, 0, 560, 0,
	0, 331, 369, 336, 560, 0, 352, 353, 354, 369,
	369, 360, 511, 361, 362, 371, 0, 376, 377, 0,
	560, 560, 0, 0, 0, 720, 333, 332, 374, 375,
	343, 333, 1268, 1269, 0, 0, 0, 432, 0, 0,
	208, 0, 213, 165, 0, 0, 0, 0, 0, 0,
	194, 195, 0, 0, 0, 0, 0, 185, 188, 832,
	833, 688, 689, 189, 190, 479, 530, 532, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 410, 568, 562,
	564, 631, 48, 568, 0, 0, 452, 0, 446, 0,
	0, 0, 839, 433, 465, 435, 0, 454, 479, 501,
	479, 0, 251, 0, 256, 0, 0, 271, 273, 274,
	275, 261, 262, 387, 239, 240, 232, 233, 234, 235,
	236, 237, 238, 242, 58, 0, 223, 224, 0, 0,
	0, 99, 100, 101, 102, 103, 104, 106, 90, 402,
	404, 680, 692, 0, 683, 0, 109, 149, 82, 0,
	0, 82, 1141, 1142, 1143, 1144, 1145, 1149, 0, 1151,
	1153, 1155, 1157, 0, 1173, -2, -2, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 1160,
	1171, 1172, 0, 0, 0, 0, 0, 1169, 1164, 0,
	950, 0, 967, 971, 0, 0, 0, 49, 1133, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 0, 1139,
	0, 1140, 0, 0, 0, 1135, 1136, 0, 0, 0,
	1037, 1038, 1039, 0, 460, 0, 1099, 1077, 1090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 1265, 1263, 1264, 1202, 1250, 0, 1227, 0,
	1228, 1229, 1230, 0, 0, 1223, 0, 1224, 1225, 1226,
	1218, 0, 1219, 1220, 0, 1221, 197, 586, 588, 0,
	469, 471, 472, 0, 499, 512, 517, 518, 521, 32,
	37, 0, 0, 0, 657, 0, 283, 674, 0, 690,
	712, -2, 0, 0, 0, 506, 0, 0, 600, 325,
	0, 370, 328, 333, 560, 338, 0, 560, 560, 369,
	0, 371, 0, 371, 365, 366, 0, 380, 383, 381,
	0, 342, 334, 385, 344, 280, 283, 573, 0, 574,
	575, 571, 602, 626, 626, 0, 626, 606, 838, 217,
	218, 0, 0, 212, 166, 167, 0, 169, 170, 171,
	178, 173, 175, 0, 0, 179, 191, 192, 193, 0,
	0, 0, 183, 184, 0, 497, 400, 401, 405, 0,
	407, 836, 408, 409, 560, 0, 569, 0, 565, 632,
	0, 634, 0, 560, 489, 0, 440, 0, 465, 454,
	0, 0, 441, 458, 0, 475, 434, 462, 0, 466,
	0, 0, 439, 455, 0, 500, 502, 878, 0, 1274,
	-2, 1276, -2, -2, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 0, 257, 270, 0, 0,
	0, 0, 93, 677, 0, 94, 98, 88, 0, 0,
	0, 682, 0, 679, 684, 0, 108, 0, 0, 83,
	84, 735, 740, 0, 0, 1150, 1152, 1154, 1156, 1158,
	0, 1161, 1169, 1165, 0, 1162, 0, 0, 1141, 0,
	972, 0, 0, 0, 0, 0, 0, 1024, 1025, 0,
	0, 1029, 0, 0, 1032, 0, 0, 0, 1036, 0,
	1075, 1091, 1079, 0, 1083, 0, 1085, 0, 0, 1004,
	1004, 0, 0, 0, 0, 1004, 0, 0, 0, 0,
	0, 0, 0, 1245, 1198, 1266, 0, 0, 0, 1247,
	0, 0, 0, 0, 0, 589, 481, 0, 0, 0,
	524, 522, 523, 508, 0, 0, 664, 1270, 721, 287,
	0, 0, 676, 0, 0, 717, -2, 724, 0, 730,
	0, 0, 0, 0, 418, 422, 31, 509, 0, 561,
	327, 0, 369, 335, 560, 838, 355, 356, 560, 372,
	369, 373, 369, 371, 0, 382, 664, 1270, 287, 0,
	0, 0, 0, 0, 593, 0, 0, 592, 0, 0,
	0, 0, 0, 508, 627, 0, 629, 630, 639, 640,
	604, -2, 0, 573, 609, 1138, 219, 207, 209, 0,
	0, 0, 0, 180, 181, 182, 186, 187, 0, 0,
	558, 563, 570, 633, 635, 49, 566, 558, 38, 0,
	0, 0, 445, 451, 0, 443, 441, 0, 0, 0,
	474, 0, 465, 467, 0, 465, 0, 0, 0, 0,
	388, 59, 276, 0, 0, 0, 0, 0, 403, 0,
	681, 90, 0, 0, 110, 0, 0, 738, 0, 740,
	0, 1137, 1163, 0, 1170, 1166, 951, 959, 968, 0,
	0, 974, 986, 986, 0, 977, 1249, 1253, 980, 1249,
	1251, 1249, 986, 986, 0, 50, 0, 0, 1030, 1031,
	0, 0, 0, 461, 0, 0, 0, 1004, 1007, 0,
	1008, 1004, 1004, 1004, 1004, 1013, 1004, 1004, 1004, 1004,
	1004, 1004, 1004, 1255, 1254, 1240, 0, 1241, 1252, 1257,
	0, 1260, 0, 470, 485, 0, 513, 514, 519, 520,
	0, 0, 0, 840, 667, 665, 666, 0, 1271, 671,
	288, 289, 290, 291, 0, 0, 0, 675, 0, 0,
	713, 714, 715, 716, 725, 1270, 1270, 1270, 840, 840,
	473, 0, -2, 0, 0, 420, 0, 0, 601, 329,
	560, 348, 0, 363, 560, 560, 369, 384, 667, 0,
	671, 560, 229, 0, 596, 590, 0, 579, 594, 595,
	582, 0, 584, 0, 580, 581, 560, 572, 603, 628,
	605, 608, 610, 611, 617, 0, 0, 0, 0, 211,
	168, 0, 307, 174, 406, 837, 556, 0, 0, 556,
	490, 489, 0, 442, 0, 0, 459, 465, 0, 476,
	463, 0, 468, 465, 438, 437, 456, 457, 879, 1275,
	1272, 1273, 252, 0, 678, 90, 95, 96, 97, 91,
	89, 685, 0, 687, 0, 736, 740, 0, 0, 0,
	1167, 973, 960, 975, 987, 988, 976, 961, 978, 979,
	981, 982, 983, 984, 985, 962, 1026, 0, 1028, 1033,
	1034, 0, 1080, 1084, 0, 1006, 1002, 1009, 1010, 1011,
	1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1248, 0,
	0, 487, 71, 0, 0, 525, 526, 0, 0, 0,
	841, 842, 844, 845, 0, 0, 847, 903, 0, 856,
	720, 856, 0, 0, 858, 859, 656, 0, 0, 659,
	660, 669, 0, 0, 0, 293, 294, 0, 0, 0,
	306, 302, 303, 304, 284, 670, 0, 0, 0, 0,
	0, 0, 626, 0, 0, 560, 419, 422, 423, 507,
	330, 560, 367, 364, 560, 279, 0, 282, 515, 0,
	0, 576, 597, 0, 0, 577, 0, 578, 583, 585,
	228, 612, 0, 0, 614, 615, 616, 607, 176, 546,
	0, 0, 567, 547, 39, 454, 447, 444, 465, 450,
	449, 0, 464, 436, 92, 87, 686, 441, 739, 741,
	737, 73, 0, 1035, 0, 515, 1003, 0, 1258, 1261,
	489, 0, 486, 0, 0, 0, 652, 508, -2, 0,
	-2, 846, 904, 868, 868, 857, 868, 868, 720, 0,
	668, 658, 0, 672, 673, 0, 295, 296, 0, 299,
	305, 0, 726, 727, 834, 835, 728, 0, -2, 560,
	560, -2, 416, 421, 0, 349, 368, 281, 510, 230,
	231, 598, 0, 591, 621, 618, 0, 0, 557, 559,
	453, 448, 442, 73, 40, 67, 0, 1027, 1074, 999,
	0, 491, 488, 0, 482, 484, 81, 0, 745, -2,
	788, 1270, 1270, 0, 1270, 1270, 1270, 1270, 0, 0,
	1270, 1270, 1270, 1270, 1270, 1270, 1270, 1270, 1270, 1270,
	1270, 1270, 1270, 1270, 0, 843, 870, -2, 882, 884,
	0, 0, 887, 888, 0, 0, 0, 0, 925, 894,
	0, 0, 898, 0, 1185, 1186, 0, 902, 0, 860,
	869, 0, 869, 0, 0, 868, 0, 0, 0, 292,
	297, 0, 300, 301, 0, 708, 1249, 0, 732, 73,
	745, 515, 417, 227, 0, 0, 622, 624, 619, 620,
	41, 64, 69, 74, 75, 0, 0, 0, 0, 0,
	1000, 0, 994, 995, 996, 1001, 480, 0, 72, 0,
	0, 747, 0, 729, 790, 0, 0, 1270, 1270, 0,
	0, 0, 0, 1270, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	883, 885, 886, 889, 890, 891, 930, 931, 932, 892,
	927, 928, 929, 893, 0, 0, 0, 1183, 1184, 923,
	0, 0, 0, 0, 0, 0, 0, 854, 661, 0,
	663, 298, 701, 0, 521, 0, 734, 747, 510, 599,
	613, 0, 51, 0, 71, 0, 76, 0, 0, 0,
	0, 1005, 997, 0, 0, 0, 0, 0, 0, 653,
	731, 0, 784, 789, 791, 792, 0, 0, 795, 796,
	797, 798, 0, 0, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 826, 827, 828, 829, 830, 831,
	811, 812, 813, 814, 815, 816, 823, 0, 0, 820,
	0, 0, 0, 1088, 918, 0, 0, 861, 863, 864,
	865, 866, 867, 862, 0, 0, 0, 0, 853, 855,
	899, 0, 662, 700, 709, 710, 521, 733, 415, 623,
	625, 42, 0, 0, 68, 0, 77, 0, 79, 80,
	0, 989, 990, 992, 991, 993, 0, 493, 483, 0,
	772, 0, 0, 778, 0, 785, 793, 794, 799, 800,
	817, 0, 0, 819, 0, 0, 926, 0, 897, 906,
	919, 0, 0, 701, 701, 701, 701, 0, 900, 702,
	1270, 0, 0, 706, 707, 711, 742, 0, 52, 0,
	54, 56, 57, 871, 65, 66, 70, 78, 0, 492,
	0, 748, 0, 750, 0, 0, 0, 0, 0, 782,
	0, 824, 825, 818, 821, 822, 895, 905, 907, 908,
	0, 920, 921, 922, 924, 848, 849, 850, 851, 0,
	0, 704, 0, 43, 44, 0, 53, 0, 0, 998,
	494, 0, 752, 0, 773, 0, 0, 0, 0, 0,
	0, 0, 896, 909, 0, 910, 0, 0, 0, 852,
	703, 705, 0, 0, 55, 872, 749, 746, 0, 784,
	774, 0, 776, 0, 0, 0, 0, 911, 913, 914,
	0, 0, 912, 45, 46, 47, 0, 0, 754, 0,
	770, 775, 777, 779, 0, 783, 781, 915, 917, 916,
	873, 753, 0, 766, 751, 0, 780, 755, -2, 0,
	771, 756, -2, 0, 764, 0, 0, 757, 765, 0,
	760, 0, 0, 0, 759, 0, -2, 767, 0, 0,
	761, -2, 0, 769, 768,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 517,
	104, 103, 105, 3, 518, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 519, 115, 520, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:603
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:609
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:642
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:647
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:653
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:673
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:679
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:686
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:694
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:700
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:709
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:717
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:730
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:742
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:758
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:764
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:768
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:774
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:781
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:790
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:794
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:798
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:803
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:811
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:817
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:826
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:837
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:841
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:847
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:851
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:857
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:861
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:867
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:891
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:910
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:914
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:918
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:927
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:935
		{
			yyVAL.str = ""
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:939
		{
			yyVAL.str = yyDollar[3].str
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:944
		{
			yyVAL.str = "\n"
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:948
		{
			yyVAL.str = yyDollar[3].str
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:953
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:957
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:981
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:985
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:991
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:997
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1015
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1032
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1055
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1059
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1063
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1068
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1072
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1078
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1091
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1102
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1115
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1119
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1129
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1142
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1155
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1161
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1167
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1174
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1182
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1191
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1195
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1199
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1203
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1207
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1211
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1218
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1222
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1228
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1235
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1244
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1248
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1254
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1258
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1262
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1274
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1302
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1306
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1310
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1314
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1318
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1322
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1326
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1330
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1334
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1338
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1342
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1346
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1350
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1354
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1462
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1469
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1476
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1485
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1515
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1519
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1529
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1535
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1546
		{
			yyVAL.str = yyDollar[3].str
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1552
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1556
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1562
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1570
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1579
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1587
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1595
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1618
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1641
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1648
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1655
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1663
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1670
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1677
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1686
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1690
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1694
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1700
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1704
		{
			yyVAL.str = yyDollar[1].str
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1711
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1717
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1721
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1732
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1738
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1781
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1785
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1789
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1793
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1798
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1803
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1816
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1822
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1829
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1836
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1846
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1853
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1864
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1875
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1879
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1885
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1903
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1907
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1913
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1917
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1923
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1933
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1939
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1943
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1947
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1951
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1955
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1959
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1967
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1975
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1985
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2023
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2027
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2033
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2039
		{
			yyVAL.str = yyDollar[1].str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2044
		{
			yyVAL.str = "true"
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2045
		{
			yyVAL.str = "false"
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2046
		{
			yyVAL.str = yyDollar[1].str
		}
	case 276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2062
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2073
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2079
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2090
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2105
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2110
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2114
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2123
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2139
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2143
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2147
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2151
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2155
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2163
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2171
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2183
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2187
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2191
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2195
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2199
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2205
		{
			yyVAL.item = nil
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2210
		{
			yyVAL.item = nil
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2243
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2247
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2252
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2256
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2262
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2267
		{
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2271
		{
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2276
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2297
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2306
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2326
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2334
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2351
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2361
		{
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2363
		{
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2372
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2382
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2395
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2399
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2405
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2411
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2417
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2423
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2433
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2445
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2449
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2467
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2484
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2489
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2493
		{
			yyVAL.str = yyDollar[2].str
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2499
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2522
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2527
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2537
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2541
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2550
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2554
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2558
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2564
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2568
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2587
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2605
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2609
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2615
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2624
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2633
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2643
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2649
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2655
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2661
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2669
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2674
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2681
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2697
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2710
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2721
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2725
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2731
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2736
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2743
		{
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2745
		{
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2748
		{
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2757
		{
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2761
		{
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2766
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2775
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2782
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2788
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2796
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2803
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2810
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2830
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2843
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2849
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2853
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2859
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2867
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2873
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2880
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2889
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2897
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2905
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2929
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2948
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2952
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2956
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2971
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2975
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2981
		{
			yyVAL.str = yyDollar[1].str
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2985
		{
			yyVAL.str = yyDollar[3].str
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2991
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2995
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3001
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3006
		{
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3017
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3021
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3028
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3037
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3043
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3047
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3053
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3057
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3066
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3086
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3093
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3111
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3130
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3143
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3147
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3160
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3164
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3169
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3173
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3180
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3185
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3192
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3198
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3202
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3206
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3210
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3214
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3218
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3224
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3240
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3244
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3262
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3271
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3277
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3285
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3294
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3300
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3306
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3310
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3316
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3321
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3325
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3329
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3334
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3338
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3342
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3352
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3358
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3362
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3372
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3382
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3392
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3404
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3412
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3420
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3429
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3445
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3477
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3493
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3503
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3514
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3532
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3549
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3553
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3558
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3562
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3571
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3577
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3581
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3587
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3591
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3595
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3599
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3604
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3612
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3618
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3626
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3634
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3644
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3650
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3659
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3668
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3687
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3691
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3701
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3705
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3709
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3713
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3719
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3729
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3733
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3739
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3745
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3749
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3755
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3761
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3765
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3769
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3779
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3785
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3789
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3795
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3799
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3805
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3809
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3819
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3832
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3838
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3844
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3857
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3875
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3879
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3885
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3895
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3899
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3903
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3908
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3912
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3916
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3920
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3929
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3933
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3937
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3941
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3946
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3950
		{
			yyVAL.str = yyDollar[1].str
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3954
		{
			yyVAL.str = yyDollar[2].str
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3963
		{
			yyVAL.str = ""
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3967
		{
			yyVAL.str = yyDollar[1].str
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3971
		{
			yyVAL.str = yyDollar[2].str
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3975
		{
			yyVAL.str = yyDollar[1].str
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3979
		{
			yyVAL.str = yyDollar[2].str
		}
	case 652:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4013
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4023
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4034
		{
		}
	case 656:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4039
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4051
		{
			yyVAL.str = yyDollar[1].str
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4057
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4067
		{
			yyVAL.str = yyDollar[1].str
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4071
		{
			yyVAL.str = yyDollar[1].str
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4077
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4084
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4090
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4098
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4104
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4111
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4119
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4125
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4146
		{
			yyVAL.str = yyDollar[1].str
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4151
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4157
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4165
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4271
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4275
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4281
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4291
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4295
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4311
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4315
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4328
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4334
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4341
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4347
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4360
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4369
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4373
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4379
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4396
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4400
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4404
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4408
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4414
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4437
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4459
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4463
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4467
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4471
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4475
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4481
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4485
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4491
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4496
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4501
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4505
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4509
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4513
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4517
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4523
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4537
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4541
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4550
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4556
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4560
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4566
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4570
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4579
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4583
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4589
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4610
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4623
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4630
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4638
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4644
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4653
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4657
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4662
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4666
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4673
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4684
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4697
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4711
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4718
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4729
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4742
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4748
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4752
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4767
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4781
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4787
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4791
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4797
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4804
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4813
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4817
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4822
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4826
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4831
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4835
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4840
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4844
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4854
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4858
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4869
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4877
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4885
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4893
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4904
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4913
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4923
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4933
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4937
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4942
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4946
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4955
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4961
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4965
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4969
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4975
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4979
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4983
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4987
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4991
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4995
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4999
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5003
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5007
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5011
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5035
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5039
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5043
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5047
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5051
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5055
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5059
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5063
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5067
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5071
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5075
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5079
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5083
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5087
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5094
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5098
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5104
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5109
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5113
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5117
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5123
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5127
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5131
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5135
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5139
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5157
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5161
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5170
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5175
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5181
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5188
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5192
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5198
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5202
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5208
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5218
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5224
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5233
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5242
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5265
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5274
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5284
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5292
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5298
		{
			yyVAL.str = ""
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5302
		{
			yyVAL.str = yyDollar[1].str
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5312
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5318
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5324
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5338
		{
			yyVAL.str = ""
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5345
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5351
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5355
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5359
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5370
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5374
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5387
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5393
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5397
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5403
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5407
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5411
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5415
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5419
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5423
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5431
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5435
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5439
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5443
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5447
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5451
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5455
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5468
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5478
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5483
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5487
		{
			yyVAL.str = yyDollar[1].str
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5493
		{
			yyVAL.str = ""
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5497
		{
			yyVAL.str = yyDollar[2].str
		}
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5503
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5515
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5522
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5529
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5536
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5543
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5552
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5558
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5564
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5568
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5572
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5576
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5580
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5585
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5592
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5600
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5609
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5614
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5618
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5634
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5640
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5644
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5648
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5652
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5656
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5660
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5664
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5668
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5672
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5676
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5680
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5684
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5688
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5694
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5698
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5702
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5706
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5710
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5714
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5718
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5722
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5726
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5730
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5734
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5738
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5743
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5751
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5755
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5759
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5768
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5772
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5776
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5780
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5789
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5798
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5804
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5808
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5814
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5824
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5841
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5858
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5871
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5884
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5896
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5910
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5925
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5940
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5957
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5972
		{
		}
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5978
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5982
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5986
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5992
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5996
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6004
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6008
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6012
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6018
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6025
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6034
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6038
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6045
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6054
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6063
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6073
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6083
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6092
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6101
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6111
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6121
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6131
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6141
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6151
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6161
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6171
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6181
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6191
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6201
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6211
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6228
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6236
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6244
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6252
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6260
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6269
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6277
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6286
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6295
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6303
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6311
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6320
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6329
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6351
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6387
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6399
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6411
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6421
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6429
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6436
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6443
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6455
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6463
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6474
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6483
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6492
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6500
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6510
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6518
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6526
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6536
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6540
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6550
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6569
		{
		}
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6571
		{
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6612
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6622
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6626
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6630
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6636
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6645
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6651
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6655
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6662
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6666
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6670
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6678
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6682
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6686
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6690
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6696
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6700
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6704
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6708
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6712
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6716
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6720
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6724
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6728
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6732
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6740
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6744
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6748
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6752
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6756
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6760
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6764
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6768
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6778
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6784
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6788
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6795
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6799
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6803
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6809
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6813
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6817
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6821
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6825
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6829
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6833
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6839
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6843
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6847
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6851
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6857
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6861
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6874
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6879
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6883
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6887
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6891
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6895
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6899
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6913
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6917
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6924
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6935
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6940
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6946
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6958
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6970
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6982
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6995
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7008
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7021
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7034
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7047
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7060
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7073
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7086
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7099
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7112
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7127
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7150
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7184
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7232
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7249
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7261
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7281
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7301
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7321
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7337
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7350
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7363
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7376
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7389
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7401
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7413
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7425
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7437
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7449
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7461
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7473
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7485
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7497
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7510
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7523
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7538
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7546
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7555
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7565
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7588
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7593
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7599
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7606
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7610
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7615
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7619
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7625
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7631
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7638
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7645
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7654
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7661
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7677
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7685
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7691
		{
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7693
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7703
		{
			yyVAL.str = ""
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7707
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
