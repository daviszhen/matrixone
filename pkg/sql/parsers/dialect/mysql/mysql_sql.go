// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const ILIKE = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_BINARY = 57459
const INTERVAL = 57460
const BEGIN = 57461
const START = 57462
const TRANSACTION = 57463
const COMMIT = 57464
const ROLLBACK = 57465
const WORK = 57466
const CONSISTENT = 57467
const SNAPSHOT = 57468
const CHAIN = 57469
const NO = 57470
const RELEASE = 57471
const PRIORITY = 57472
const QUICK = 57473
const BIT = 57474
const TINYINT = 57475
const SMALLINT = 57476
const MEDIUMINT = 57477
const INT = 57478
const INTEGER = 57479
const BIGINT = 57480
const INTNUM = 57481
const REAL = 57482
const DOUBLE = 57483
const FLOAT_TYPE = 57484
const DECIMAL = 57485
const NUMERIC = 57486
const DECIMAL_VALUE = 57487
const TIME = 57488
const TIMESTAMP = 57489
const DATETIME = 57490
const YEAR = 57491
const CHAR = 57492
const VARCHAR = 57493
const BOOL = 57494
const CHARACTER = 57495
const VARBINARY = 57496
const NCHAR = 57497
const TEXT = 57498
const TINYTEXT = 57499
const MEDIUMTEXT = 57500
const LONGTEXT = 57501
const BLOB = 57502
const TINYBLOB = 57503
const MEDIUMBLOB = 57504
const LONGBLOB = 57505
const JSON = 57506
const ENUM = 57507
const UUID = 57508
const GEOMETRY = 57509
const POINT = 57510
const LINESTRING = 57511
const POLYGON = 57512
const GEOMETRYCOLLECTION = 57513
const MULTIPOINT = 57514
const MULTILINESTRING = 57515
const MULTIPOLYGON = 57516
const INT1 = 57517
const INT2 = 57518
const INT3 = 57519
const INT4 = 57520
const INT8 = 57521
const S3OPTION = 57522
const SQL_SMALL_RESULT = 57523
const SQL_BIG_RESULT = 57524
const SQL_BUFFER_RESULT = 57525
const LOW_PRIORITY = 57526
const HIGH_PRIORITY = 57527
const DELAYED = 57528
const CREATE = 57529
const ALTER = 57530
const DROP = 57531
const RENAME = 57532
const ANALYZE = 57533
const ADD = 57534
const RETURNS = 57535
const SCHEMA = 57536
const TABLE = 57537
const INDEX = 57538
const VIEW = 57539
const TO = 57540
const IGNORE = 57541
const IF = 57542
const PRIMARY = 57543
const COLUMN = 57544
const CONSTRAINT = 57545
const SPATIAL = 57546
const FULLTEXT = 57547
const FOREIGN = 57548
const KEY_BLOCK_SIZE = 57549
const SHOW = 57550
const DESCRIBE = 57551
const EXPLAIN = 57552
const DATE = 57553
const ESCAPE = 57554
const REPAIR = 57555
const OPTIMIZE = 57556
const TRUNCATE = 57557
const MAXVALUE = 57558
const PARTITION = 57559
const REORGANIZE = 57560
const LESS = 57561
const THAN = 57562
const PROCEDURE = 57563
const TRIGGER = 57564
const STATUS = 57565
const VARIABLES = 57566
const ROLE = 57567
const PROXY = 57568
const AVG_ROW_LENGTH = 57569
const STORAGE = 57570
const DISK = 57571
const MEMORY = 57572
const CHECKSUM = 57573
const COMPRESSION = 57574
const DATA = 57575
const DIRECTORY = 57576
const DELAY_KEY_WRITE = 57577
const ENCRYPTION = 57578
const ENGINE = 57579
const MAX_ROWS = 57580
const MIN_ROWS = 57581
const PACK_KEYS = 57582
const ROW_FORMAT = 57583
const STATS_AUTO_RECALC = 57584
const STATS_PERSISTENT = 57585
const STATS_SAMPLE_PAGES = 57586
const DYNAMIC = 57587
const COMPRESSED = 57588
const REDUNDANT = 57589
const COMPACT = 57590
const FIXED = 57591
const COLUMN_FORMAT = 57592
const AUTO_RANDOM = 57593
const RESTRICT = 57594
const CASCADE = 57595
const ACTION = 57596
const PARTIAL = 57597
const SIMPLE = 57598
const CHECK = 57599
const ENFORCED = 57600
const RANGE = 57601
const LIST = 57602
const ALGORITHM = 57603
const LINEAR = 57604
const PARTITIONS = 57605
const SUBPARTITION = 57606
const SUBPARTITIONS = 57607
const CLUSTER = 57608
const TYPE = 57609
const ANY = 57610
const SOME = 57611
const EXTERNAL = 57612
const LOCALFILE = 57613
const URL = 57614
const PREPARE = 57615
const DEALLOCATE = 57616
const RESET = 57617
const EXTENSION = 57618
const PROPERTIES = 57619
const PARSER = 57620
const VISIBLE = 57621
const INVISIBLE = 57622
const BTREE = 57623
const HASH = 57624
const RTREE = 57625
const BSI = 57626
const ZONEMAP = 57627
const LEADING = 57628
const BOTH = 57629
const TRAILING = 57630
const UNKNOWN = 57631
const EXPIRE = 57632
const ACCOUNT = 57633
const ACCOUNTS = 57634
const UNLOCK = 57635
const DAY = 57636
const NEVER = 57637
const PUMP = 57638
const MYSQL_COMPATBILITY_MODE = 57639
const SECOND = 57640
const ASCII = 57641
const COALESCE = 57642
const COLLATION = 57643
const HOUR = 57644
const MICROSECOND = 57645
const MINUTE = 57646
const MONTH = 57647
const QUARTER = 57648
const REPEAT = 57649
const REVERSE = 57650
const ROW_COUNT = 57651
const WEEK = 57652
const REVOKE = 57653
const FUNCTION = 57654
const PRIVILEGES = 57655
const TABLESPACE = 57656
const EXECUTE = 57657
const SUPER = 57658
const GRANT = 57659
const OPTION = 57660
const REFERENCES = 57661
const REPLICATION = 57662
const SLAVE = 57663
const CLIENT = 57664
const USAGE = 57665
const RELOAD = 57666
const FILE = 57667
const TEMPORARY = 57668
const ROUTINE = 57669
const EVENT = 57670
const SHUTDOWN = 57671
const NULLX = 57672
const AUTO_INCREMENT = 57673
const APPROXNUM = 57674
const SIGNED = 57675
const UNSIGNED = 57676
const ZEROFILL = 57677
const ENGINES = 57678
const LOW_CARDINALITY = 57679
const ADMIN_NAME = 57680
const RANDOM = 57681
const SUSPEND = 57682
const ATTRIBUTE = 57683
const HISTORY = 57684
const REUSE = 57685
const CURRENT = 57686
const OPTIONAL = 57687
const FAILED_LOGIN_ATTEMPTS = 57688
const PASSWORD_LOCK_TIME = 57689
const UNBOUNDED = 57690
const SECONDARY = 57691
const USER = 57692
const IDENTIFIED = 57693
const CIPHER = 57694
const ISSUER = 57695
const X509 = 57696
const SUBJECT = 57697
const SAN = 57698
const REQUIRE = 57699
const SSL = 57700
const NONE = 57701
const PASSWORD = 57702
const MAX_QUERIES_PER_HOUR = 57703
const MAX_UPDATES_PER_HOUR = 57704
const MAX_CONNECTIONS_PER_HOUR = 57705
const MAX_USER_CONNECTIONS = 57706
const FORMAT = 57707
const VERBOSE = 57708
const CONNECTION = 57709
const TRIGGERS = 57710
const PROFILES = 57711
const LOAD = 57712
const INFILE = 57713
const TERMINATED = 57714
const OPTIONALLY = 57715
const ENCLOSED = 57716
const ESCAPED = 57717
const STARTING = 57718
const LINES = 57719
const ROWS = 57720
const IMPORT = 57721
const MODUMP = 57722
const OVER = 57723
const PRECEDING = 57724
const FOLLOWING = 57725
const GROUPS = 57726
const DATABASES = 57727
const TABLES = 57728
const EXTENDED = 57729
const FULL = 57730
const PROCESSLIST = 57731
const FIELDS = 57732
const COLUMNS = 57733
const OPEN = 57734
const ERRORS = 57735
const WARNINGS = 57736
const INDEXES = 57737
const SCHEMAS = 57738
const NODE = 57739
const LOCKS = 57740
const TABLE_NUMBER = 57741
const COLUMN_NUMBER = 57742
const TABLE_VALUES = 57743
const NAMES = 57744
const GLOBAL = 57745
const SESSION = 57746
const ISOLATION = 57747
const LEVEL = 57748
const READ = 57749
const WRITE = 57750
const ONLY = 57751
const REPEATABLE = 57752
const COMMITTED = 57753
const UNCOMMITTED = 57754
const SERIALIZABLE = 57755
const LOCAL = 57756
const EVENTS = 57757
const PLUGINS = 57758
const CURRENT_TIMESTAMP = 57759
const DATABASE = 57760
const CURRENT_TIME = 57761
const LOCALTIME = 57762
const LOCALTIMESTAMP = 57763
const UTC_DATE = 57764
const UTC_TIME = 57765
const UTC_TIMESTAMP = 57766
const REPLACE = 57767
const CONVERT = 57768
const SEPARATOR = 57769
const TIMESTAMPDIFF = 57770
const CURRENT_DATE = 57771
const CURRENT_USER = 57772
const CURRENT_ROLE = 57773
const SECOND_MICROSECOND = 57774
const MINUTE_MICROSECOND = 57775
const MINUTE_SECOND = 57776
const HOUR_MICROSECOND = 57777
const HOUR_SECOND = 57778
const HOUR_MINUTE = 57779
const DAY_MICROSECOND = 57780
const DAY_SECOND = 57781
const DAY_MINUTE = 57782
const DAY_HOUR = 57783
const YEAR_MONTH = 57784
const SQL_TSI_HOUR = 57785
const SQL_TSI_DAY = 57786
const SQL_TSI_WEEK = 57787
const SQL_TSI_MONTH = 57788
const SQL_TSI_QUARTER = 57789
const SQL_TSI_YEAR = 57790
const SQL_TSI_SECOND = 57791
const SQL_TSI_MINUTE = 57792
const RECURSIVE = 57793
const CONFIG = 57794
const DRAINER = 57795
const MATCH = 57796
const AGAINST = 57797
const BOOLEAN = 57798
const LANGUAGE = 57799
const WITH = 57800
const QUERY = 57801
const EXPANSION = 57802
const ADDDATE = 57803
const BIT_AND = 57804
const BIT_OR = 57805
const BIT_XOR = 57806
const CAST = 57807
const COUNT = 57808
const APPROX_COUNT_DISTINCT = 57809
const APPROX_PERCENTILE = 57810
const CURDATE = 57811
const CURTIME = 57812
const DATE_ADD = 57813
const DATE_SUB = 57814
const EXTRACT = 57815
const GROUP_CONCAT = 57816
const MAX = 57817
const MID = 57818
const MIN = 57819
const NOW = 57820
const POSITION = 57821
const SESSION_USER = 57822
const STD = 57823
const STDDEV = 57824
const MEDIAN = 57825
const STDDEV_POP = 57826
const STDDEV_SAMP = 57827
const SUBDATE = 57828
const SUBSTR = 57829
const SUBSTRING = 57830
const SUM = 57831
const SYSDATE = 57832
const SYSTEM_USER = 57833
const TRANSLATE = 57834
const TRIM = 57835
const VARIANCE = 57836
const VAR_POP = 57837
const VAR_SAMP = 57838
const AVG = 57839
const ARROW = 57840
const ROW = 57841
const OUTFILE = 57842
const HEADER = 57843
const MAX_FILE_SIZE = 57844
const FORCE_QUOTE = 57845
const PARALLEL = 57846
const UNUSED = 57847
const BINDINGS = 57848
const DO = 57849
const DECLARE = 57850
const KILL = 57851
const QUERY_RESULT = 57852

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8429

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 91,
	21, 540,
	-2, 521,
	-1, 99,
	213, 737,
	-2, 784,
	-1, 118,
	42, 371,
	213, 371,
	240, 378,
	241, 378,
	412, 371,
	-2, 401,
	-1, 429,
	289, 92,
	388, 92,
	-2, 1528,
	-1, 487,
	67, 1152,
	-2, 1668,
	-1, 488,
	67, 1170,
	-2, 1639,
	-1, 492,
	67, 1171,
	-2, 1667,
	-1, 514,
	67, 1085,
	-2, 1719,
	-1, 515,
	67, 1086,
	-2, 1718,
	-1, 516,
	67, 1087,
	-2, 1708,
	-1, 517,
	67, 1683,
	-2, 1703,
	-1, 518,
	67, 1684,
	-2, 1704,
	-1, 519,
	67, 1685,
	-2, 1710,
	-1, 520,
	67, 1686,
	-2, 1693,
	-1, 521,
	67, 1687,
	-2, 1701,
	-1, 522,
	67, 1688,
	-2, 1711,
	-1, 523,
	67, 1689,
	-2, 1712,
	-1, 524,
	67, 1690,
	-2, 1717,
	-1, 525,
	67, 1691,
	-2, 1722,
	-1, 526,
	67, 1692,
	-2, 1723,
	-1, 528,
	67, 1149,
	-2, 1520,
	-1, 535,
	67, 1158,
	-2, 1546,
	-1, 539,
	67, 1162,
	-2, 1585,
	-1, 540,
	67, 1163,
	-2, 1663,
	-1, 548,
	67, 1173,
	-2, 1648,
	-1, 550,
	67, 1175,
	-2, 1658,
	-1, 551,
	67, 1176,
	-2, 1681,
	-1, 562,
	67, 1067,
	-2, 1713,
	-1, 563,
	67, 1068,
	-2, 1714,
	-1, 564,
	67, 1069,
	-2, 1715,
	-1, 571,
	21, 541,
	-2, 504,
	-1, 626,
	407, 401,
	408, 401,
	-2, 372,
	-1, 671,
	103, 1520,
	114, 1520,
	134, 1520,
	-2, 1313,
	-1, 711,
	21, 541,
	-2, 504,
	-1, 810,
	21, 540,
	-2, 974,
	-1, 1133,
	67, 1220,
	-2, 1665,
	-1, 1134,
	67, 1221,
	-2, 1666,
	-1, 1295,
	1, 763,
	68, 763,
	528, 763,
	-2, 770,
	-1, 1423,
	134, 1323,
	-2, 1321,
	-1, 1425,
	134, 665,
	-2, 1318,
	-1, 1426,
	134, 666,
	-2, 1319,
	-1, 1721,
	68, 1299,
	135, 1299,
	-2, 1650,
	-1, 1722,
	68, 1295,
	135, 1295,
	-2, 1649,
	-1, 1723,
	68, 1277,
	135, 1277,
	-2, 1636,
	-1, 1724,
	68, 1278,
	135, 1278,
	-2, 1641,
	-1, 1725,
	68, 1279,
	135, 1279,
	-2, 1573,
	-1, 1726,
	68, 1280,
	135, 1280,
	-2, 1567,
	-1, 1727,
	68, 1281,
	135, 1281,
	-2, 1511,
	-1, 1728,
	68, 1282,
	135, 1282,
	-2, 1638,
	-1, 1729,
	68, 1283,
	135, 1283,
	-2, 1571,
	-1, 1730,
	68, 1284,
	135, 1284,
	-2, 1566,
	-1, 1731,
	68, 1285,
	135, 1285,
	-2, 1559,
	-1, 1733,
	68, 1288,
	135, 1288,
	-2, 1681,
	-1, 1734,
	68, 1268,
	135, 1268,
	-2, 1668,
	-1, 1735,
	68, 1297,
	135, 1297,
	-2, 1639,
	-1, 1736,
	68, 1297,
	135, 1297,
	-2, 1667,
	-1, 1737,
	68, 1297,
	135, 1297,
	-2, 1529,
	-1, 1738,
	68, 1295,
	135, 1295,
	-2, 1658,
	-1, 1739,
	68, 1292,
	135, 1292,
	-2, 1551,
	-1, 1740,
	67, 1250,
	68, 1250,
	135, 1250,
	350, 1250,
	351, 1250,
	352, 1250,
	-2, 1510,
	-1, 1741,
	67, 1251,
	68, 1251,
	135, 1251,
	350, 1251,
	351, 1251,
	352, 1251,
	-2, 1512,
	-1, 1742,
	67, 1254,
	68, 1254,
	135, 1254,
	350, 1254,
	351, 1254,
	352, 1254,
	-2, 1640,
	-1, 1743,
	67, 1256,
	68, 1256,
	135, 1256,
	350, 1256,
	351, 1256,
	352, 1256,
	-2, 1623,
	-1, 1744,
	67, 1258,
	68, 1258,
	135, 1258,
	350, 1258,
	351, 1258,
	352, 1258,
	-2, 1572,
	-1, 1745,
	67, 1260,
	68, 1260,
	135, 1260,
	350, 1260,
	351, 1260,
	352, 1260,
	-2, 1555,
	-1, 1746,
	67, 1261,
	68, 1261,
	135, 1261,
	350, 1261,
	351, 1261,
	352, 1261,
	-2, 1556,
	-1, 1747,
	67, 1263,
	68, 1263,
	135, 1263,
	350, 1263,
	351, 1263,
	352, 1263,
	-2, 1509,
	-1, 1748,
	68, 1302,
	135, 1302,
	350, 1302,
	351, 1302,
	352, 1302,
	-2, 1534,
	-1, 1749,
	68, 1302,
	135, 1302,
	350, 1302,
	351, 1302,
	352, 1302,
	-2, 1547,
	-1, 1750,
	68, 1305,
	135, 1305,
	350, 1305,
	351, 1305,
	352, 1305,
	-2, 1530,
	-1, 1751,
	68, 1302,
	135, 1302,
	350, 1302,
	351, 1302,
	352, 1302,
	-2, 1608,
	-1, 1764,
	1, 764,
	68, 764,
	528, 764,
	-2, 770,
	-1, 1822,
	21, 540,
	-2, 632,
	-1, 1999,
	65, 447,
	135, 447,
	-2, 879,
	-1, 2297,
	87, 770,
	130, 770,
	167, 770,
	170, 770,
	-2, 827,
	-1, 2299,
	274, 942,
	-2, 921,
	-1, 2310,
	87, 770,
	130, 770,
	167, 770,
	170, 770,
	-2, 827,
	-1, 2313,
	65, 447,
	135, 447,
	-2, 880,
	-1, 2361,
	87, 770,
	130, 770,
	167, 770,
	170, 770,
	-2, 828,
	-1, 2389,
	274, 942,
	-2, 922,
	-1, 2800,
	68, 799,
	135, 799,
	-2, 770,
	-1, 2804,
	68, 799,
	135, 799,
	-2, 770,
	-1, 2818,
	68, 803,
	135, 803,
	-2, 770,
	-1, 2823,
	68, 804,
	135, 804,
	-2, 770,
}

const yyPrivate = 57344

const yyLast = 30333

var yyAct = [...]int{
	459, 2362, 2803, 2804, 2776, 1200, 2812, 440, 2749, 438,
	1114, 2358, 2641, 461, 2718, 2765, 2401, 2701, 2602, 2702,
	1819, 2336, 2532, 2582, 2245, 2539, 2437, 2356, 2615, 1381,
	1711, 838, 1110, 2526, 1023, 2246, 1347, 2543, 137, 137,
	2590, 485, 1815, 2357, 137, 376, 383, 2411, 2185, 383,
	976, 2293, 2390, 1254, 670, 1302, 2431, 2360, 2002, 572,
	2435, 140, 2456, 1117, 1850, 2181, 1056, 2021, 2410, 1409,
	939, 1415, 2281, 1339, 136, 136, 2303, 388, 1369, 1814,
	367, 2186, 2190, 442, 2243, 1891, 1719, 431, 1932, 567,
	1858, 1615, 2237, 432, 1973, 2220, 2042, 2160, 2157, 1773,
	705, 2062, 607, 1859, 1717, 394, 2179, 2155, 1611, 1890,
	1304, 1410, 1271, 437, 1417, 1420, 1423, 1362, 674, 1342,
	2106, 381, 30, 1416, 1610, 2056, 567, 1257, 1252, 953,
	2020, 1975, 3, 1803, 1772, 1199, 137, 955, 1970, 380,
	19, 1279, 1765, 678, 41, 377, 8, 378, 6, 677,
	29, 1113, 1291, 699, 1108, 1340, 1314, 2365, 1643, 441,
	379, 7, 1262, 874, 439, 1612, 1853, 1047, 1715, 1757,
	1313, 1366, 707, 630, 90, 966, 698, 1312, 430, 474,
	91, 399, 1622, 1699, 1099, 1163, 672, 449, 41, 1147,
	372, 722, 919, 1817, 700, 1404, 1386, 1107, 662, 1824,
	1328, 1290, 962, 369, 1002, 663, 606, 433, 1170, 569,
	571, 16, 396, 1315, 1169, 9, 382, 4, 397, 937,
	977, 366, 1015, 1046, 91, 129, 126, 604, 2100, 2100,
	622, 1893, 132, 131, 1629, 1619, 2522, 2432, 391, 1851,
	2244, 1275, 2624, 833, 1412, 570, 839, 130, 580, 37,
	120, 100, 130, 30, 37, 120, 100, 130, 2349, 130,
	130, 130, 1190, 2632, 697, 386, 130, 742, 365, 130,
	130, 19, 1886, 1878, 1616, 41, 2348, 8, 1004, 6,
	1066, 29, 130, 2659, 37, 120, 100, 2129, 1627, 644,
	776, 1854, 7, 89, 566, 2253, 1063, 2077, 989, 2690,
	990, 640, 675, 769, 127, 89, 1972, 676, 973, 127,
	1100, 91, 1104, 2688, 127, 1084, 127, 1065, 127, 1052,
	1350, 1351, 2442, 127, 133, 1324, 127, 1059, 557, 1005,
	556, 558, 559, 1116, 560, 561, 1103, 774, 980, 127,
	581, 979, 982, 983, 982, 983, 1933, 757, 2247, 758,
	2524, 130, 2617, 37, 120, 100, 2705, 2706, 1971, 2625,
	2626, 2722, 2723, 2527, 2528, 2529, 2530, 2063, 2617, 137,
	715, 125, 393, 2064, 750, 2065, 752, 760, 113, 2620,
	2434, 714, 2247, 645, 1873, 383, 383, 89, 137, 779,
	780, 781, 778, 716, 1359, 1119, 1363, 725, 2538, 2261,
	2282, 1355, 76, 1095, 753, 713, 1105, 1186, 127, 1623,
	2631, 1183, 573, 2289, 1978, 1185, 1182, 1184, 1188, 1189,
	683, 682, 684, 1187, 733, 710, 712, 1102, 2171, 2354,
	2161, 1797, 1756, 427, 1696, 2448, 428, 2095, 1246, 1245,
	2408, 2441, 647, 755, 1965, 2093, 99, 2443, 128, 812,
	681, 772, 773, 771, 1883, 725, 2169, 745, 1798, 2451,
	1863, 2351, 709, 1125, 1128, 1129, 2692, 118, 2683, 385,
	746, 1632, 1634, 1635, 1126, 384, 2507, 121, 122, 971,
	123, 124, 2634, 2635, 2544, 711, 2165, 2796, 2813, 2704,
	2731, 767, 768, 748, 1118, 2687, 2643, 737, 686, 2738,
	961, 1205, 756, 2666, 2604, 751, 754, 2500, 2166, 2167,
	646, 2787, 2639, 2640, 1628, 2643, 679, 41, 41, 2469,
	2768, 991, 2468, 2168, 2591, 2592, 2593, 2595, 2594, 747,
	2694, 2695, 2649, 1101, 1984, 1011, 1010, 687, 735, 673,
	993, 1986, 1987, 1988, 1989, 99, 119, 128, 2567, 74,
	675, 975, 974, 91, 91, 676, 1193, 1194, 1195, 1196,
	1197, 1198, 1191, 1192, 718, 719, 118, 112, 111, 1058,
	759, 727, 726, 43, 2491, 680, 960, 959, 2495, 2163,
	2814, 2808, 2777, 936, 938, 2457, 2820, 1644, 2273, 706,
	950, 940, 392, 1879, 2044, 2046, 1831, 749, 2614, 1003,
	742, 730, 731, 2151, 944, 1620, 607, 1617, 734, 814,
	815, 816, 817, 1617, 1617, 2098, 948, 947, 675, 2194,
	720, 946, 1631, 810, 2265, 2099, 387, 2048, 916, 727,
	726, 114, 115, 116, 762, 2769, 763, 1828, 818, 982,
	983, 1008, 782, 685, 601, 602, 603, 1000, 1353, 981,
	1354, 811, 868, 982, 983, 1827, 941, 942, 943, 820,
	945, 2633, 2108, 2107, 765, 567, 567, 567, 1352, 84,
	1027, 1027, 978, 117, 2771, 85, 2693, 649, 972, 38,
	741, 826, 650, 1977, 1053, 2603, 1127, 383, 938, 1050,
	1050, 1630, 570, 1618, 1633, 1830, 1829, 2791, 2627, 2628,
	1364, 1305, 1025, 1025, 2807, 1029, 1006, 1007, 2826, 1061,
	2825, 2162, 101, 2350, 38, 2172, 1672, 101, 2449, 1671,
	2096, 2816, 101, 1031, 101, 101, 101, 1887, 86, 1082,
	761, 101, 777, 1812, 101, 101, 1981, 1982, 36, 1358,
	848, 849, 1027, 2195, 1027, 715, 1356, 101, 1096, 2045,
	1980, 2355, 2819, 924, 1655, 969, 1115, 1866, 2164, 2766,
	2767, 1067, 985, 986, 736, 988, 766, 690, 695, 696,
	2568, 2570, 2571, 2572, 2569, 777, 2797, 777, 673, 779,
	780, 781, 778, 38, 2496, 2497, 777, 1870, 2817, 764,
	1077, 1078, 968, 921, 2792, 571, 2493, 2000, 641, 923,
	2492, 742, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 2298, 2780, 101, 999, 1158, 1159,
	1813, 574, 1705, 1097, 1654, 1168, 1878, 1057, 963, 967,
	967, 1064, 1305, 952, 1214, 992, 1389, 994, 1813, 2779,
	1813, 2463, 2199, 1625, 1759, 641, 963, 1220, 963, 2191,
	2194, 1091, 1112, 1033, 984, 1222, 1967, 987, 366, 1227,
	1228, 2793, 653, 2754, 41, 87, 88, 92, 567, 1090,
	1018, 1019, 1020, 41, 1098, 1087, 1009, 1086, 643, 1081,
	1852, 642, 1625, 997, 998, 91, 1001, 1080, 1992, 91,
	1021, 1022, 1093, 1109, 740, 2751, 1049, 1049, 1130, 1032,
	91, 1840, 2712, 1044, 1068, 365, 1625, 1045, 2707, 91,
	652, 1073, 2001, 1051, 655, 654, 1268, 2001, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 643, 1616, 1247, 642, 571,
	1625, 1253, 1710, 1069, 692, 693, 694, 777, 1709, 1758,
	137, 1089, 1289, 1027, 1676, 1088, 1295, 1085, 1213, 1261,
	1607, 2217, 607, 1106, 574, 1303, 1387, 739, 951, 1027,
	2696, 1111, 2752, 1000, 1201, 1294, 1204, 1269, 376, 2453,
	1215, 1156, 1157, 1161, 2195, 2453, 1286, 1840, 1012, 2188,
	1221, 2667, 1223, 2189, 2192, 1120, 1121, 1122, 1123, 1124,
	1329, 1329, 1149, 1000, 742, 1000, 2664, 1272, 137, 1289,
	2753, 2316, 1027, 1349, 1250, 2200, 779, 780, 781, 778,
	964, 1993, 2058, 567, 1327, 1027, 2003, 1296, 1297, 1298,
	2663, 1259, 1260, 779, 780, 781, 778, 1840, 740, 1165,
	1166, 1167, 1881, 2662, 1334, 2193, 1202, 2661, 1289, 1027,
	1208, 1380, 137, 137, 1203, 1288, 1880, 2288, 2668, 1293,
	1391, 1708, 595, 2651, 137, 1872, 1793, 2517, 1668, 1224,
	1214, 1408, 1331, 2453, 699, 1656, 1214, 1214, 2127, 2516,
	917, 2452, 1383, 1242, 1606, 1264, 2340, 1267, 1382, 1382,
	1318, 2067, 2039, 1397, 1956, 1954, 1375, 2453, 1952, 1394,
	1382, 1425, 1950, 1938, 1292, 1303, 1325, 1326, 1311, 1027,
	2453, 1894, 1335, 794, 2453, 700, 1285, 1070, 965, 1876,
	1308, 915, 1320, 1321, 1276, 824, 1868, 1360, 728, 2204,
	2652, 1306, 1307, 1365, 2518, 1317, 1273, 1270, 708, 708,
	1277, 1864, 1426, 1280, 1860, 2092, 1777, 1322, 2453, 964,
	1614, 1377, 599, 2068, 651, 1379, 1014, 1776, 2068, 1813,
	1608, 1957, 1955, 1292, 1299, 1951, 1637, 1323, 1300, 1951,
	777, 1706, 1310, 2772, 1641, 1642, 1680, 2090, 777, 1901,
	1332, 1316, 1333, 963, 1406, 597, 1777, 1679, 584, 1624,
	1406, 1910, 1348, 1861, 1319, 594, 593, 2091, 1074, 1826,
	1109, 1330, 1613, 1373, 1374, 967, 956, 2763, 1865, 1974,
	957, 1861, 1338, 1337, 1207, 1206, 587, 914, 911, 912,
	913, 1361, 1164, 1915, 1777, 1914, 1913, 1911, 41, 2653,
	1384, 1016, 2218, 1273, 1376, 1164, 1013, 1650, 1705, 1273,
	1273, 1677, 1017, 777, 675, 2101, 1378, 965, 1684, 676,
	675, 1370, 1371, 1372, 777, 676, 1625, 592, 1395, 2018,
	1871, 591, 1833, 717, 91, 1075, 708, 582, 1155, 2680,
	1418, 1413, 1419, 648, 1424, 1604, 1287, 1605, 778, 656,
	781, 778, 585, 1152, 1154, 1151, 2120, 1153, 1912, 2503,
	2502, 2307, 1609, 2302, 431, 715, 1752, 797, 798, 799,
	800, 801, 794, 583, 2066, 1233, 1720, 137, 137, 137,
	1774, 779, 780, 781, 778, 2802, 2486, 598, 2783, 2732,
	1903, 1000, 779, 780, 781, 778, 1645, 1639, 1640, 1636,
	1786, 2119, 2727, 2671, 2584, 675, 2562, 2699, 2786, 2561,
	810, 586, 1000, 1768, 1769, 1770, 699, 2578, 2560, 1149,
	2156, 1638, 2557, 779, 780, 781, 778, 1349, 1649, 779,
	780, 781, 778, 1225, 1226, 2551, 1785, 1229, 1230, 1231,
	1232, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1647,
	2548, 2785, 1651, 2547, 2576, 2577, 1027, 700, 795, 796,
	797, 798, 799, 800, 801, 794, 715, 2393, 1050, 2285,
	1349, 1925, 1218, 1845, 2170, 1847, 2146, 1720, 2145, 596,
	1916, 1917, 1219, 1214, 1289, 2086, 1820, 1820, 1838, 1820,
	2060, 2403, 2575, 1662, 2574, 1704, 1753, 1666, 2564, 2352,
	1823, 2286, 1783, 1664, 2396, 1821, 1703, 1825, 1190, 1702,
	2391, 1787, 1788, 1698, 1678, 2406, 2407, 1681, 1682, 1683,
	1701, 2392, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1697, 1694, 2573, 1766, 1712, 1713, 2563, 2353, 1071, 2287,
	1789, 2542, 1714, 1844, 1795, 934, 779, 780, 781, 778,
	427, 1856, 1862, 428, 1857, 1760, 1663, 2397, 2337, 2724,
	1790, 1791, 1659, 779, 780, 781, 778, 2698, 1782, 2583,
	2682, 1781, 1784, 2512, 701, 702, 703, 1842, 779, 780,
	781, 778, 1794, 1792, 2647, 1652, 1849, 1799, 779, 780,
	781, 778, 2646, 1778, 2629, 779, 780, 781, 778, 2612,
	2565, 675, 2558, 2554, 2553, 2552, 1822, 462, 471, 2488,
	2450, 2433, 463, 2335, 470, 464, 468, 467, 465, 466,
	2818, 967, 1834, 1835, 1836, 785, 786, 787, 788, 789,
	790, 791, 783, 2333, 1841, 1843, 2296, 779, 780, 781,
	778, 779, 780, 781, 778, 2405, 2284, 2187, 2283, 1348,
	2280, 2270, 2264, 1186, 1892, 2150, 2144, 1183, 1273, 1273,
	1273, 1185, 1182, 1184, 1188, 1189, 472, 2343, 2097, 1187,
	2061, 2051, 2399, 513, 512, 1049, 792, 802, 803, 795,
	796, 797, 798, 799, 800, 801, 794, 1874, 1707, 779,
	780, 781, 778, 1700, 2398, 2400, 469, 1027, 1398, 1027,
	1396, 1027, 1282, 1072, 847, 843, 715, 802, 803, 795,
	796, 797, 798, 799, 800, 801, 794, 1888, 2342, 793,
	792, 802, 803, 795, 796, 797, 798, 799, 800, 801,
	794, 1884, 2267, 842, 825, 704, 1027, 1919, 1674, 2794,
	779, 780, 781, 778, 2174, 2654, 2531, 2310, 2309, 1926,
	2297, 2275, 2274, 1027, 779, 780, 781, 778, 2269, 575,
	576, 577, 578, 2408, 1928, 2257, 2236, 2235, 1025, 2205,
	1918, 2125, 574, 2118, 2110, 2394, 2105, 2055, 2784, 1966,
	1953, 2404, 1949, 1948, 1685, 1025, 1675, 1927, 2123, 1673,
	1670, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1193, 1194, 1195, 1196, 1197, 1198, 1191, 1192,
	779, 780, 781, 778, 1669, 1667, 1661, 1930, 1658, 1905,
	2122, 1035, 1657, 1217, 1216, 1885, 793, 792, 802, 803,
	795, 796, 797, 798, 799, 800, 801, 794, 2121, 1027,
	1899, 1036, 779, 780, 781, 778, 1947, 1875, 1109, 1934,
	130, 1882, 1999, 1034, 1939, 1877, 2815, 2762, 2005, 2756,
	779, 780, 781, 778, 1958, 2739, 2736, 2734, 779, 780,
	781, 778, 1261, 2670, 2014, 840, 2600, 2588, 1895, 1896,
	2585, 715, 1349, 1349, 1349, 1349, 1946, 1968, 1997, 1898,
	2506, 1945, 2022, 715, 1349, 2580, 2519, 2510, 1909, 1780,
	1944, 1991, 2509, 2508, 2022, 1943, 2505, 127, 779, 780,
	781, 778, 1027, 779, 780, 781, 778, 2499, 2484, 1249,
	137, 137, 779, 780, 781, 778, 2326, 779, 780, 781,
	778, 2324, 1962, 2308, 2291, 2131, 1258, 1251, 1902, 2038,
	2072, 954, 1214, 1996, 1259, 1260, 2073, 1920, 1921, 1995,
	1994, 1214, 1923, 1924, 1959, 1263, 2053, 2054, 1820, 1027,
	1942, 1266, 1255, 1867, 1929, 130, 2006, 822, 120, 100,
	1832, 1775, 2017, 2084, 1150, 127, 2008, 30, 1403, 1385,
	2010, 1284, 779, 780, 781, 778, 1998, 1990, 2004, 1256,
	1292, 1983, 1264, 1273, 1267, 19, 1960, 1961, 1280, 41,
	2007, 8, 1766, 6, 1094, 29, 1060, 2069, 2011, 2012,
	918, 2019, 866, 2036, 2085, 2016, 7, 865, 864, 2079,
	863, 571, 127, 2035, 2037, 2034, 1272, 1762, 1941, 2013,
	2081, 2052, 862, 861, 860, 91, 2049, 2023, 2024, 2025,
	2026, 859, 2047, 858, 2111, 857, 856, 2113, 715, 2115,
	779, 780, 781, 778, 2159, 2059, 2070, 2094, 2074, 1720,
	2076, 1348, 1348, 1348, 1348, 2089, 137, 2088, 2082, 2083,
	2078, 1940, 855, 1348, 2080, 715, 715, 715, 854, 853,
	2009, 1349, 1774, 2102, 2203, 852, 2184, 2184, 2184, 851,
	2207, 2103, 850, 779, 780, 781, 778, 846, 2159, 845,
	2130, 1937, 2175, 844, 2132, 2133, 2134, 2135, 2109, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2116, 2117, 841,
	2112, 1936, 2114, 779, 780, 781, 778, 837, 91, 836,
	834, 833, 832, 831, 830, 829, 828, 732, 1935, 1919,
	827, 2147, 823, 779, 780, 781, 778, 821, 744, 1289,
	1931, 2744, 2152, 1289, 2201, 1273, 2221, 2222, 2742, 1273,
	779, 780, 781, 778, 1922, 2703, 2176, 2177, 2178, 2224,
	1900, 2154, 779, 780, 781, 778, 1985, 1839, 2198, 137,
	1400, 2202, 2196, 2197, 743, 2801, 779, 780, 781, 778,
	2227, 2104, 779, 780, 781, 778, 2213, 2215, 2206, 2226,
	1653, 2225, 2208, 2209, 2212, 2031, 2242, 2232, 2233, 2234,
	2032, 2216, 1160, 2124, 2029, 2262, 2028, 2211, 2229, 2030,
	2027, 2255, 779, 780, 781, 778, 2228, 2258, 2329, 91,
	2328, 2210, 2241, 2071, 779, 780, 781, 778, 1805, 1808,
	1809, 1810, 1806, 2256, 1807, 1811, 2033, 1402, 1809, 1810,
	2148, 2149, 2252, 1869, 2153, 1964, 1767, 1027, 1027, 75,
	1348, 2260, 40, 1401, 2327, 39, 2263, 1243, 2301, 2251,
	1800, 2254, 1855, 2259, 134, 91, 1889, 1712, 1713, 2231,
	1349, 2313, 920, 1054, 1754, 738, 2537, 2015, 1969, 1025,
	2294, 2292, 1301, 1805, 1808, 1809, 1810, 1806, 715, 1807,
	1811, 362, 1283, 2715, 363, 1336, 2214, 364, 996, 2022,
	1207, 1206, 2276, 361, 932, 933, 995, 2279, 2278, 930,
	931, 928, 929, 926, 927, 2331, 770, 91, 1603, 91,
	958, 1214, 575, 576, 577, 578, 922, 2757, 2677, 2675,
	1820, 2305, 2315, 2637, 2622, 574, 574, 2300, 2306, 2621,
	2619, 2299, 2304, 2312, 2304, 2545, 2320, 2520, 2311, 2430,
	2429, 2346, 2334, 2249, 2248, 2321, 2319, 2239, 925, 2238,
	2057, 1305, 715, 2746, 2745, 2746, 2087, 2322, 1660, 715,
	729, 2745, 2501, 2412, 2414, 2250, 2412, 2412, 2332, 970,
	2184, 48, 2314, 1, 1281, 579, 1399, 2040, 2317, 2041,
	2230, 2318, 2338, 2339, 2043, 1303, 1621, 2427, 2266, 2341,
	1796, 2345, 1755, 2760, 2173, 2268, 949, 600, 1209, 1079,
	689, 2347, 724, 1076, 723, 721, 1162, 476, 2409, 2447,
	1411, 2413, 2444, 2581, 2426, 2714, 2748, 2669, 2344, 2717,
	1092, 460, 2613, 2459, 2387, 2523, 2673, 2525, 2421, 2436,
	1626, 2424, 2315, 2420, 2415, 2416, 775, 2075, 2417, 1348,
	2425, 793, 792, 802, 803, 795, 796, 797, 798, 799,
	800, 801, 794, 618, 507, 483, 835, 1062, 1027, 1055,
	2128, 691, 482, 2487, 2445, 2290, 1979, 590, 688, 137,
	619, 1695, 2454, 2521, 1244, 1265, 1248, 2811, 2414, 2800,
	2462, 2775, 2422, 2423, 2755, 2642, 1273, 2795, 2686, 2323,
	2294, 2737, 2325, 2440, 2438, 2439, 2730, 2638, 2409, 398,
	1357, 565, 2485, 660, 2601, 2504, 2330, 1779, 2630, 2489,
	2587, 588, 1761, 589, 715, 1764, 1763, 1131, 2460, 2461,
	2546, 2464, 2465, 2466, 2467, 2511, 784, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2513, 2515, 2579, 2514, 2541, 1148, 2271, 2272, 819,
	436, 1648, 448, 1976, 2402, 2050, 47, 2540, 1897, 46,
	45, 44, 1390, 1421, 478, 139, 715, 1422, 2609, 715,
	715, 715, 2719, 458, 457, 2559, 2418, 456, 455, 2607,
	2610, 793, 792, 802, 803, 795, 796, 797, 798, 799,
	800, 801, 794, 2589, 1820, 1804, 2597, 2598, 2599, 1802,
	1801, 1344, 2611, 2586, 1343, 1388, 2700, 2657, 2596, 2658,
	1027, 1027, 2605, 2498, 2566, 2494, 2623, 2549, 2550, 2618,
	2616, 2490, 2648, 2555, 2556, 2361, 2606, 2455, 2388, 2389,
	2395, 873, 869, 2636, 871, 872, 870, 1908, 1904, 2182,
	2183, 137, 1025, 1025, 2644, 2645, 2180, 935, 2446, 715,
	2277, 1718, 1716, 2223, 2219, 1407, 1278, 2385, 1963, 1345,
	1341, 715, 2419, 568, 31, 26, 5, 28, 27, 14,
	2650, 15, 13, 1083, 12, 18, 2660, 1382, 2656, 25,
	24, 23, 83, 82, 81, 80, 22, 11, 2665, 79,
	78, 1767, 77, 21, 72, 20, 73, 70, 715, 71,
	2672, 2676, 58, 2678, 2679, 2674, 57, 56, 2536, 2684,
	68, 67, 66, 65, 64, 63, 617, 2758, 2805, 55,
	54, 53, 52, 69, 62, 61, 2689, 2691, 2367, 2713,
	60, 2721, 59, 51, 50, 49, 2697, 98, 97, 96,
	95, 94, 93, 32, 2720, 33, 715, 2708, 2709, 2710,
	2711, 34, 35, 108, 107, 109, 2729, 1115, 2733, 2725,
	2735, 110, 105, 2726, 2728, 793, 792, 802, 803, 795,
	796, 797, 798, 799, 800, 801, 794, 103, 2740, 106,
	2743, 2741, 104, 2750, 102, 42, 2681, 10, 17, 2747,
	2, 0, 0, 0, 0, 715, 0, 715, 0, 0,
	0, 2536, 0, 0, 0, 2759, 1115, 2761, 1115, 2764,
	0, 0, 0, 2721, 2774, 0, 0, 0, 0, 0,
	0, 0, 2770, 715, 0, 0, 2720, 2773, 0, 0,
	2778, 0, 0, 2782, 1115, 0, 0, 0, 0, 2750,
	2788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2798, 2655, 0, 0, 0, 0, 2799, 0,
	0, 0, 2806, 0, 2371, 2126, 2810, 2809, 0, 0,
	0, 0, 0, 0, 0, 2375, 0, 0, 0, 0,
	2806, 2821, 2823, 0, 2822, 2810, 2824, 0, 0, 0,
	0, 0, 0, 0, 0, 2364, 0, 0, 0, 2366,
	2368, 2370, 0, 2372, 2373, 2374, 2376, 2377, 2378, 2380,
	2381, 2382, 2383, 793, 792, 802, 803, 795, 796, 797,
	798, 799, 800, 801, 794, 1538, 1580, 0, 0, 1527,
	307, 1484, 1540, 1457, 1473, 1548, 1474, 1475, 1513, 1436,
	1495, 269, 1471, 0, 0, 2386, 0, 0, 2536, 1530,
	1428, 1460, 1461, 1430, 1467, 1431, 1458, 1486, 214, 1456,
	1498, 239, 1510, 1470, 1491, 1546, 0, 0, 299, 253,
	0, 0, 1489, 1532, 1492, 1518, 1483, 1514, 1444, 1506,
	1541, 1472, 2384, 1511, 1542, 0, 0, 0, 0, 701,
	702, 703, 0, 0, 0, 0, 195, 0, 0, 2363,
	0, 0, 1509, 1536, 1469, 0, 198, 1539, 1490, 1512,
	0, 0, 1429, 1507, 0, 1434, 1437, 1547, 1534, 1464,
	1465, 0, 0, 0, 0, 0, 0, 0, 2379, 1487,
	1493, 1515, 1480, 0, 1494, 2369, 0, 0, 0, 0,
	2790, 0, 0, 1462, 0, 1503, 0, 0, 0, 1439,
	1435, 0, 1485, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 1579, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 1438, 328, 190, 1574,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 359, 229, 277, 243, 278, 230, 255, 254,
	256, 1558, 1559, 1560, 1561, 1562, 356, 1570, 1571, 0,
	1575, 1576, 1577, 1443, 0, 1463, 1516, 0, 1427, 1601,
	1525, 1533, 1482, 330, 1535, 1479, 1478, 1565, 0, 1564,
	303, 1566, 1567, 238, 1531, 1459, 1468, 346, 1466, 289,
	271, 1537, 1502, 1578, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 1563, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 1572, 0, 1573, 342, 221, 178, 179, 325,
	0, 267, 0, 1602, 1528, 1432, 1442, 1440, 1476, 1504,
	1505, 263, 341, 1520, 1524, 1521, 1549, 292, 0, 0,
	0, 0, 0, 232, 273, 1522, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1433, 0, 300,
	323, 335, 352, 355, 1581, 1582, 1583, 183, 354, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 326, 1477, 1450, 1488,
	334, 1453, 1451, 1519, 1452, 1508, 350, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 1499, 1481, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1500, 1592, 1593, 1594, 1595,
	1596, 1455, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 1526, 358, 1597, 1598, 1599, 1600, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 1449, 1454, 1448, 1496, 1497, 1543, 1544,
	1545, 1517, 1441, 1529, 0, 1445, 1447, 1446, 793, 792,
	802, 803, 795, 796, 797, 798, 799, 800, 801, 794,
	805, 0, 809, 0, 0, 0, 0, 1523, 0, 0,
	1501, 180, 0, 240, 1550, 281, 219, 806, 808, 804,
	0, 807, 793, 792, 802, 803, 795, 796, 797, 798,
	799, 800, 801, 794, 0, 0, 0, 0, 307, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 1568, 1569, 338, 339, 340,
	360, 324, 450, 211, 1591, 0, 214, 0, 0, 239,
	0, 0, 0, 481, 0, 0, 299, 253, 0, 0,
	0, 0, 536, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 443, 0, 0, 475, 513, 512,
	462, 471, 1646, 0, 195, 463, 0, 470, 464, 468,
	467, 465, 466, 0, 528, 0, 0, 0, 0, 0,
	0, 434, 447, 2533, 451, 793, 792, 802, 803, 795,
	796, 797, 798, 799, 800, 801, 794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 490, 0, 446, 0, 0, 453, 472,
	473, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 469,
	488, 492, 207, 550, 486, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	551, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 0,
	0, 330, 0, 0, 534, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 487, 0, 289, 271, 547,
	435, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 532, 267,
	0, 0, 546, 527, 529, 530, 533, 537, 538, 539,
	540, 541, 543, 545, 549, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 2534, 0,
	0, 0, 2535, 0, 548, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 491, 257, 258, 259, 260, 535,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 358, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 557, 531, 556, 558, 559, 555, 560, 561, 542,
	454, 0, 495, 553, 552, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 520, 500, 501, 502, 452,
	503, 498, 499, 521, 493, 517, 518, 477, 496, 504,
	516, 505, 519, 522, 523, 562, 563, 511, 564, 508,
	524, 515, 514, 506, 494, 525, 526, 480, 479, 509,
	510, 497, 307, 489, 0, 338, 339, 340, 360, 324,
	0, 211, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 481, 0, 0,
	299, 253, 0, 0, 0, 0, 536, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 443, 0,
	0, 475, 513, 512, 462, 471, 0, 0, 195, 463,
	0, 470, 464, 468, 467, 465, 466, 0, 528, 0,
	0, 0, 0, 0, 0, 434, 447, 0, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 444, 445, 0, 0, 0, 0, 490, 0, 446,
	0, 0, 453, 472, 473, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 469, 488, 492, 207, 550, 486, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 551, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 0, 0, 330, 0, 0, 534, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 487,
	0, 289, 271, 547, 435, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 1211, 1210, 1212, 342, 221, 178,
	179, 325, 532, 267, 0, 0, 546, 527, 529, 530,
	533, 537, 538, 539, 540, 541, 543, 545, 549, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 491, 257,
	258, 259, 260, 535, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 358, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 557, 531, 556, 558, 559,
	555, 560, 561, 542, 454, 0, 495, 553, 552, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 520,
	500, 501, 502, 452, 503, 498, 499, 521, 493, 517,
	518, 477, 496, 504, 516, 505, 519, 522, 523, 562,
	563, 511, 564, 508, 524, 515, 514, 506, 494, 525,
	526, 480, 479, 509, 510, 497, 307, 489, 0, 338,
	339, 340, 360, 324, 0, 211, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 481, 0, 0, 299, 253, 0, 0, 0, 0,
	536, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 443, 0, 0, 475, 513, 512, 462, 471,
	0, 0, 195, 463, 0, 470, 464, 468, 467, 465,
	466, 0, 528, 0, 0, 0, 0, 0, 0, 434,
	447, 0, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 444, 445, 0, 0, 0,
	0, 490, 0, 446, 0, 0, 453, 472, 473, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 469, 488, 492,
	207, 550, 486, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 551, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 484, 0, 0, 330,
	0, 0, 534, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 487, 0, 289, 271, 547, 435, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 532, 267, 0, 0,
	546, 527, 529, 530, 533, 537, 538, 539, 540, 541,
	543, 545, 549, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 2534, 0, 0, 0,
	2535, 0, 548, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 491, 257, 258, 259, 260, 535, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 358,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 557,
	531, 556, 558, 559, 555, 560, 561, 542, 454, 0,
	495, 553, 552, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 520, 500, 501, 502, 452, 503, 498,
	499, 521, 493, 517, 518, 477, 496, 504, 516, 505,
	519, 522, 523, 562, 563, 511, 564, 508, 524, 515,
	514, 506, 494, 525, 526, 480, 479, 509, 510, 497,
	307, 489, 0, 338, 339, 340, 360, 324, 0, 211,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 0, 0, 0, 214, 1274,
	0, 239, 0, 0, 0, 481, 0, 0, 299, 253,
	0, 0, 0, 0, 536, 544, 0, 0, 0, 0,
	0, 0, 0, 1367, 0, 0, 443, 0, 0, 475,
	513, 512, 462, 471, 0, 0, 195, 463, 0, 470,
	464, 468, 467, 465, 466, 0, 528, 0, 0, 0,
	0, 0, 0, 434, 447, 0, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 444,
	445, 0, 0, 0, 0, 490, 0, 446, 0, 0,
	1368, 472, 473, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 469, 488, 492, 207, 550, 486, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 551, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 0, 0, 330, 0, 0, 534, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 487, 0, 289,
	271, 547, 435, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	532, 267, 0, 0, 546, 527, 529, 530, 533, 537,
	538, 539, 540, 541, 543, 545, 549, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 491, 257, 258, 259,
	260, 535, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 358, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 557, 531, 556, 558, 559, 555, 560,
	561, 542, 454, 0, 495, 553, 552, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 520, 500, 501,
	502, 452, 503, 498, 499, 521, 493, 517, 518, 477,
	496, 504, 516, 505, 519, 522, 523, 562, 563, 511,
	564, 508, 524, 515, 514, 506, 494, 525, 526, 480,
	479, 509, 510, 497, 130, 307, 489, 338, 339, 340,
	360, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	813, 0, 0, 299, 253, 0, 0, 0, 0, 536,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 443, 0, 0, 475, 513, 512, 462, 471, 0,
	0, 195, 463, 0, 470, 464, 468, 467, 465, 466,
	0, 528, 0, 0, 0, 0, 0, 0, 434, 447,
	0, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 444, 445, 0, 0, 0, 0,
	490, 0, 446, 0, 0, 453, 472, 473, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 469, 488, 492, 207,
	550, 486, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 551, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 0, 0, 330, 0,
	0, 534, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 487, 0, 289, 271, 547, 435, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 532, 267, 0, 0, 546,
	527, 529, 530, 533, 537, 538, 539, 540, 541, 543,
	545, 549, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 491, 257, 258, 259, 260, 535, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 358, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 557, 531,
	556, 558, 559, 555, 560, 561, 542, 454, 0, 495,
	553, 552, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 101,
	281, 219, 520, 500, 501, 502, 452, 503, 498, 499,
	521, 493, 517, 518, 477, 496, 504, 516, 505, 519,
	522, 523, 562, 563, 511, 564, 508, 524, 515, 514,
	506, 494, 525, 526, 480, 479, 509, 510, 497, 307,
	489, 0, 338, 339, 340, 360, 324, 0, 211, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 0, 0, 0, 214, 2789, 0,
	239, 0, 0, 0, 481, 0, 0, 299, 253, 0,
	0, 0, 0, 536, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 475, 513,
	512, 462, 471, 0, 0, 195, 463, 0, 470, 464,
	468, 467, 465, 466, 0, 528, 0, 0, 0, 0,
	0, 0, 434, 447, 0, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 444, 445,
	0, 0, 0, 0, 490, 0, 446, 0, 0, 453,
	472, 473, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	469, 488, 492, 207, 550, 486, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 551, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	0, 0, 330, 0, 0, 534, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 487, 0, 289, 271,
	547, 435, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 532,
	267, 0, 0, 546, 527, 529, 530, 533, 537, 538,
	539, 540, 541, 543, 545, 549, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 491, 257, 258, 259, 260,
	535, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 358, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 557, 531, 556, 558, 559, 555, 560, 561,
	542, 454, 0, 495, 553, 552, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 520, 500, 501, 502,
	452, 503, 498, 499, 521, 493, 517, 518, 477, 496,
	504, 516, 505, 519, 522, 523, 562, 563, 511, 564,
	508, 524, 515, 514, 506, 494, 525, 526, 480, 479,
	509, 510, 497, 307, 489, 0, 338, 339, 340, 360,
	324, 0, 211, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 0, 0,
	0, 214, 1274, 0, 239, 0, 0, 0, 481, 0,
	0, 299, 253, 0, 0, 0, 0, 536, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 443,
	0, 0, 475, 513, 512, 462, 471, 0, 0, 195,
	463, 0, 470, 464, 468, 467, 465, 466, 0, 528,
	0, 0, 0, 0, 0, 0, 434, 447, 0, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 444, 445, 0, 0, 0, 0, 490, 0,
	446, 0, 0, 453, 472, 473, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 469, 488, 492, 207, 550, 486,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 551, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 0, 0, 330, 0, 0, 534,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	487, 0, 289, 271, 547, 435, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 532, 267, 0, 0, 546, 527, 529,
	530, 533, 537, 538, 539, 540, 541, 543, 545, 549,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 491,
	257, 258, 259, 260, 535, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 358, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 557, 531, 556, 558,
	559, 555, 560, 561, 542, 454, 0, 495, 553, 552,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	520, 500, 501, 502, 452, 503, 498, 499, 521, 493,
	517, 518, 477, 496, 504, 516, 505, 519, 522, 523,
	562, 563, 511, 564, 508, 524, 515, 514, 506, 494,
	525, 526, 480, 479, 509, 510, 497, 307, 489, 0,
	338, 339, 340, 360, 324, 0, 211, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 481, 0, 0, 299, 253, 0, 0, 0,
	0, 536, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 0, 0, 475, 513, 512, 462,
	471, 0, 0, 195, 463, 0, 470, 464, 468, 467,
	465, 466, 0, 528, 0, 0, 0, 0, 0, 0,
	434, 447, 0, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 444, 445, 1048, 0,
	0, 0, 490, 0, 446, 0, 0, 453, 472, 473,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 469, 488,
	492, 207, 550, 486, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 551,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 0, 0,
	330, 0, 0, 534, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 487, 0, 289, 271, 547, 435,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 532, 267, 0,
	0, 546, 527, 529, 530, 533, 537, 538, 539, 540,
	541, 543, 545, 549, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 491, 257, 258, 259, 260, 535, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	358, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	557, 531, 556, 558, 559, 555, 560, 561, 542, 454,
	0, 495, 553, 552, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 520, 500, 501, 502, 452, 503,
	498, 499, 521, 493, 517, 518, 477, 496, 504, 516,
	505, 519, 522, 523, 562, 563, 511, 564, 508, 524,
	515, 514, 506, 494, 525, 526, 480, 479, 509, 510,
	497, 0, 0, 0, 338, 339, 340, 360, 324, 0,
	211, 307, 489, 0, 0, 1665, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 481, 0, 0, 299,
	253, 0, 0, 0, 0, 536, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 443, 0, 0,
	475, 513, 512, 462, 471, 0, 0, 195, 463, 0,
	470, 464, 468, 467, 465, 466, 0, 528, 0, 0,
	0, 0, 0, 0, 434, 447, 0, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 445, 0, 0, 0, 0, 490, 0, 446, 0,
	0, 453, 472, 473, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 469, 488, 492, 207, 550, 486, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 551, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 484, 0, 0, 330, 0, 0, 534, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 487, 0,
	289, 271, 547, 435, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 532, 267, 0, 0, 546, 527, 529, 530, 533,
	537, 538, 539, 540, 541, 543, 545, 549, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 491, 257, 258,
	259, 260, 535, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 358, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 557, 531, 556, 558, 559, 555,
	560, 561, 542, 454, 0, 495, 553, 552, 554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 520, 500,
	501, 502, 452, 503, 498, 499, 521, 493, 517, 518,
	477, 496, 504, 516, 505, 519, 522, 523, 562, 563,
	511, 564, 508, 524, 515, 514, 506, 494, 525, 526,
	480, 479, 509, 510, 497, 307, 489, 0, 338, 339,
	340, 360, 324, 0, 211, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	481, 0, 0, 299, 253, 0, 0, 0, 0, 536,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 443, 0, 0, 475, 513, 512, 462, 471, 0,
	0, 195, 463, 0, 470, 464, 468, 467, 465, 466,
	0, 528, 0, 0, 0, 0, 0, 0, 434, 447,
	0, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 444, 445, 0, 0, 0, 0,
	490, 0, 446, 0, 0, 453, 472, 473, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 469, 488, 492, 207,
	550, 486, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 551, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 0, 0, 330, 0,
	0, 534, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 487, 0, 289, 271, 547, 435, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 532, 267, 0, 0, 546,
	527, 529, 530, 533, 537, 538, 539, 540, 541, 543,
	545, 549, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 491, 257, 258, 259, 260, 535, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 358, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 557, 531,
	556, 558, 559, 555, 560, 561, 542, 454, 0, 495,
	553, 552, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 520, 500, 501, 502, 452, 503, 498, 499,
	521, 493, 517, 518, 477, 496, 504, 516, 505, 519,
	522, 523, 562, 563, 511, 564, 508, 524, 515, 514,
	506, 494, 525, 526, 480, 479, 509, 510, 497, 307,
	489, 0, 338, 339, 340, 360, 324, 0, 211, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 1132,
	0, 0, 0, 450, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 481, 0, 0, 299, 253, 0,
	0, 0, 0, 536, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 475, 513,
	512, 462, 471, 0, 0, 195, 463, 0, 470, 464,
	468, 467, 465, 466, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 447, 0, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 444, 445,
	0, 0, 0, 0, 490, 0, 446, 0, 0, 453,
	472, 473, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	469, 488, 492, 207, 550, 486, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 551, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	0, 0, 330, 0, 0, 534, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 487, 0, 289, 271,
	547, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 1133, 1134, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 532,
	267, 0, 0, 546, 527, 529, 530, 533, 537, 538,
	539, 540, 541, 543, 545, 549, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 491, 257, 258, 259, 260,
	535, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 358, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 557, 531, 556, 558, 559, 555, 560, 561,
	542, 454, 0, 495, 553, 552, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 520, 500, 501, 502,
	452, 503, 498, 499, 521, 493, 517, 518, 477, 496,
	504, 516, 505, 519, 522, 523, 562, 563, 511, 564,
	508, 524, 515, 514, 506, 494, 525, 526, 480, 479,
	509, 510, 497, 307, 489, 0, 338, 339, 340, 360,
	324, 0, 211, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 481, 0,
	0, 299, 253, 0, 0, 0, 0, 536, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 475, 513, 512, 462, 471, 0, 0, 195,
	463, 0, 470, 464, 468, 467, 465, 466, 0, 528,
	0, 0, 0, 0, 0, 0, 434, 447, 0, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 444, 445, 0, 0, 0, 0, 490, 0,
	446, 0, 0, 453, 472, 473, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 469, 488, 492, 207, 550, 486,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 551, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 0, 0, 330, 0, 0, 534,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	487, 0, 289, 271, 547, 435, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 532, 267, 0, 0, 546, 527, 529,
	530, 533, 537, 538, 539, 540, 541, 543, 545, 549,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 491,
	257, 258, 259, 260, 535, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 358, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 557, 531, 556, 558,
	559, 555, 560, 561, 542, 454, 0, 495, 553, 552,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	520, 500, 501, 502, 452, 503, 498, 499, 521, 493,
	517, 518, 477, 496, 504, 516, 505, 519, 522, 523,
	562, 563, 511, 564, 508, 524, 515, 514, 506, 494,
	525, 526, 480, 479, 509, 510, 497, 307, 489, 0,
	338, 339, 340, 360, 324, 0, 211, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 481, 0, 0, 299, 253, 0, 0, 0,
	0, 536, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 0, 0, 475, 513, 512, 462,
	471, 0, 0, 195, 463, 0, 470, 464, 468, 467,
	465, 466, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 447, 0, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 444, 445, 0, 0,
	0, 0, 490, 0, 446, 0, 0, 453, 472, 473,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 469, 488,
	492, 207, 550, 486, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 551,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 0, 0,
	330, 0, 0, 534, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 487, 0, 289, 271, 547, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 532, 267, 0,
	0, 546, 527, 529, 530, 533, 537, 538, 539, 540,
	541, 543, 545, 549, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 491, 257, 258, 259, 260, 535, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	358, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	557, 531, 556, 558, 559, 555, 560, 561, 542, 454,
	0, 495, 553, 552, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 520, 500, 501, 502, 452, 503,
	498, 499, 521, 493, 517, 518, 477, 496, 504, 516,
	505, 519, 522, 523, 562, 563, 511, 564, 508, 524,
	515, 514, 506, 494, 525, 526, 480, 479, 509, 510,
	497, 0, 0, 0, 338, 339, 340, 360, 324, 0,
	211, 130, 307, 37, 120, 100, 0, 0, 0, 0,
	0, 0, 0, 269, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	299, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 359, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 350, 257,
	258, 259, 260, 371, 373, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 358, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 38, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 101, 281, 219, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 0, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 307, 0, 0, 338,
	339, 340, 360, 324, 0, 211, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 889, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 299, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 877, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 1740, 1742, 1743, 1744, 1745, 1746,
	1747, 0, 1751, 1748, 1749, 1750, 266, 0, 1735, 1736,
	1737, 1738, 875, 1721, 1741, 0, 1722, 265, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1739,
	277, 243, 278, 230, 255, 254, 256, 900, 902, 904,
	906, 909, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 1734, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 341, 0,
	0, 0, 0, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 350, 257, 258, 259, 260, 224, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 358,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 899, 240,
	0, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	307, 0, 0, 338, 339, 340, 360, 324, 0, 211,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 299, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 2191, 2194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 359, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2195, 330, 0, 0, 0, 2188, 0, 2187,
	303, 2189, 2192, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 2193, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 341, 0, 0, 0, 0, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 350, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 358, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 307, 0, 0, 338, 339, 340,
	360, 324, 0, 211, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1392, 0, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 1393, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 779, 780, 781, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 359, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 341, 0, 0, 0,
	0, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	350, 257, 258, 259, 260, 224, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 358, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 0, 281,
	219, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 0, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 307, 0,
	0, 338, 339, 340, 360, 324, 0, 211, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 659, 0, 239,
	0, 0, 0, 0, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 667, 668,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 643, 328, 190, 642, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	359, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 657,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 658, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 661, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 358, 0, 0, 0, 0, 669, 664, 665, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 130, 307, 0, 338, 339, 340, 360, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 89, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	1414, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 359, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 358, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 101, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 130, 307, 0,
	338, 339, 340, 360, 324, 0, 211, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 89, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 1405, 0, 138, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	359, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 358, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 101, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 130, 307, 0, 338, 339, 340, 360, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 89, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 359, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 358, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 101, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 360, 324, 0, 211, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 667, 668, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 643, 328, 190, 642, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 359,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	358, 0, 0, 0, 0, 669, 664, 665, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 360, 324, 0,
	211, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	1030, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 1028, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 359, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 358, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 360, 324, 0, 211, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 1024, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 1028, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 359, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 358, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 360, 324, 0, 211, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2716, 0, 138, 513,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 359, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 358, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 360,
	324, 0, 211, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 1028, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 359, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 358, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 360, 324, 0, 211, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 1028,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2295, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 359,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	358, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 360, 324, 0,
	211, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	1837, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 1028, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 359, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 358, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 360, 324, 0, 211, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2781, 0, 138, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 359, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 358, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 360, 324, 0, 211, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 513,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 359, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 358, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 360,
	324, 0, 211, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2685,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 359, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 358, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 360, 324, 0, 211, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2359, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 359,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	358, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 360, 324, 0,
	211, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 359, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 2608, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 358, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 360, 324, 0, 211, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 359, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 2428, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 358, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 360, 324, 0, 211, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 359, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 358, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 360,
	324, 0, 211, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 359, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 358, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 360, 324, 0, 211, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 359,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	358, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 360, 324, 0,
	211, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 2158, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 359, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 358, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 360, 324, 0, 211, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 1028, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 359, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 358, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 360, 324, 0, 211, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 359, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 358, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 360,
	324, 0, 211, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 1846, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 359, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 358, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 0, 0, 0,
	338, 339, 340, 360, 324, 307, 211, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 359, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 358, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 360, 324, 0, 211, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 1028, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 359, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	1309, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 358, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 360,
	324, 0, 211, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 359, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 358, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 360, 324, 0, 211, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 359,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 389, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 390, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	358, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 360, 324, 0,
	211, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 359, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 358, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 360, 324, 0, 211, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 359, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 358, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 360, 324, 0, 211, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 359, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 358, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 360,
	324, 0, 211, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 359, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 429, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 358, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 360, 324, 0, 211, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 702, 703, 1818,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 359,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	358, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 299, 253, 180, 0,
	240, 0, 281, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 702, 703,
	1818, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 339, 340, 360, 324, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	359, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 358, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 180,
	0, 240, 0, 281, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 702,
	703, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 339, 340, 360, 324,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 359, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 889, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 889, 228, 199, 272, 222, 332,
	235, 0, 358, 0, 0, 877, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 609, 0, 897, 901, 903, 905, 907, 908, 910,
	0, 914, 911, 912, 913, 0, 0, 892, 893, 894,
	895, 875, 876, 898, 0, 878, 0, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 890, 896, 0,
	180, 0, 240, 0, 281, 219, 900, 902, 904, 906,
	909, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 889, 0, 877, 0, 0, 0, 867,
	0, 0, 891, 0, 0, 0, 338, 339, 340, 360,
	324, 0, 211, 897, 901, 903, 905, 907, 908, 910,
	0, 914, 911, 912, 913, 0, 0, 892, 893, 894,
	895, 875, 876, 898, 0, 878, 0, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 890, 896, 0,
	0, 0, 0, 0, 0, 0, 900, 902, 904, 906,
	909, 0, 643, 0, 0, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 891, 0, 877, 0, 0, 0, 0, 628,
	0, 779, 780, 781, 778, 0, 0, 610, 0, 0,
	0, 0, 897, 901, 903, 905, 907, 908, 910, 0,
	914, 911, 912, 913, 1906, 1907, 892, 893, 894, 895,
	875, 876, 898, 633, 878, 0, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 890, 896, 0, 0,
	0, 0, 0, 0, 0, 900, 902, 904, 906, 909,
	2385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 891, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 636, 0, 0, 0, 0,
	0, 2367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 899, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2385, 0, 0, 0, 0, 0, 0,
	632, 637, 0, 0, 0, 0, 0, 0, 0, 2458,
	0, 0, 0, 0, 0, 0, 0, 624, 0, 626,
	640, 0, 0, 0, 623, 621, 620, 1767, 625, 612,
	613, 614, 615, 616, 0, 638, 639, 0, 0, 0,
	0, 0, 1186, 0, 0, 0, 1183, 634, 635, 0,
	1185, 1182, 1184, 1188, 1189, 0, 0, 899, 1187, 0,
	0, 0, 0, 0, 2367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 408, 415,
	405, 0, 0, 0, 629, 0, 0, 2371, 0, 0,
	412, 413, 0, 414, 418, 0, 0, 400, 2375, 0,
	0, 0, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2364, 0,
	0, 0, 2366, 2368, 2370, 0, 2372, 2373, 2374, 2376,
	2377, 2378, 2380, 2381, 2382, 2383, 427, 0, 0, 428,
	0, 0, 0, 409, 0, 408, 415, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 899, 412, 413, 0,
	414, 418, 0, 0, 400, 0, 0, 0, 2386, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1193, 1194, 1195, 1196, 1197, 1198, 1191, 1192, 0,
	2371, 0, 0, 427, 0, 2384, 428, 0, 0, 0,
	0, 2375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2363, 0, 0, 0, 0, 0, 0, 0,
	0, 2364, 0, 0, 0, 2366, 2368, 2370, 0, 2372,
	2373, 2374, 2376, 2377, 2378, 2380, 2381, 2382, 2383, 0,
	0, 2379, 0, 0, 0, 0, 0, 0, 2369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 403, 402, 0, 0, 0, 0, 0, 0, 407,
	0, 2386, 0, 0, 0, 0, 409, 0, 408, 415,
	405, 411, 0, 0, 0, 0, 0, 0, 426, 0,
	412, 413, 0, 414, 418, 404, 0, 400, 0, 395,
	0, 0, 0, 0, 0, 0, 0, 423, 2384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2363, 0, 401, 403, 402,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 2379, 426, 0, 0, 0, 0,
	0, 2369, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 410,
	416, 0, 417, 419, 0, 0, 420, 421, 422, 0,
	0, 424, 425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 410, 416, 0, 417,
	419, 0, 0, 420, 421, 422, 0, 0, 424, 425,
	401, 403, 402, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 410,
	416, 0, 417, 419, 0, 0, 420, 421, 422, 0,
	0, 424, 425,
}

var yyPact = [...]int{
	341, -1000, -295, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -203, 26564, 26564, -1000,
	-1000, 1875, -1000, 26060, 9921, 27068, 185, 179, 27068, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 414, -1000, 25556, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 375, 29776, 27572, 7894, 27068, -271,
	-1000, 2246, -136, -1000, -1000, -1000, -1000, -1000, -1000, 964,
	443, 25052, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29325, 75,
	443, 536, 544, 769, 769, 11937, 2246, 259, 208, -1000,
	736, 341, 28918, 1582, 355, 27068, -1000, 994, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 355, -1000, -1000, -1000, 2246, 2246, -1000, 27068, 27068,
	9, 1150, -1000, 272, 237, 247, 984, -1000, -1000, -1000,
	-1000, -1000, 2285, -1000, 27068, 27068, 1992, 27068, -1000, 1400,
	296, 29843, 2170, 893, 465, 2040, -1000, -1000, 2001, -1000,
	127, 162, 135, 422, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 89, -1000, 2220, -1000, -1000, 118, -1000, -1000, 113,
	-1000, -1000, -1000, -66, -1000, -1000, -1000, -1000, -1000, -141,
	-1000, -1000, 597, 1222, 7894, -1000, 1442, -1000, 3226, -1000,
	-1000, -1000, -1000, 5364, 9406, 9406, 9406, 9406, -1000, -1000,
	1828, 7894, 2000, 1820, 1995, -1000, -1000, -1000, -1000, 981,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1581, 8902, -1000, 1993, 1989, 1988, 1987, 1986,
	1985, 1984, 1983, 1982, 1980, 1728, 1972, 1580, 1552, 1956,
	1952, 1950, 1551, 1728, 1728, 1945, 1942, 1938, 1932, 1931,
	1925, 1899, 1898, 1896, 1894, 1887, 1886, 1885, 1873, 1871,
	1870, 1865, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 29294, -1000, 977, 935, -1000,
	1863, 2164, 2235, 1760, 2268, 2212, 2210, 2208, 2203, 1387,
	-1000, -1000, 27068, 27068, 374, 374, 374, 374, 391, 374,
	409, 405, 404, -1000, -1000, -1000, -1000, -1000, -1000, 442,
	-1000, -1000, -1000, -1000, 823, 27068, -1000, 1794, 1085, 2227,
	337, 336, 223, -1000, 1124, 1124, 1124, 1085, 266, 311,
	2235, 2235, -65, -104, 1085, 1085, -104, 1085, 86, -1000,
	-1000, -1000, 1124, 300, 1124, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2206, 2198, 375, 375, 27068, 375, 383, -1000,
	-146, -1000, -1000, 562, -1000, 495, -1000, 1400, 294, 293,
	843, 1123, -1000, 1118, 27068, 27068, 27068, 1118, 1118, 14964,
	14460, -1000, 2235, 1760, -1000, 1705, 1673, 1693, 1760, 375,
	375, 375, 375, 375, 375, 375, 27068, 27068, 6876, 6876,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 281, -1000,
	-1000, -1000, -1000, -1000, 2165, 260, 1859, -1000, 27068, 250,
	2235, 2164, 2235, -1000, -1000, 973, 1380, 1550, -1000, -1000,
	272, 1120, -1000, 706, -1000, -1000, -1000, -1000, 27068, 242,
	-1000, -1000, 1522, 1857, -1000, 372, 759, 859, -1000, 98,
	29986, 22524, 1400, 22524, 27068, -1000, -1000, -1000, -1000, -1000,
	-1000, -70, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 106, -1000, 7894, 7894, 7894,
	7894, 7894, -1000, 380, 8398, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9406, 9406, 9406, 9406, 9406, 9406, 9406, 9406,
	9406, 9406, 9406, 9406, 1827, 1162, 9406, 9406, 9406, 9406,
	1673, 2064, 838, 176, -1000, -1000, -1000, -1000, -1000, 1114,
	1222, 7894, 7894, 7894, 27068, -1000, 29441, 7894, 7894, 1262,
	7894, 2199, 3851, 27068, 7894, -1000, 1676, 1675, -1000, -1000,
	1324, 7894, -1000, -1000, 7894, 9406, 7894, -1000, -1000, -1000,
	96, 2199, 2199, 7894, 7894, 2199, 2199, 2199, 1173, 2199,
	2199, 2199, 2199, 2199, 2199, 2199, 2199, 27068, 2147, 88,
	-1000, -1000, -1000, 1772, -1000, 1790, 1790, 1772, 1772, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1815, 1842,
	-1000, -1000, 1789, 1789, 1789, 1772, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1808, 1808, 1814, 1808, 27068, 2235, -271, 6372, -1000,
	-276, 2164, 7894, -1000, -1000, 7894, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1549, 2188, -1000, 1834, 972, 27068,
	1172, 27068, 22524, 1400, 1424, 27068, 374, 374, 374, 383,
	-1000, 27068, 823, 2178, 27068, 2275, 9406, 9406, 24548, 1124,
	1085, -1000, 27068, -1000, -1000, -1000, 1124, 27068, 1124, 2275,
	1124, -1000, -1000, -1000, 1085, 1085, -1000, -1000, -1000, -1000,
	1124, 1124, -1000, -1000, -78, 2275, 2275, -63, -1000, 27068,
	27068, 374, 27068, -1000, 27068, -1000, -1000, 27068, 27068, 2195,
	-1000, 22524, 21012, -1000, -105, 526, 503, 506, -1000, -1000,
	370, 363, 13956, 323, 22524, 4859, -1000, -1000, 1118, 1118,
	1118, 4859, 4859, 956, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2164, -1000, -1000, -1000, -1000, -1000, 27068, 22524, 1400,
	27068, 27068, 27068, 28918, -1000, 1832, 821, -1000, -1000, 11433,
	955, 821, 1547, 27068, 1545, 2036, 2137, -1000, 1831, 12947,
	27068, -1000, -1000, -272, -1000, 12442, 27068, 2164, -1000, 2164,
	2859, -1000, 2225, -1000, 272, 189, -1000, -1000, -1000, -1000,
	-1000, -1000, 940, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 815, -1000, 27068, -1000, -1000, 98, 22524, 1070,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 139, -1000, -1000,
	164, -1000, 390, 41, 1111, -1000, -1000, 72, 161, 425,
	1222, -1000, 1178, 1178, 1175, -1000, 388, -1000, -1000, -1000,
	-1000, 1828, -1000, -1000, -1000, 1509, 1479, -1000, 1165, 1165,
	976, 976, 976, 976, 976, 1258, 1258, -1000, -1000, -1000,
	5364, 1827, 9406, 9406, 9406, 9406, 358, 358, 3192, 3329,
	-1000, 7894, 1127, -1000, 7894, 1471, 2052, 689, 931, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1674,
	597, 1670, 1467, 2283, 1668, 7894, -1000, -1000, 1408, 7390,
	-1000, -1000, -1000, 1667, 924, 1666, -1000, -1000, -1000, 1642,
	651, 1641, 1523, 1638, 809, 7894, 7894, 1109, 1098, 7894,
	7894, 7894, 7894, 1636, 7894, 7894, 7894, 7894, 7894, 7894,
	7894, 7894, -1000, 7894, 82, -1000, -1000, -1000, -1000, 1372,
	-1000, 1355, -1000, -1000, -1000, 1540, 1540, -1000, 1351, -1000,
	-1000, -1000, -1000, 1348, -1000, -1000, 1337, -1000, -1000, -1000,
	-1000, 1093, -1000, 1222, -1000, 1535, -1000, 916, 797, -1000,
	1418, -1000, -1000, 27068, 10425, 27068, 1794, 2169, 77, -1000,
	804, -1000, 41, 666, 1882, 2136, 27068, 27068, 27068, 24044,
	-1000, 1824, 1079, -1000, -1000, 7894, -1000, -1000, 1754, 1400,
	27068, 2275, -1000, -1000, -1000, 28918, -1000, -1000, -1000, 27068,
	2275, 2275, 1085, 1124, 1124, -1000, -1000, 1124, -1000, 922,
	-1000, 27068, -1000, -1000, 1794, 76, 144, 804, 2160, 703,
	-1000, -1000, -1000, -1000, 28076, 28076, 13452, 28076, -1000, 1122,
	-1000, -1000, 512, 491, 550, -1000, -1000, 381, -1000, -1000,
	666, -1000, -1000, -1000, 1823, 1149, -1000, -1000, 1820, -1000,
	4859, 4859, 4859, -1000, -1000, 16980, -1000, -1000, 791, 666,
	2033, 766, -1000, 766, -1000, 10425, 2275, 6876, -1000, 21012,
	-1000, -1000, 23532, -1000, 23028, 2275, -280, 842, -116, -1000,
	2153, -272, 27068, 27068, 1066, 151, -1000, 1063, -1000, 622,
	-1000, 1816, -1000, 1048, 2127, 652, -1000, 1147, -1000, -1000,
	-1000, 921, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 0, -1000, -1000, 27068, 1522, 1041, 1070,
	691, -1000, 378, 912, 898, -1000, 22524, 120, 22524, -1000,
	22524, -1000, -1000, 252, -1000, 27068, 2158, -1000, -1000, -1000,
	1501, -299, -1000, -1000, -1000, -1000, -1000, 1033, -1000, 358,
	358, 3192, 2405, -1000, 9406, -1000, 9406, 2022, 1068, -1000,
	7894, 1211, 29204, -1000, 1050, 15972, 27068, -1000, -1000, 7894,
	7894, -1000, 2016, -1000, 7894, 7894, 1376, -1000, 27068, -1000,
	-1000, -1000, 15972, -1000, 9406, -1000, 7894, 802, 2002, -52,
	-52, 1990, 1973, 1953, 1025, -52, 1923, 1880, 1812, 1757,
	1752, 1743, 1738, 1698, 1222, -1000, -1000, 1635, 1634, 1024,
	-1000, 1020, 1632, 1017, 1016, 6372, -1000, -116, 7894, 7894,
	7894, 2132, -1000, -1000, 102, 1631, 721, -1000, -1000, -1000,
	29393, 1790, 1772, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1815, -1000, -1000, 1789, 1789, 1789, 1772, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1808, 1808,
	1814, 1808, -1000, 2174, -1000, -51, 1096, 373, 22524, 292,
	-1000, 2032, 243, -1000, 2136, -1000, 758, -1000, 1803, 1802,
	1796, 27068, 782, -1000, 882, 341, -1000, 27068, 1222, -1000,
	1400, -1000, 1085, -1000, -1000, 2275, 995, -1000, -1000, 2275,
	1085, 1085, 1124, 27068, -1000, 2173, -51, 1096, 1146, 373,
	27068, 21012, 21012, 21012, 21012, -1000, 2087, 2083, -1000, 2081,
	2072, 2113, 27068, 21012, 1794, -1000, 28497, -1000, -1000, -1000,
	-1000, -1000, 1673, 1014, 2105, 533, 7894, -1000, -1000, -1000,
	481, 22524, 1518, 323, -1000, -1000, -1000, -1000, -1000, 27068,
	27068, 1629, 2273, -1000, 705, -1000, -1000, 878, -1000, 2273,
	-1000, 1332, 1517, -27, -16, 1205, 622, 652, 1013, -1000,
	151, 27068, 2107, 1793, -1000, 27068, -272, 6372, 251, -272,
	27068, 6372, 2859, 1327, -1000, -1000, -1000, 2281, 22524, 1400,
	1045, 1065, -1000, 110, -1000, 138, 364, 1515, -1000, 403,
	94, -1000, 1132, 1501, -1000, -1000, -1000, 9406, -1000, -1000,
	-1000, -1000, 1222, 7894, 1628, -1000, 509, 509, 1626, -1000,
	1772, 1790, -1000, 1772, 1789, 1772, 509, 509, 1625, -1000,
	1253, 1690, -1000, 1672, 1640, 7894, -1000, 1623, 2737, 933,
	-157, -52, -1000, 1788, -1000, -52, -52, -52, -52, -1000,
	-52, -52, -52, -52, -52, -52, -52, -52, -1000, -1000,
	-1000, 1503, -1000, -1000, -1000, 1320, -1000, 1318, -1000, -27,
	1222, 1222, -1000, -1000, 2126, 1502, 393, 10425, 2134, 256,
	1263, -1000, -1000, 22020, -1000, 353, -1000, -1000, -1000, 446,
	149, 1316, 350, -1000, 1594, 27068, -1000, -1000, -1000, -1000,
	-1000, 1096, 1096, 1096, 10929, 10929, 10929, 355, 777, 871,
	21012, 27068, -1000, 20508, 1621, -1000, 666, 2275, -1000, 27068,
	-1000, 2275, 2275, 1085, -1000, 256, 1263, 22020, 7894, 353,
	816, -1000, 1119, 2012, 2025, 2012, -1000, -1000, -1000, -1000,
	2066, -1000, 2057, -1000, -1000, 816, -1000, -1000, -1000, -1000,
	-1000, 533, -1000, 2176, 530, 530, 530, 1619, -1000, 691,
	1618, -1000, -1000, -1000, -1000, -1000, 2271, 2267, 21516, 2271,
	-1000, -280, -278, -7, 2264, 2263, 2292, 256, 27068, 249,
	-1000, -272, 27068, -1000, -1000, 1617, 687, -272, -1000, 622,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1400, -1000, 132,
	-1000, -1000, -1000, -1000, -1000, -1000, 22, -1000, 27068, -1000,
	1501, 1499, 93, -1000, 1222, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7894, -1000, -1000, -1000, 1584, -1000, -1000, 7894, 1610, 1498,
	-1000, 354, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1604, 1603, -278, -1000, -1000,
	-1000, 29393, -1000, 1454, -1000, -1000, 1497, 32, -1000, -1000,
	-1000, 1495, 1493, 1311, -1000, -1000, 1381, 914, 52, -1000,
	-1000, -1000, -1000, -1000, -1000, 1787, 15972, 16476, 1483, 1602,
	679, -1000, -1000, -1000, 29393, 761, -1000, 27068, 1194, 530,
	374, 530, 1192, 1786, -1000, -1000, 1600, 1599, 28076, 21012,
	20508, 685, -1000, 867, -1000, -1000, -1000, 2275, -1000, -1000,
	2275, -1000, -1000, 32, 1222, -1000, 2247, 27068, 6372, -1000,
	-1000, 7894, 1784, -1000, 7894, -1000, -1000, -1000, -1000, -1000,
	1779, 2131, -1000, -1000, -1000, -1000, -1000, -1000, 7894, 7894,
	-1000, -1000, -1000, -280, 1480, -1000, -1000, 2262, 1460, 1405,
	27068, -1000, -1000, -272, -1000, 622, 1008, -1000, 622, 666,
	-1000, -1000, 151, -1000, -1000, -1000, 1570, -1000, 1519, -52,
	-1000, 2247, -1000, 2261, -1000, -1000, -280, -198, -1000, -1000,
	-1000, -1000, 238, -1000, -1000, 150, -1000, -1000, 1379, 389,
	-1000, 18996, -1000, -1000, -1000, -1000, -1000, 29697, 10929, 1347,
	-1000, -1000, 27068, 27068, -1000, 27068, 27068, 374, 7894, 106,
	29697, 2275, 685, 867, -1000, -1000, 997, -1000, -1000, -1000,
	2235, -1000, -1000, 1222, 27068, 1222, 20004, -1000, 2260, 2259,
	1222, 597, -283, -1000, 1458, -11, -1000, -1000, 652, 622,
	-1000, -63, -1000, -1000, -1000, 46, 7894, -283, 27068, 362,
	1457, -1000, -1000, 148, -1000, -1000, 1003, -1000, 1772, 7894,
	351, 29584, -1000, 1096, 1096, 711, 1096, 1096, 1096, 1096,
	271, 268, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 1771, -1000, -1000, 1347,
	-1000, -1000, 1223, 9406, -1000, -1000, 1456, 16476, 534, 538,
	1770, -1000, 233, 2289, -1000, 1191, 1190, -1000, 27068, -1000,
	1759, 1745, 192, 1756, -1000, 1755, 1750, 27068, 1425, -1000,
	-63, 351, 2247, -1000, -1000, 1001, 989, -1000, -1000, -1000,
	-1000, -1000, 1749, -1000, 2257, -285, -44, -26, 1598, -1000,
	3347, -1000, -1000, -1000, 597, -1000, 2172, -1000, -1000, 21,
	-1000, -1000, -1000, 18996, 2161, 1393, 201, 2255, 29697, -1000,
	1295, 1292, 1096, 1096, 1277, 1452, 1451, 1450, 1096, 1096,
	1264, 1449, 28497, 1260, 1251, 1248, 1378, 1447, 508, 1374,
	1334, 1297, 27068, 1748, 1416, -1000, -1000, 3192, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1246,
	1733, -106, -1000, -1000, 1730, 18996, 226, 226, 18996, 18996,
	18996, 1729, 410, -1000, 201, 2235, -1000, -1000, 19500, 27068,
	1405, -1000, 1446, 382, -41, -26, -1000, 2250, -12, 2249,
	2244, -1000, -1000, 4355, -274, -40, 299, 1441, -1000, 186,
	-1000, -1000, 2161, -1000, 2243, 236, -1000, -1000, -1000, 15972,
	15972, -1000, -1000, -1000, -1000, 1439, 1431, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 287,
	27068, 985, -1000, 1116, 1597, 7894, 1728, -188, 18996, 969,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 965, 952, 928,
	18996, -1000, -1000, -1000, 228, -1000, -1000, -1000, -1000, 913,
	-1000, -1000, -1000, 1726, 1245, -7, -25, 2239, -1000, 1405,
	2238, 1405, 1405, 1166, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1096, 1417, 173, -1000, -1000, -1000, 18492, 215, 246,
	232, -1000, 377, -1000, -1000, -1000, -1000, -1000, -1000, 284,
	892, -1000, 1416, 1414, -1000, 1259, -1000, 2021, -1000, 84,
	840, -1000, -1000, -1000, -1000, 834, -1000, -1000, 27068, 2193,
	15468, -33, -1000, -1000, -1000, 1406, -1000, 1405, -1000, -1000,
	4355, 1244, -1000, 1424, -1000, 27068, 209, 1231, 9406, 1720,
	9406, 1719, 221, 1718, -1000, -1000, -1000, -1000, -1000, 410,
	-1000, 2014, 2007, 2280, -1000, -1000, -1000, -1000, 186, 186,
	186, 186, 104, -1000, -1000, 27068, -1000, 827, -1000, -1000,
	-1000, 866, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 795,
	1712, 2237, -1000, 2589, 27068, 2265, 27068, 1710, 1094, 9406,
	-1000, -1000, 2282, -1000, 2287, 490, 490, -1000, 539, -1000,
	1060, -1000, 17988, 27068, -1000, -1000, 348, 217, -1000, 771,
	-1000, 747, 17484, 1230, 1630, -1000, -1000, -1000, 1288, 240,
	-1000, 27068, 5868, -1000, 563, 726, -1000, 1589, 205, -1000,
	-1000, -1000, 708, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1222, 27068, -1000, 348, 2059, -1000, 1227, -1000, -1000, -1000,
	2591, 468, -1000, -1000, 2591, 207, -1000, 343, 1709, -1000,
	-1000, 653, -1000, 1470, 519, 7894, -1000, 207, 29697, -1000,
	7894, 642, -1000, 29697, 640, -1000, -1000,
}

var yyPgo = [...]int{
	0, 132, 2730, 217, 147, 145, 215, 2728, 2727, 2185,
	2182, 2725, 2724, 2722, 2719, 2717, 2702, 2701, 2695, 2694,
	2693, 2692, 2691, 2685, 2683, 2682, 2681, 2680, 2679, 2678,
	2677, 211, 2675, 2674, 2673, 2672, 2670, 2665, 2664, 2663,
	2662, 2661, 2660, 2659, 2656, 2655, 2654, 2653, 2652, 2651,
	2650, 2647, 2646, 2642, 2639, 2637, 2636, 139, 2635, 2179,
	2634, 2633, 2632, 2630, 2629, 2627, 190, 2626, 2625, 2624,
	2623, 2622, 2621, 2620, 2619, 2615, 2614, 2613, 2612, 2611,
	2609, 160, 2608, 2607, 149, 2606, 2605, 2604, 2603, 209,
	192, 63, 2602, 60, 121, 174, 226, 179, 225, 223,
	167, 134, 73, 2600, 2194, 2599, 155, 199, 119, 30,
	2598, 141, 2596, 118, 59, 50, 220, 114, 55, 129,
	100, 2595, 195, 66, 90, 95, 2594, 2593, 219, 168,
	2592, 104, 2591, 2590, 2588, 2587, 178, 106, 2586, 65,
	2580, 81, 36, 99, 29, 2579, 2578, 2577, 86, 2576,
	2575, 2574, 2572, 163, 2571, 120, 52, 2570, 2569, 2568,
	57, 2565, 34, 2562, 51, 2561, 2555, 2554, 2553, 64,
	2549, 2547, 15, 17, 19, 2546, 16, 1, 2545, 196,
	110, 92, 125, 2544, 412, 2541, 2540, 2539, 133, 2535,
	501, 2518, 2517, 2514, 2513, 11, 2512, 183, 56, 2508,
	85, 109, 2507, 54, 170, 177, 2505, 2504, 116, 61,
	94, 115, 2503, 2502, 79, 193, 20, 32, 0, 176,
	42, 2501, 2500, 2499, 216, 2496, 203, 175, 200, 137,
	230, 156, 2495, 2494, 48, 2493, 131, 83, 113, 9,
	2492, 164, 2491, 207, 158, 2490, 189, 2489, 135, 5,
	111, 2488, 2487, 31, 246, 2486, 2466, 2457, 142, 2456,
	2455, 70, 157, 2453, 2452, 2451, 27, 2450, 43, 25,
	2448, 105, 2447, 218, 181, 151, 108, 154, 152, 124,
	197, 201, 67, 130, 1144, 117, 91, 18, 2444, 198,
	2443, 205, 222, 2441, 171, 2440, 212, 372, 184, 2439,
	165, 10, 62, 37, 2437, 12, 2436, 88, 2435, 2434,
	22, 2433, 26, 2431, 2428, 2427, 2425, 4, 2424, 2421,
	2419, 3, 6, 2417, 2, 187, 53, 128, 2416, 127,
	162, 2415, 2414, 84, 2413, 2411, 2410, 238, 2408, 2407,
	2406, 2405, 2402, 2401, 2400, 2399, 2397, 69, 41, 2396,
	2395, 2394, 2393, 78, 112, 2377, 2376, 2370, 2369, 33,
	166, 2367, 21, 2366, 24, 28, 35, 2365, 101, 2362,
	13, 159, 2361, 2360, 14, 2359, 2357, 7, 8, 2356,
	2355, 68, 2354, 47, 40, 76, 82, 2353, 23, 71,
	123, 2350, 2347, 214, 208, 185, 2346, 143, 206, 227,
	2345, 191, 2344, 2343, 2342, 2340, 2339, 2338, 1142, 2337,
	2336, 204, 58, 103, 98, 2334, 2332, 2330, 72, 138,
	107, 97, 182, 2326, 169, 2324, 2320, 96, 2319, 2317,
	2316, 2315, 2314, 2313, 2311, 202, 213, 2309,
}

//line mysql_sql.y:8429
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 433, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 87, 431, 431, 431, 432, 432, 85,
	85, 85, 74, 86, 380, 380, 379, 379, 378, 378,
	334, 334, 377, 377, 377, 376, 376, 376, 375, 375,
	374, 374, 373, 373, 371, 371, 372, 370, 369, 369,
	369, 367, 367, 367, 363, 363, 365, 364, 364, 366,
	358, 358, 361, 361, 359, 359, 359, 359, 362, 357,
	357, 357, 356, 356, 73, 73, 73, 286, 286, 72,
	72, 300, 300, 300, 300, 300, 298, 298, 298, 298,
	298, 298, 297, 297, 296, 296, 301, 301, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 67, 67,
	67, 67, 70, 70, 70, 71, 295, 295, 295, 68,
	69, 69, 285, 285, 290, 290, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 294, 294,
	294, 292, 292, 291, 291, 293, 293, 61, 61, 61,
	64, 63, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 62, 62, 62, 62, 62, 62, 58, 58, 58,
	58, 58, 57, 57, 59, 59, 283, 283, 282, 77,
	77, 77, 77, 77, 77, 77, 76, 76, 79, 79,
	78, 80, 66, 66, 66, 66, 66, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 404, 404, 404, 406,
	406, 222, 223, 434, 225, 221, 221, 221, 400, 400,
	401, 402, 403, 403, 403, 75, 7, 7, 7, 7,
	56, 54, 60, 417, 417, 55, 424, 424, 337, 337,
	236, 236, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 340, 341,
	232, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 38, 37, 37, 37, 272, 272, 36, 435,
	435, 205, 205, 45, 46, 47, 48, 49, 50, 35,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 53,
	53, 352, 352, 437, 437, 437, 51, 52, 336, 336,
	336, 43, 42, 41, 40, 40, 34, 34, 33, 33,
	39, 229, 229, 229, 231, 231, 227, 436, 436, 312,
	312, 230, 230, 32, 32, 32, 228, 228, 204, 226,
	226, 226, 8, 8, 6, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 18, 20, 280, 280, 277, 19,
	14, 13, 16, 12, 15, 17, 5, 5, 5, 5,
	9, 9, 10, 101, 101, 143, 143, 412, 412, 408,
	408, 409, 409, 409, 410, 410, 411, 411, 81, 346,
	346, 346, 346, 346, 346, 4, 123, 123, 124, 124,
	345, 345, 345, 345, 345, 345, 345, 430, 430, 389,
	389, 389, 390, 122, 122, 117, 117, 347, 347, 250,
	391, 391, 355, 355, 354, 354, 353, 353, 120, 120,
	121, 121, 104, 104, 90, 90, 360, 360, 360, 360,
	368, 368, 333, 333, 169, 169, 198, 198, 199, 199,
	94, 94, 95, 95, 95, 95, 95, 95, 397, 397,
	399, 399, 398, 119, 119, 115, 115, 116, 116, 116,
	114, 114, 113, 112, 112, 111, 109, 109, 109, 110,
	110, 110, 97, 97, 97, 96, 96, 96, 96, 96,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 98, 98, 405, 405, 405, 338, 338, 338,
	343, 343, 181, 181, 182, 182, 180, 180, 99, 99,
	100, 100, 100, 100, 179, 179, 178, 102, 102, 108,
	107, 107, 103, 103, 103, 103, 189, 189, 188, 188,
	188, 188, 84, 88, 88, 89, 127, 127, 187, 186,
	186, 186, 126, 126, 125, 125, 118, 118, 106, 106,
	106, 106, 185, 105, 183, 429, 429, 428, 428, 427,
	425, 425, 425, 426, 426, 426, 426, 382, 382, 382,
	382, 382, 214, 214, 214, 220, 220, 213, 213, 213,
	213, 213, 224, 219, 219, 215, 215, 216, 216, 216,
	3, 3, 3, 3, 24, 24, 24, 24, 24, 24,
	30, 135, 136, 29, 128, 128, 129, 129, 130, 130,
	131, 132, 132, 132, 134, 133, 28, 21, 413, 416,
	414, 414, 418, 418, 418, 419, 419, 419, 420, 420,
	22, 415, 421, 421, 421, 281, 281, 278, 279, 279,
	276, 275, 275, 275, 423, 423, 422, 422, 422, 217,
	217, 23, 271, 271, 273, 274, 274, 265, 265, 265,
	265, 27, 269, 269, 270, 270, 270, 270, 270, 266,
	266, 268, 268, 264, 264, 264, 264, 264, 26, 263,
	263, 261, 261, 259, 259, 260, 260, 258, 258, 258,
	262, 262, 25, 25, 25, 92, 91, 91, 91, 201,
	201, 200, 200, 93, 339, 339, 302, 302, 303, 303,
	303, 306, 306, 318, 318, 319, 319, 317, 317, 324,
	324, 323, 323, 322, 322, 321, 321, 320, 320, 320,
	320, 315, 315, 314, 314, 304, 304, 304, 304, 304,
	305, 305, 305, 313, 313, 316, 316, 160, 160, 161,
	161, 161, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 387, 387, 388, 163, 163, 163, 167, 167, 167,
	167, 167, 167, 162, 162, 164, 164, 144, 144, 142,
	142, 137, 137, 138, 138, 139, 139, 140, 140, 141,
	141, 141, 141, 141, 141, 288, 288, 385, 385, 386,
	386, 381, 381, 381, 384, 384, 384, 384, 384, 383,
	383, 145, 196, 196, 196, 218, 218, 218, 195, 195,
	195, 159, 159, 158, 158, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	287, 287, 233, 233, 234, 234, 176, 175, 175, 175,
	175, 175, 173, 174, 172, 172, 172, 172, 172, 171,
	171, 170, 170, 170, 267, 267, 168, 168, 166, 166,
	166, 165, 165, 165, 325, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 242,
	242, 247, 247, 396, 396, 395, 146, 146, 146, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 155, 155,
	155, 310, 310, 310, 310, 310, 311, 311, 311, 308,
	308, 309, 309, 251, 252, 252, 344, 344, 307, 307,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 351, 351, 351,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 407, 407, 407, 392, 392, 392, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 193, 193, 193,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 253, 253, 254, 254, 348, 348, 348, 348,
	348, 348, 349, 349, 350, 350, 350, 350, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 240, 190, 190,
	190, 255, 248, 248, 249, 249, 243, 243, 243, 243,
	243, 243, 243, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 244, 244, 246, 246, 257,
	257, 257, 256, 256, 256, 256, 256, 256, 256, 157,
	157, 157, 157, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 148, 148, 148, 148, 152, 152,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 153, 153, 153, 153, 151, 151,
	151, 151, 151, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 82,
	83, 83, 150, 197, 197, 326, 326, 329, 329, 327,
	327, 328, 330, 330, 330, 331, 331, 331, 332, 332,
	332, 335, 335, 203, 203, 203, 210, 210, 202, 202,
	211, 211, 212, 212, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 4, 0, 1, 1, 0, 1, 6,
	8, 10, 11, 2, 0, 2, 1, 3, 3, 3,
	0, 2, 1, 3, 5, 0, 2, 3, 1, 3,
	1, 1, 1, 3, 1, 1, 1, 1, 0, 3,
	3, 0, 3, 3, 0, 1, 3, 0, 1, 3,
	0, 2, 1, 2, 3, 4, 3, 3, 1, 0,
	1, 1, 0, 1, 8, 5, 7, 0, 3, 8,
	5, 1, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 4, 1, 3, 1, 2,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 2,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 4, 6, 1, 1, 1, 2,
	4, 6, 1, 4, 1, 3, 3, 4, 4, 4,
	3, 3, 2, 4, 4, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	2, 2, 0, 1, 4, 2, 4, 1, 5, 3,
	2, 1, 2, 2, 4, 4, 5, 2, 1, 3,
	4, 4, 1, 2, 9, 7, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	7, 7, 7, 0, 4, 7, 0, 3, 0, 2,
	0, 1, 1, 1, 1, 4, 2, 2, 3, 3,
	4, 5, 3, 4, 4, 2, 2, 2, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 2, 5, 5, 0, 2, 7, 0,
	1, 0, 1, 5, 3, 2, 4, 4, 4, 4,
	1, 1, 1, 3, 2, 3, 1, 1, 1, 6,
	8, 0, 1, 1, 1, 1, 5, 5, 0, 1,
	1, 3, 3, 3, 6, 7, 4, 4, 7, 8,
	3, 0, 2, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 1, 3, 1, 1,
	3, 5, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 6, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 0, 4, 1, 3,
	3, 1, 5, 6, 5, 5, 3, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 4, 3, 4, 5, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 3, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	2, 3, 1, 4, 3, 0, 1, 1, 2, 5,
	2, 2, 2, 0, 2, 3, 3, 0, 1, 3,
	1, 3, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 12, 1, 3, 0, 1, 1, 3,
	1, 1, 2, 4, 1, 1, 7, 7, 1, 4,
	1, 1, 3, 4, 3, 0, 1, 1, 0, 2,
	7, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 1, 3, 2, 0, 1, 3, 4, 3, 1,
	1, 4, 1, 3, 1, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 2, 5, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 11, 9, 11, 2, 2, 4, 5, 1,
	3, 0, 3, 5, 0, 1, 0, 6, 0, 3,
	5, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	5, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	4, 1, 3, 3, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 1, 7,
	7, 7, 7, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 5, 6, 4, 1,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 4, 6, 6, 1, 1, 1, 1, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	5, 0, 1, 3, 0, 1, 0, 2, 0, 6,
	8, 6, 5, 5, 6, 6, 6, 6, 5, 6,
	6, 6, 6, 6, 6, 6, 6, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -433, -2, -1, -3, -85, -4, -81, -5, -6,
	-8, -65, -76, -78, -80, -79, -31, -7, -75, -57,
	-58, -61, -67, -72, -73, -74, -86, -82, -83, -84,
	-94, -87, -24, -23, -22, -21, 397, 12, 442, -9,
	-10, -397, -11, 232, -221, -222, -223, -225, -434, -32,
	-33, -34, -40, -41, -42, -43, -51, -52, -53, -35,
	-36, -37, -38, -45, -46, -47, -48, -49, -50, -39,
	-55, -54, -60, -56, 208, -59, 61, -62, -63, -64,
	-68, -69, -70, -71, 328, 334, 387, 524, 525, 46,
	-95, -97, 526, -25, -26, -27, -28, -29, -30, 204,
	14, 475, -12, -15, -13, -16, -14, -19, -20, -18,
	-17, 227, 226, 37, 290, 291, 292, 332, 225, 205,
	13, 136, 137, 139, 140, 30, -96, 67, 206, -98,
	10, 528, 435, 527, -104, 38, -142, -218, 70, -206,
	-209, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 445, 308, 309,
	472, 244, 268, 358, 271, 278, 136, 155, 149, 177,
	169, 144, 248, 283, 249, 77, 139, 428, 87, 408,
	384, 142, 263, 265, 267, 270, 250, 165, 160, 262,
	246, 524, 158, 251, 39, 252, 182, 253, 254, 477,
	404, 307, 410, 275, 382, 159, 405, 266, 407, 184,
	188, 420, 334, 153, 154, 412, 422, 181, 224, 42,
	474, 236, 423, 186, 180, 176, 431, 279, 277, 179,
	152, 175, 247, 50, 190, 189, 191, 378, 379, 380,
	381, 255, 256, 322, 419, 172, 161, 312, 145, 22,
	426, 231, 409, 335, 257, 272, 280, 185, 187, 238,
	243, 476, 386, 242, 276, 424, 157, 235, 264, 230,
	427, 146, 328, 337, 258, 140, 269, 421, 430, 49,
	350, 151, 143, 221, 137, 240, 245, 11, 259, 260,
	261, 282, 281, 273, 173, 237, 178, 163, 150, 174,
	138, 239, 429, 351, 522, 310, 367, 171, 168, 241,
	214, 425, 411, 141, 371, 352, 166, 284, 518, 519,
	520, 323, 306, 285, 286, 164, 228, 403, 287, 289,
	377, 299, 353, 385, 359, 354, 197, 293, 414, 183,
	521, -104, -59, -10, -9, -96, -97, -142, 212, -226,
	23, 382, -66, 383, 208, 67, -218, -5, -4, -81,
	-57, -94, -224, -218, 290, 290, -224, 212, -218, 242,
	366, -337, 217, -297, -271, 243, -296, -273, -299, -274,
	31, 204, 206, 205, 239, 14, 332, 213, 12, 10,
	333, 225, 24, 25, 27, 13, 334, 336, 28, 337,
	340, 341, 342, 41, 345, 346, 232, 70, 73, 250,
	-136, -218, -249, -243, 94, 233, -245, -238, -239, -241,
	-377, -371, -237, 67, 120, 121, 128, 95, -240, -325,
	35, 97, 482, 131, 443, -191, -192, -193, -194, -218,
	-372, -370, 73, 78, 81, 84, 85, 83, 82, 162,
	80, 74, 132, 133, -97, 70, -392, 490, -207, 511,
	510, 46, -342, -350, 211, -348, 167, 228, 163, 12,
	126, 377, 164, 487, 507, 445, 491, 514, 484, 485,
	479, 480, 481, 483, 492, 494, 506, -351, 502, 512,
	513, 500, 72, 71, 505, 504, 493, 488, 489, 495,
	478, 486, 496, 497, 503, 508, 509, 316, 87, 317,
	318, 435, 311, 319, 217, 382, 55, 320, 321, 322,
	323, 324, 442, 325, 56, 326, 315, 232, 367, 327,
	166, 183, 447, 446, 448, 439, 436, 434, 437, 438,
	440, 441, 498, 499, 501, -293, -291, -218, -88, -89,
	516, -113, -114, -184, 19, 6, 7, 8, 9, -431,
	384, 476, 293, 329, 214, 308, 367, 242, -265, -263,
	-339, 287, 283, 222, 221, 88, 435, 211, 343, -408,
	-409, 201, 202, 203, -399, 468, -398, -218, 318, 26,
	212, 329, 414, 415, 416, 417, 418, -44, -352, -336,
	411, 410, -230, 409, 402, 413, 404, 309, 204, 469,
	-203, 353, 385, 238, 432, 433, 330, 386, 420, 421,
	405, 87, 170, 167, 214, 308, 435, 367, -408, 141,
	138, -284, 141, 93, 146, 145, -284, 242, 366, 40,
	-290, 377, -289, -291, 420, 421, 431, 71, 72, 419,
	-203, 87, -114, -184, -113, -95, -97, -84, -397, 308,
	367, 242, 213, 212, 214, 435, 290, 329, -338, -405,
	31, -343, 198, 199, 200, 32, 33, -1, -219, -216,
	-209, 70, 71, 72, 73, -120, 234, -142, 134, -120,
	-114, -113, -114, -142, -195, -218, 384, 103, -66, -66,
	383, -400, -401, -402, -404, 208, 383, 382, 134, 15,
	-224, -224, 65, -142, -273, 242, -297, -271, 35, 64,
	135, 215, 135, 64, 67, 330, 308, 367, 331, 435,
	212, 343, 214, 242, 344, 308, 367, 212, 214, 435,
	242, 308, 212, 214, 367, 242, 344, 402, 403, 214,
	26, 335, 338, 339, 403, -356, 431, 135, 93, 90,
	91, 92, -243, 110, -256, 103, 104, 105, 106, 107,
	108, 109, 117, 116, 127, 120, 121, 122, 123, 124,
	125, 126, 118, 119, 113, 94, 111, 115, 112, 96,
	-97, -243, -249, 46, -241, -241, -241, -241, -325, -247,
	-243, 67, 67, 67, 134, 73, -243, 67, 67, 67,
	67, 67, 67, 67, 67, -349, 67, 67, -253, -254,
	67, 67, 73, 73, 67, 67, 67, 73, -254, -254,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 135, -148, -152,
	-149, -151, -150, -154, -153, 167, 168, 131, 171, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 30,
	183, 228, 163, 164, 165, 166, 184, 149, 169, 473,
	192, 150, 193, 151, 194, 152, 195, 153, 154, 196,
	155, 158, 159, 160, 157, 134, -114, 135, 67, -90,
	38, -116, 21, -98, -97, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 78, -135, -218, -128, -218, -261,
	217, -261, -261, -261, 213, -261, 212, 212, 212, -410,
	148, 135, -399, -119, 67, -229, 111, 115, 23, 240,
	240, 277, -435, -436, 15, 113, -227, -436, -227, -229,
	-437, 213, 412, 42, 241, 240, -115, -116, -115, 406,
	403, -312, 407, 408, -230, -229, -229, -230, -229, 212,
	214, 435, -435, 240, -435, 30, 30, -337, -337, -204,
	-218, -337, -411, 216, 424, 475, 144, 145, 146, -273,
	242, 242, 135, 103, 23, -292, 103, 114, -291, -291,
	-291, -292, -292, -162, 40, -217, 131, -218, 73, -162,
	40, -115, -98, -97, 68, 68, 68, -337, -337, -337,
	-337, -337, -337, -337, -224, -128, -99, -100, 122, -243,
	-218, -99, 38, 403, 38, -345, -123, -94, 309, 67,
	67, -218, -346, 46, -94, 67, 30, -115, -90, -116,
	134, 78, 73, -66, 68, 135, -403, 84, 85, -406,
	181, 173, -218, -77, 73, -3, -4, -5, -6, -31,
	-57, -94, -373, -371, 67, 31, 376, 64, 15, -298,
	212, 435, 329, 238, 214, 308, -296, -280, -277, -275,
	-217, -273, -276, -275, -301, -195, 403, -91, 388, 289,
	-243, -243, -243, -243, -243, 83, 94, 306, 84, 85,
	-238, -257, 31, 285, 286, -239, -239, -239, -239, -239,
	-239, -239, -239, -239, -239, -239, -239, -246, -255, -325,
	67, 113, 111, 115, 112, 96, -241, -241, -239, -239,
	68, 135, -396, -395, 98, -243, -243, -243, -218, -393,
	-394, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 320, 315, 321, 319, 311, 327, 322, 323,
	166, 466, 467, 460, 461, 462, 463, 464, 465, -248,
	-249, -248, -243, -393, -248, -190, 32, 31, -243, -407,
	304, 303, 305, -117, -218, -248, 68, 68, 68, 78,
	-249, -248, -239, -248, -394, -190, -190, -249, -249, -190,
	-190, -190, -190, 122, -190, -190, -190, -190, -190, -190,
	-190, -190, -291, 40, -332, 351, 350, -326, -328, 67,
	-327, 67, -327, -326, -326, 67, 67, -329, 67, -329,
	-329, -326, -330, 67, -330, -331, 67, -330, -218, -115,
	-89, -354, -353, -243, 40, 517, -90, -243, -112, -111,
	-243, -432, 73, 34, 67, 134, -142, 94, -413, -218,
	-281, -278, -275, -271, -216, -218, -261, -261, -261, -411,
	-398, 34, -118, -218, -180, 16, -241, -241, -275, 242,
	-435, -229, -205, -204, -231, -436, -226, -231, -180, -436,
	-229, -229, -231, -227, 403, -180, -180, -312, -228, -218,
	-228, -261, -205, -205, -142, -413, 30, -281, -107, -102,
	-106, -103, -108, -183, -185, -105, 67, -142, -97, -218,
	425, 426, 142, 145, 144, 31, 376, -295, 376, 31,
	-271, -289, -285, 73, 377, -276, -294, 64, 131, -353,
	-292, -292, -292, -294, -294, 130, -90, -413, -280, -271,
	-218, -144, -142, -144, -219, 67, -179, 135, -178, 15,
	-213, -218, 34, 73, 134, -179, 73, -144, 73, -430,
	64, 46, 30, 67, -122, 68, -117, -121, -218, -347,
	-250, -391, 516, -122, 68, -389, -390, -117, -90, -90,
	-211, -212, -202, -208, -215, -216, -209, 209, 31, 93,
	34, 36, 316, 348, 96, 131, 20, 97, 167, 130,
	318, 443, 317, 204, 59, 446, 448, 447, 436, 434,
	369, 373, 375, 372, 435, 402, 40, 14, 37, 226,
	32, 33, 124, 206, 100, 101, 229, 35, 227, 85,
	44, 23, 62, 15, 17, 18, 319, 368, 217, 216,
	113, 388, 213, 57, 12, 133, 38, 110, 370, 53,
	89, 45, 55, 111, 115, 21, 437, 438, 41, 387,
	396, 471, 233, 126, 320, 321, 60, 94, 376, 83,
	43, 64, 90, 19, 58, 112, 207, 442, 56, 374,
	324, 326, 336, 468, 325, 211, 413, 10, 315, 444,
	30, 225, 54, 212, 99, 215, 84, 232, 6, 88,
	13, 61, 65, 439, 440, 441, 46, 98, 16, 327,
	475, 389, 390, 391, 392, 393, 394, 395, 192, 193,
	194, 195, 196, 274, 220, 218, 222, 223, 516, 517,
	198, 199, 303, 305, 170, 201, 202, 203, 234, 148,
	7, 355, 356, 357, 360, 361, 362, 363, 364, 365,
	366, 525, 397, 398, 399, 400, 401, 415, 416, 417,
	418, 210, 314, 23, -66, -401, 134, 135, -118, -298,
	-279, -276, -300, 122, 70, -286, 135, 475, 529, 71,
	215, -423, -422, 368, 68, 135, -357, 216, 442, 73,
	530, 197, 83, 306, 84, 85, -325, -249, -246, -241,
	-241, -239, -239, -244, 229, -244, 93, -243, -242, -395,
	100, -243, 34, 68, 135, 65, 134, 68, 68, 15,
	15, 68, -243, 68, 15, 15, -243, 68, 134, 68,
	68, 68, 65, 68, 135, 68, 135, -249, -243, 68,
	68, -243, -243, -243, -249, 68, -243, -243, -243, -243,
	-243, -243, -243, -243, -243, -335, 352, 78, 78, -197,
	73, -197, 78, 78, 78, 135, 68, 73, 135, 22,
	135, -109, 36, 37, -136, -129, -130, -131, -132, -148,
	-195, 168, 171, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 228, 163, 164, 165, 166, 184,
	149, 169, 150, 151, 152, 153, 154, 155, 158, 159,
	160, 157, -218, -119, 35, -416, 355, -424, 135, 40,
	-422, -264, 65, -259, -260, -258, -262, 40, -142, -142,
	-142, 15, -101, -143, -218, 67, 68, 135, -243, -272,
	65, -274, -205, -180, -219, -142, -218, -180, -180, -229,
	-231, -231, -227, 134, -204, -119, -417, 355, 314, -424,
	30, -186, -187, -188, -189, 53, 57, 59, 54, 55,
	56, 60, 30, 135, -214, -220, 34, -215, 73, -216,
	-209, -214, -97, -102, -107, -214, 67, 143, 146, 146,
	145, 215, 67, 103, -294, -294, -294, 40, -217, 64,
	135, -129, -180, -100, -102, -218, 73, -218, 122, -180,
	-169, 519, 38, -360, 407, 39, -347, -389, -124, -413,
	68, 135, -123, 309, 68, 135, 135, 67, 68, 46,
	135, 103, 134, 384, -218, -371, 68, -300, 135, 215,
	134, 134, -277, 334, -217, -279, 20, 475, -195, 38,
	-201, -200, 73, 530, 68, -244, -244, 93, -241, -238,
	68, 101, -243, 99, -146, -148, 350, 351, -147, -153,
	131, 167, 228, 166, 165, 163, 350, 351, -162, -218,
	-243, -243, 68, -243, -243, 15, -218, -162, -239, -243,
	-114, 68, -307, 398, -307, 68, 68, 68, 68, -307,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 135, 68, 68, 68, 135, 68, 135, -353, -360,
	-243, -243, -111, -110, 43, 342, 68, 135, -148, 34,
	-419, 409, 357, -210, 103, -236, -235, 310, 41, -340,
	377, 363, 364, -278, 242, 64, 298, 299, 300, 301,
	-258, -203, 130, 253, 67, 67, 67, -142, -101, -218,
	15, 135, -412, 134, -1, -218, -271, -229, -180, -436,
	-180, -229, -229, -231, -218, 34, -419, -210, 103, -236,
	-283, -282, -195, -106, -106, -106, -106, 53, 53, 53,
	58, 53, 58, 53, -188, -283, -108, -119, -220, 68,
	-429, -428, -427, -425, 61, 216, 62, -248, 146, -279,
	-232, 73, -285, -142, -142, 68, -182, 17, 134, -182,
	78, 73, -368, 394, 389, 391, 89, 68, 135, -123,
	-117, 46, 67, -218, -250, -355, -354, 46, -94, -347,
	-390, -353, -211, -208, -216, -209, 78, 15, -276, -271,
	122, 122, 70, 335, -286, 73, 356, 73, 212, 531,
	135, 103, -201, -238, -243, 68, -155, 154, 153, -155,
	68, -326, -327, -326, -329, -326, -155, -155, 68, 68,
	23, 68, 68, 68, -243, 68, 68, 135, -344, 444,
	-307, 67, -307, -307, -307, -307, -307, -307, -307, -307,
	-307, -307, -307, -307, 73, 78, 78, -368, 44, 45,
	73, 210, -131, 40, -94, -420, 77, -414, 73, -218,
	-421, 77, 358, 133, 312, 40, 359, 360, 374, 307,
	78, 78, 365, -415, 70, -142, -210, -210, -210, -137,
	-138, -139, -145, -140, -195, -234, -141, 220, 218, 222,
	-386, 88, 223, 274, 89, 213, -137, -137, -120, 65,
	134, -102, -143, -218, 122, 68, -180, -218, -180, -180,
	-229, -94, -420, -414, -243, -421, -180, 135, 103, -126,
	-125, 64, 65, -127, 64, -125, 53, 53, -180, -427,
	-426, 23, -386, -386, -386, 68, 68, -181, 18, 20,
	122, -181, -169, -333, 518, -364, -366, 389, 20, 20,
	13, -94, -413, 46, -94, -347, -124, 68, -347, -271,
	-286, 377, -142, -200, 73, 531, -243, 68, -243, 68,
	73, -252, -251, 234, 68, 68, -333, -133, -148, -237,
	73, -418, 368, 73, 73, 78, 40, 78, 133, 361,
	-341, 67, -162, -164, -217, 131, 73, 68, 135, -148,
	-141, -218, 89, -385, -386, -261, -385, 89, 67, 68,
	68, -214, -102, -218, -180, -412, 134, -180, -180, -418,
	-114, -282, -353, -243, 67, -243, 67, 53, 19, 17,
	-243, -249, -169, 73, 20, 73, -362, 73, -389, -347,
	68, -123, 68, 68, -307, -114, 20, -169, 474, 20,
	475, 311, 40, 78, 40, 362, -266, -268, -195, 67,
	-160, -161, -177, 348, 244, -262, 248, 77, 249, 384,
	250, 213, 252, 253, 254, 224, 255, 256, 257, 377,
	258, 259, 260, 261, 331, 6, 294, -139, -159, -158,
	-156, 83, 94, 40, 348, -157, 77, 130, 267, 245,
	268, -176, -233, 64, 354, 218, 88, 89, 336, -234,
	-381, -383, -218, -383, -218, -381, -381, -261, -243, -92,
	-91, -160, -180, -180, -115, -118, -382, -218, 218, 20,
	20, -198, 520, 73, 391, -93, -358, -312, -309, -308,
	-311, 395, 276, 401, -249, -198, -134, -218, 73, 356,
	73, 311, 68, 135, -326, -243, -302, 234, 135, -177,
	-210, -210, -203, 130, -210, -210, -210, -210, 251, 251,
	-210, -210, -210, -210, -210, -210, -210, -210, -210, -210,
	-210, -210, -210, -210, 67, -156, 83, -239, 73, -164,
	-165, 40, 266, 262, -166, 40, 246, 247, -168, 67,
	274, 13, 89, 89, -142, 67, 65, 284, 67, 67,
	67, -383, 68, -93, -302, -114, 68, 68, 135, 67,
	20, -334, 521, -367, 394, -361, -359, 389, 390, 391,
	392, 68, -310, 96, 361, 365, -243, 34, 377, -269,
	-268, -109, 68, -303, 283, 20, -177, 78, 78, -210,
	-210, 78, 73, 73, 73, -210, -210, 78, 73, -220,
	78, 78, 78, 78, 40, 73, -167, 40, 262, 266,
	263, 264, 265, 78, 40, 78, 40, 78, 40, -218,
	67, -387, -388, 73, 78, 67, -348, -267, 67, -266,
	-384, 298, 299, 300, 302, 301, -384, -266, -266, -266,
	67, -288, -287, 275, 94, -303, -115, -218, 218, -199,
	-218, -362, 73, -369, 216, -365, -366, 393, -359, 20,
	391, 20, 20, -310, 516, 399, 400, 399, 400, 73,
	-270, 224, 77, 475, 296, 297, -109, 20, -304, 276,
	277, -305, -316, 279, -162, -162, 73, 73, -163, 245,
	-144, 68, 135, 103, 68, -243, -253, -171, -170, 471,
	-266, 68, 68, 68, 68, -266, 275, 68, 135, -376,
	67, 78, -364, -363, -365, 20, -362, 20, -362, -362,
	93, -210, 73, 295, -195, 67, -314, 280, 67, -312,
	67, -312, 89, 299, 246, 247, 68, -388, 73, 68,
	-175, -173, -174, 64, 405, 272, 273, 68, -269, -269,
	-269, -269, 68, -218, -380, 30, 68, -375, -374, -196,
	-370, -218, 394, 395, 73, -362, -310, 78, -216, -301,
	-306, 281, 78, -239, 67, -239, 67, -313, 278, 67,
	-287, -174, 64, -173, 64, 14, 13, -176, -379, -378,
	-377, 68, 135, 134, 68, -318, 67, 20, 68, -301,
	68, -301, 67, 103, -239, -172, 269, 270, 30, 145,
	-172, 135, 103, -374, -218, -319, -317, 234, -305, 68,
	68, 68, -301, 78, 68, 83, 40, 271, -378, 40,
	-243, 134, 68, 135, 70, -315, 282, 68, -218, -317,
	-320, 46, 78, -324, -321, 67, -177, 236, 113, -324,
	-177, -323, -322, 281, 237, 67, 68, 135, 70, 233,
	67, -249, -322, -321, -249, 68, 68,
}

var yyDef = [...]int{
	32, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 670, 671, 672, 673, 0, 0, 0, 436,
	437, 0, 414, 0, 0, 0, 0, 0, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 329, 330, 331,
	332, 333, 334, 335, 336, 337, 338, 339, 340, 341,
	286, 287, 288, 289, 0, 232, 228, 207, 208, 209,
	168, 169, 170, 171, 298, 0, 0, 0, 0, 0,
	520, -2, 34, 674, 675, 676, 677, 678, 679, -2,
	449, 0, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 275, 276, 277, 271, 272, 274, 273, -2, 0,
	449, 221, 0, 212, 212, 0, 540, 0, 0, 555,
	577, 32, 0, 0, 498, 0, 503, 879, 915, 916,
	917, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 498, 233, 438, 439, 540, 540, 412, 0, 257,
	0, 1546, 261, 0, 0, 0, 409, 252, 253, 254,
	255, 256, 0, 662, 0, 0, 248, 0, 227, 1605,
	0, 0, 0, 0, 0, 0, 112, 732, 114, 734,
	118, 125, 0, 0, 130, 131, 134, 135, 136, 137,
	138, 0, 142, 0, 144, 147, 0, 149, 150, 0,
	153, 154, 155, 0, 165, 166, 167, 735, 736, -2,
	43, 682, 1289, 1184, 0, 1191, 1192, 1203, 1214, 987,
	988, 989, 990, 0, 0, 0, 0, 0, 997, 998,
	0, 1011, 1697, 0, 0, 1005, 1006, 1007, 1008, 52,
	64, 65, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 0, 1157, 974, 915, 0, 1705, 0, 1725,
	1724, 0, 0, 1142, 0, 1132, 0, -2, -2, 0,
	0, 1672, -2, 1702, 1721, 1729, 1706, 1728, 1699, 1700,
	1694, 1695, 1696, 1698, 1707, 1709, 1720, 0, 1716, 1726,
	1727, 0, 66, 67, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1148, -2, 1150,
	1151, 1153, 1154, 1155, 1156, -2, 1159, 1160, 1161, -2,
	-2, 1164, 1165, 1166, 1167, 1168, 1169, 1172, -2, 1174,
	-2, -2, 1144, 1145, 1146, 1147, 1136, 1137, 1138, 1139,
	1140, 1141, -2, -2, -2, 0, 205, 203, 540, 613,
	0, -2, 0, 0, 0, 560, 563, 566, 569, 0,
	35, 36, 0, 0, 761, 761, 761, 761, 0, 761,
	0, 0, 0, 738, 739, 740, 759, 760, 785, 454,
	450, 451, 452, 453, 528, 0, 530, 533, 391, 343,
	0, 0, 0, 355, 349, 0, 0, 391, 0, 0,
	535, 535, 0, 401, 391, 391, -2, 391, 0, 360,
	361, 362, 349, 0, 349, 366, 367, 368, 379, 380,
	402, 1313, 0, 0, 298, 298, 0, 298, 456, 222,
	223, 211, 213, 0, 217, 0, 210, 1605, 0, 0,
	179, 1672, 184, 0, 1553, 1619, 1568, 0, 0, 1586,
	0, -2, 535, 0, 541, 0, 540, 0, 0, 298,
	298, 298, 298, 298, 298, 298, 0, 0, 0, 0,
	578, 579, 574, 575, 576, 580, 581, 3, 0, 663,
	664, 667, 668, 669, 0, 466, 0, 502, 0, 0,
	535, -2, 0, 413, 258, 918, 0, 0, 262, 263,
	0, 0, 278, 0, 281, 266, 267, 268, 0, 0,
	250, 251, 0, 0, 229, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 0, 122, 119, 126, 129, 139,
	146, 0, 158, 160, 163, 120, 127, 132, 133, 140,
	161, 121, 123, 124, 128, 162, 164, 141, 145, 159,
	143, 148, 151, 152, 157, 0, 93, 0, 0, 0,
	0, 0, 1190, 0, 0, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1184, 0, 0, 993, 994, 995, 996, 999, 0,
	1012, 0, 0, 0, 0, 1243, 0, 1182, 1182, 0,
	1182, 1178, 0, 0, 1182, 1121, 0, 0, 1123, 1133,
	0, 0, 1126, 1127, 1182, 0, 1182, 1131, 1117, 1118,
	0, 1178, 1178, 0, 0, 1178, 1178, 1178, 1178, 1178,
	1178, 1178, 1178, 1178, 1178, 1178, 1178, 0, 1290, 1308,
	1245, 1246, 1247, 1295, 1249, 1299, 1299, 1295, 1295, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 0, 0,
	1288, 1268, 1297, 1297, 1297, 1295, 1292, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1302, 1302, 1305, 1302, 0, 535, 0, 0, 523,
	0, 504, 0, 557, 559, 0, 561, 562, 564, 565,
	567, 568, 570, 571, 37, 0, 681, 0, 684, 0,
	0, 0, 0, 0, 0, 0, 761, 761, 761, 456,
	455, 0, 529, 0, 0, 586, 0, 0, 0, 349,
	391, 354, 351, 350, 397, 398, 394, 0, 394, 586,
	0, 373, 374, 375, 391, 391, 381, 536, 382, 383,
	394, 0, 399, 400, 0, 586, 586, 0, 390, 0,
	0, 761, 351, 364, 351, 1314, 1315, 0, 0, 0,
	408, 0, 0, 457, 0, 0, 215, 0, 220, 172,
	0, 0, 0, 0, 0, 0, 201, 202, 0, 0,
	0, 0, 0, 192, 195, 873, 874, 729, 730, 196,
	197, 504, 556, 558, 552, 553, 554, 0, 0, 0,
	0, 0, 0, 0, 434, 0, 594, 588, 590, 657,
	52, 594, 0, 0, 0, 477, 0, 471, 0, 0,
	0, 880, 458, 490, 460, 0, 479, 504, 526, 504,
	0, 259, 0, 264, 0, 0, 280, 282, 283, 284,
	269, 270, 410, 246, 247, 239, 240, 241, 242, 243,
	244, 245, 249, 62, 0, 230, 231, 0, 0, 0,
	106, 107, 108, 109, 110, 111, 113, 97, 426, 428,
	721, 733, 0, 724, 0, 116, 156, 89, 0, 0,
	1185, 1186, 1187, 1188, 1189, 1193, 0, 1195, 1197, 1199,
	1201, 0, 1219, -2, -2, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 1204, 1217, 1218,
	0, 0, 0, 0, 0, 0, 1215, 1215, 1210, 0,
	991, 0, 1009, 1013, 0, 0, 0, 0, 53, 1177,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 0,
	1183, 0, 1184, 0, 0, 0, 1179, 1180, 0, 0,
	1082, 1083, 1084, 0, 485, 0, 1143, 1122, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 1311, 1309, 1310, 1248, 1296, 0,
	1273, 0, 1274, 1275, 1276, 0, 0, 1269, 0, 1270,
	1271, 1272, 1264, 0, 1265, 1266, 0, 1267, 204, 612,
	614, 0, 494, 496, 497, 0, 524, 537, 542, 543,
	546, 33, 38, 0, 686, 0, 533, 0, 0, 698,
	296, 715, 0, 731, 753, -2, 0, 0, 0, 0,
	531, 0, 0, 626, 342, 0, 392, 393, 346, 1605,
	351, 586, 356, 352, 357, 0, 396, 358, 359, 0,
	586, 586, 391, 394, 394, 386, 387, 0, 403, 406,
	404, 0, 363, 365, 533, 293, 0, 296, 599, 0,
	600, 601, 597, 628, 652, 652, 0, 652, 632, 879,
	224, 225, 0, 0, 219, 173, 174, 0, 176, 177,
	178, 185, 180, 182, 0, 0, 186, 198, 199, 200,
	0, 0, 0, 190, 191, 0, 522, 424, 425, 429,
	0, 431, 877, 432, 433, 686, 586, 0, 595, 0,
	591, 658, 0, 660, 0, 586, 514, 0, 506, 465,
	0, 490, 479, 0, 0, 466, 483, 0, 500, 459,
	487, 0, 491, 0, 0, 464, 480, 0, 525, 527,
	919, 0, 1320, -2, 1322, -2, -2, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 0, 265, 279, 0, 0, 0, 0,
	100, 718, 0, 101, 105, 95, 0, 0, 0, 723,
	0, 720, 725, 0, 115, 0, 0, 90, 91, 776,
	781, 0, 1194, 1196, 1198, 1200, 1202, 0, 1205, 1215,
	1215, 1211, 0, 1206, 0, 1208, 0, 1185, 0, 1014,
	0, 0, 0, 1002, 0, 0, 0, 1070, 1071, 0,
	0, 1075, 0, 1077, 0, 0, 0, 1081, 0, 1120,
	1135, 1124, 0, 1128, 0, 1130, 0, 540, 0, 1048,
	1048, 0, 0, 0, 0, 1048, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 1244, 1312, 0, 0, 0,
	1293, 0, 0, 0, 0, 0, 615, 506, 0, 0,
	0, 549, 547, 548, 0, 0, 687, 688, 690, 691,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1538, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 685, 0, 762, 705, 1316, 300, 0, 0,
	717, 0, 0, 758, -2, 765, 0, 771, 0, 0,
	0, 0, 0, 443, 447, 32, 534, 0, 587, 344,
	0, 345, 391, 353, 395, 586, 879, 376, 377, 586,
	391, 391, 394, 0, 405, 0, 705, 1316, 0, 300,
	0, 0, 0, 0, 0, 619, 0, 0, 618, 0,
	0, 0, 0, 0, 533, 653, 0, 655, 656, 665,
	666, 630, -2, 0, 599, 635, 1182, 226, 214, 216,
	0, 0, 0, 0, 187, 188, 189, 193, 194, 0,
	0, 0, 584, 589, 596, 659, 661, 53, 592, 584,
	39, 0, 0, 510, 0, 0, 470, 476, 0, 468,
	466, 0, 0, 0, 499, 0, 490, 492, 0, 490,
	0, 0, 0, 0, 411, 63, 285, 0, 0, 0,
	0, 0, 427, 0, 722, 97, 0, 0, 117, 0,
	0, 779, 0, 781, 1181, 1207, 1209, 0, 1216, 1212,
	992, 1000, 1010, 0, 0, 1016, 1028, 1028, 0, 1019,
	1295, 1299, 1022, 1295, 1297, 1295, 1028, 1028, 0, 54,
	0, 0, 1076, 0, 0, 0, 486, 0, 0, 0,
	1046, 1048, 1052, 0, 1053, 1048, 1048, 1048, 1048, 1058,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1301, 1300,
	1286, 0, 1287, 1298, 1303, 0, 1306, 0, 495, 510,
	538, 539, 544, 545, 0, 0, 0, 0, 692, 0,
	708, 706, 707, 0, 1317, 712, 301, 302, 303, 304,
	0, 0, 0, 716, 0, 0, 754, 755, 756, 757,
	766, 1316, 1316, 1316, 881, 881, 881, 498, 0, -2,
	0, 0, 445, 0, 0, 627, 347, 586, 369, 0,
	384, 586, 586, 391, 407, 0, 708, 0, 0, 712,
	586, 236, 0, 622, 616, 0, 605, 620, 621, 608,
	0, 610, 0, 606, 607, 586, 598, 629, 654, 631,
	634, 636, 637, 643, 0, 0, 0, 0, 218, 175,
	0, 320, 181, 430, 878, 435, 582, 0, 0, 582,
	515, 514, 512, 77, 0, 0, 0, 467, 0, 0,
	484, 490, 0, 501, 488, 0, 493, 490, 463, 462,
	481, 482, 920, 1321, 1318, 1319, 260, 0, 719, 97,
	102, 103, 104, 98, 96, 726, 0, 728, 0, 777,
	781, 0, 0, 1213, 1015, 1001, 1017, 1029, 1030, 1018,
	1003, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1004, 1072,
	0, 1074, 1078, 1079, 0, 1125, 1129, 0, 0, 0,
	1051, 1044, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1294, 0, 0, 512, 550, 551,
	680, 0, 689, 0, 696, 697, 0, 0, 700, 701,
	710, 0, 0, 0, 306, 307, 0, 0, 0, 319,
	315, 316, 317, 297, 711, 0, 0, 0, 0, 0,
	882, 883, 885, 886, 0, 0, 888, 944, 0, 897,
	761, 897, 0, 0, 899, 900, 0, 0, 652, 0,
	0, 586, 444, 447, 448, 532, 348, 586, 388, 385,
	586, 290, 291, 0, 292, 295, 540, 0, 0, 602,
	623, 0, 0, 603, 0, 604, 609, 611, 235, 638,
	0, 0, 640, 641, 642, 633, 183, 572, 0, 0,
	593, 573, 40, 514, 0, 511, 78, 0, 0, 0,
	479, 472, 469, 490, 475, 474, 0, 489, 461, 99,
	94, 727, 466, 780, 782, 778, 0, 1080, 0, 1048,
	1047, 540, 1045, 0, 1304, 1307, 514, 0, 695, 693,
	709, 699, 0, 713, 714, 0, 308, 309, 0, 312,
	318, 0, 767, 768, 875, 876, 769, -2, 0, -2,
	887, 945, 909, 909, 898, 909, 909, 761, 0, 0,
	-2, 586, 586, -2, 441, 446, 0, 370, 389, 294,
	535, 237, 238, 624, 0, 617, 647, 644, 0, 0,
	583, 585, 516, 513, 0, 507, 509, 88, 478, 473,
	467, 80, 1073, 1119, 1050, 1041, 0, 516, 0, 0,
	0, 305, 310, 0, 313, 314, 0, 749, 1295, 0,
	786, -2, 829, 1316, 1316, 0, 1316, 1316, 1316, 1316,
	0, 0, 1316, 1316, 1316, 1316, 1316, 1316, 1316, 1316,
	1316, 1316, 1316, 1316, 1316, 1316, 0, 884, 911, -2,
	923, 925, 0, 0, 928, 929, 0, 0, 0, 0,
	966, 935, 0, 0, 939, 0, 1231, 1232, 0, 943,
	0, 901, 910, 0, 910, 0, 0, 909, 0, 773,
	80, 786, 540, 442, 234, 0, 0, 648, 650, 645,
	646, 41, 0, 79, 0, 50, 71, 0, 0, 1042,
	0, 1036, 1037, 1038, 1043, 505, 0, 694, 702, 0,
	704, 311, 742, 0, 546, 0, 788, 0, 770, 831,
	0, 0, 1316, 1316, 0, 0, 0, 0, 1316, 1316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 924, 926, 927, 930, 931,
	932, 971, 972, 973, 933, 968, 969, 970, 934, 0,
	0, 0, 1229, 1230, 964, 0, 0, 0, 0, 0,
	0, 0, 895, 775, 788, 535, 625, 639, 0, 0,
	0, 42, 0, 68, 0, 81, 82, 0, 0, 0,
	0, 1049, 1039, 0, 0, 0, 0, 0, 703, 741,
	750, 751, 546, 772, 0, 825, 830, 832, 833, 0,
	0, 836, 837, 838, 839, 0, 0, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 867, 868, 869,
	870, 871, 872, 852, 853, 854, 855, 856, 857, 864,
	0, 0, 861, 0, 0, 0, 1132, 959, 0, 0,
	902, 904, 905, 906, 907, 908, 903, 0, 0, 0,
	0, 894, 896, 940, 0, 774, 440, 649, 651, 0,
	518, 508, 51, 55, 0, 77, 74, 0, 83, 0,
	0, 0, 0, 0, 1031, 1032, 1034, 1033, 1035, 683,
	743, 1316, 0, 0, 747, 748, 752, 0, 813, 0,
	0, 819, 0, 826, 834, 835, 840, 841, 858, 0,
	0, 860, 0, 0, 967, 0, 938, 947, 960, 0,
	0, 742, 742, 742, 742, 0, 941, 517, 0, 44,
	0, 0, 72, 73, 75, 0, 84, 0, 86, 87,
	0, 0, 745, 0, 789, 0, 791, 0, 0, 0,
	0, 0, 823, 0, 865, 866, 859, 862, 863, 936,
	946, 948, 949, 0, 961, 962, 963, 965, 889, 890,
	891, 892, 0, 519, 783, 0, 56, 0, 58, 60,
	61, 912, 69, 70, 76, 85, 1040, 744, 746, 0,
	793, 0, 814, 0, 0, 0, 0, 0, 0, 0,
	937, 950, 0, 951, 0, 0, 0, 893, 45, 46,
	0, 57, 0, 0, 790, 787, 0, 825, 815, 0,
	817, 0, 0, 0, 0, 952, 954, 955, 0, 0,
	953, 0, 0, 59, 913, 0, 795, 0, 811, 816,
	818, 820, 0, 824, 822, 956, 958, 957, 47, 48,
	49, 0, 794, 0, 807, 792, 0, 821, 914, 796,
	-2, 0, 812, 797, -2, 0, 805, 0, 0, 798,
	806, 0, 801, 0, 0, 0, 800, 0, -2, 808,
	0, 0, 802, -2, 0, 810, 809,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 125, 117, 3,
	67, 68, 122, 120, 135, 121, 134, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 528,
	104, 103, 105, 3, 529, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 530, 116, 531, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 118, 119,
	124, 126, 129, 130, 131, 132, 133, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:621
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:627
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:661
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:666
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:672
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:692
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:698
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:705
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:713
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:719
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:728
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:737
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:747
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:783
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:794
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:800
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:804
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:810
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:817
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:825
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:829
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:843
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:847
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:851
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:864
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:870
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:879
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:890
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:894
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:900
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:904
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:910
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:914
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:920
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:944
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:963
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:967
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:971
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:980
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:987
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:995
		{
			yyVAL.str = ""
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1002
		{
			yyVAL.str = yyDollar[3].str
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1007
		{
			yyVAL.str = "\n"
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1014
		{
			yyVAL.str = yyDollar[3].str
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1019
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1023
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1047
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1051
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1057
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1063
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1081
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1098
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1121
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1125
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1129
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1134
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1138
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1144
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1157
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1168
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1181
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1185
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1195
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1208
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1221
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1227
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1233
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1240
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1248
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1284
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1288
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1294
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1301
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1310
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1314
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1320
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1324
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1328
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1332
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1336
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1340
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1344
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1348
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1352
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1356
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1360
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1364
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1368
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1372
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1376
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1380
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1384
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1388
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1392
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1396
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1400
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1404
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1408
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1412
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1416
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1420
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1424
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1428
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1432
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1436
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1440
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1444
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1448
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1452
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1456
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1460
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1464
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1468
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1472
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1476
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1480
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1484
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1488
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1492
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1496
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1500
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1504
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1508
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1512
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1516
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1528
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1535
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1542
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1551
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1581
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1595
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1601
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1605
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1612
		{
			yyVAL.str = yyDollar[3].str
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1618
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1622
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1628
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1636
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1645
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1653
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1661
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1684
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1707
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1714
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1721
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1729
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1736
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1743
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1760
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1766
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1770
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1777
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1783
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1787
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1798
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1804
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1847
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1851
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1859
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1864
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1895
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1902
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1912
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1919
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1930
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1941
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1945
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1963
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1969
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1973
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1979
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1983
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1989
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1995
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2005
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2019
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2023
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2027
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2031
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2039
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2047
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2057
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2098
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2102
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2108
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2114
		{
			yyVAL.str = yyDollar[1].str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2119
		{
			yyVAL.str = "true"
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2120
		{
			yyVAL.str = "false"
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2121
		{
			yyVAL.str = yyDollar[1].str
		}
	case 285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2126
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2139
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2150
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:       yyDollar[3].str,
				UpdateConfig: yyDollar[7].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2169
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2175
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2186
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2201
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2206
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2210
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2215
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2219
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2235
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2239
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2243
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2247
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2251
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2255
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2259
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2263
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2267
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2271
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2275
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2279
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2283
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2287
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2291
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2301
		{
			yyVAL.item = nil
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2306
		{
			yyVAL.item = nil
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2351
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].str)}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2364
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2375
		{
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2379
		{
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2384
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2393
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2399
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2405
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2411
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2417
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2423
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2440
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2470
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2477
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2487
		{
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2489
		{
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2498
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2517
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2521
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2525
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2549
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2559
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2571
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2575
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2581
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2593
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2607
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2616
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2620
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2625
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2629
		{
			yyVAL.str = yyDollar[2].str
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2635
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2648
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2652
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2658
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2663
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2667
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2673
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2677
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2686
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2690
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2694
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2700
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2704
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2724
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2733
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2742
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2746
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2752
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2761
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2770
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2780
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2786
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2792
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2798
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2815
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2820
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2827
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2843
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2856
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2867
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2871
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2877
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2882
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2889
		{
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2891
		{
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2894
		{
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2903
		{
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2907
		{
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2912
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2921
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2934
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2942
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2956
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2976
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2989
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2995
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2999
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3005
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3013
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3019
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3026
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3035
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3043
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3051
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3071
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3075
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3094
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3098
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3102
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3117
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3121
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3127
		{
			yyVAL.str = yyDollar[1].str
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3131
		{
			yyVAL.str = yyDollar[3].str
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3137
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3141
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3147
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3152
		{
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3163
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3167
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3179
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3183
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3189
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3193
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3199
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3203
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3212
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3225
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3239
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3257
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3289
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3293
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3306
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3310
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3315
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3319
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3326
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3331
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3338
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3352
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3356
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3364
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3370
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3377
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3386
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3390
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3396
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3408
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3413
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3417
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3423
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3427
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3431
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3440
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3446
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3452
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3456
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3462
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3467
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3471
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3475
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3480
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3484
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3488
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3494
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3498
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3502
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3516
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3520
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3530
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3540
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3550
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3562
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3570
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3578
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3587
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3595
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3603
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3611
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3619
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3627
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3635
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3643
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3651
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3661
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3672
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3690
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3694
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3720
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3729
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3735
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3739
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3745
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3749
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3753
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3757
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3762
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3770
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3776
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3784
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3792
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3802
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3808
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3817
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3826
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3835
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3845
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3849
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3859
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3863
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3867
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3871
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3877
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3887
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3891
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3897
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3907
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3913
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3919
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3923
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3927
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3937
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3943
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3947
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3953
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3957
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3963
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3967
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3977
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3990
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3996
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4002
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4015
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4033
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4037
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4043
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4053
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4057
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4061
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4066
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4070
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4074
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4078
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4087
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4091
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4095
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4099
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4104
		{
			yyVAL.str = ""
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4108
		{
			yyVAL.str = yyDollar[1].str
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4112
		{
			yyVAL.str = yyDollar[2].str
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4121
		{
			yyVAL.str = ""
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4125
		{
			yyVAL.str = yyDollar[1].str
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4129
		{
			yyVAL.str = yyDollar[2].str
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4133
		{
			yyVAL.str = yyDollar[1].str
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4137
		{
			yyVAL.str = yyDollar[2].str
		}
	case 680:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4173
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4183
		{
			yyVAL.str = yyDollar[1].str
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4189
		{
			yyVAL.str = yyDollar[1].str
		}
	case 683:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4196
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4208
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4213
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4219
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4226
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4230
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4236
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4242
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4246
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4250
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4256
		{
			yyVAL.str = yyDollar[1].str
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4262
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4268
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4291
		{
			yyVAL.str = yyDollar[1].str
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4297
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4307
		{
			yyVAL.str = yyDollar[1].str
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4311
		{
			yyVAL.str = yyDollar[1].str
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4317
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4324
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4330
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4338
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4344
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4351
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4359
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4365
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4374
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4386
		{
			yyVAL.str = yyDollar[1].str
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4391
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4397
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4511
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4515
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4521
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4531
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4535
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4541
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4551
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4555
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4559
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4568
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4581
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4587
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4600
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4609
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4613
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4619
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4636
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4640
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4644
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4648
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4654
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4677
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4699
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4703
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4707
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4711
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4715
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4721
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4725
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4731
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4736
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4741
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4745
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4749
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4753
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4757
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4763
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4777
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4781
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4790
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4796
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4800
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4806
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4810
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4814
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4819
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4823
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4829
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4841
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4850
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4863
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4870
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4888
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4899
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4903
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4908
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4912
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4919
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4930
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4934
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4943
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4953
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4957
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4964
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4975
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4988
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4994
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4998
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5004
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5013
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5027
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5033
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5037
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5043
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5050
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5059
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5063
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5068
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5072
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5077
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5081
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5086
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5090
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5100
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5104
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5115
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5123
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5131
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5139
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5150
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5159
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5169
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5179
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5183
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5188
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5192
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5201
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5207
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5211
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5215
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5225
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5229
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5233
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5237
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5241
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5245
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5253
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5257
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5261
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5265
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5269
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5273
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5277
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5281
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5285
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5289
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5293
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5297
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5301
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5305
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5309
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5313
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5317
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5321
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5325
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5329
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5333
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5340
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5344
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5350
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5355
		{
			yyVAL.str = ""
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5359
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5363
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5369
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5373
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5377
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5381
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5389
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5403
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5407
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5416
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5421
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5434
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5438
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5444
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5448
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5454
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5464
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5470
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5479
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5488
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5511
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5520
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5530
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5538
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5544
		{
			yyVAL.str = ""
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5548
		{
			yyVAL.str = yyDollar[1].str
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5558
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5564
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5570
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5584
		{
			yyVAL.str = ""
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5591
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5597
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5601
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5605
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5616
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5620
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5624
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5633
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5639
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5643
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5649
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5653
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5657
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5665
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5669
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5673
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5677
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5681
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5685
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5689
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5693
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5697
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5701
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5714
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5729
		{
			yyVAL.str = ""
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5733
		{
			yyVAL.str = yyDollar[1].str
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5739
		{
			yyVAL.str = ""
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5743
		{
			yyVAL.str = yyDollar[2].str
		}
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5749
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5761
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5768
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5775
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5782
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5789
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5798
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5804
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5810
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5814
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5818
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5822
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5826
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5831
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5838
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5842
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5846
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5855
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5860
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5864
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5880
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5886
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5890
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5894
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5898
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5902
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5906
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5910
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5914
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5918
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5922
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5926
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5930
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5934
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5940
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5944
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5948
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5952
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5956
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5960
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5964
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5968
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5972
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5976
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5980
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5984
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5989
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5997
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6001
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6013
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6017
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6026
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6030
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6034
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6038
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6047
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6056
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6062
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6066
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6072
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6082
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6099
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6116
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6129
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6142
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6154
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6168
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6183
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6198
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6215
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6230
		{
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6236
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6240
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6244
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6250
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6254
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6262
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6266
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6270
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6276
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6283
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6296
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6303
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6312
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6317
		{
			yyVAL.str = ","
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6321
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6330
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6340
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6351
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6370
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6379
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6389
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6399
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6409
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6419
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6429
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6439
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6449
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6459
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6469
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6479
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6489
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6499
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6516
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6524
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6532
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6540
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6548
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6557
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6565
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6574
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6585
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6595
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6606
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6616
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6638
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6674
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6686
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6698
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6708
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6716
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6723
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6730
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6742
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6750
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6761
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6770
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6779
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6787
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6797
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6805
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6819
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6829
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6848
		{
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6850
		{
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6891
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6901
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6905
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6909
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6915
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6924
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6930
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6934
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6941
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6945
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6949
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6957
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6961
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6965
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6969
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6975
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6979
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6983
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6987
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6991
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6995
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6999
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7003
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7007
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7011
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7019
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7023
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7027
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7031
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7035
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7039
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7043
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7047
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7051
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7055
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7065
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7071
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7075
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7082
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7086
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7090
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7096
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7100
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7104
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7112
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7116
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7120
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7126
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7130
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7134
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7138
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7144
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7148
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7161
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7166
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7170
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7174
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7178
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7182
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7186
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7200
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7204
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7211
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7222
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7227
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7233
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7245
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7257
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7269
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7282
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7295
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7308
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7321
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7334
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7347
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7360
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7373
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7386
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7399
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7414
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7437
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7471
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7519
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7536
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7548
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7568
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7588
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7608
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7624
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7637
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7650
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7663
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7676
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7688
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7700
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7712
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7724
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7736
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7748
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7760
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7772
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7784
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7797
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7810
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7825
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7833
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7842
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7852
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7875
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7880
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7886
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7893
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7897
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7902
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7906
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7912
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7918
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7925
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7932
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7941
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7948
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7955
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7964
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7968
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7972
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7978
		{
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7980
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7990
		{
			yyVAL.str = ""
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7994
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
