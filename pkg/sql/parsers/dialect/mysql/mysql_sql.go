// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const LOWER_THAN_SET = 57366
const SET = 57367
const ALL = 57368
const DISTINCT = 57369
const DISTINCTROW = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const INTO = 57375
const DUPLICATE = 57376
const DEFAULT = 57377
const LOCK = 57378
const KEYS = 57379
const VALUES = 57380
const NEXT = 57381
const VALUE = 57382
const SHARE = 57383
const MODE = 57384
const SQL_NO_CACHE = 57385
const SQL_CACHE = 57386
const JOIN = 57387
const STRAIGHT_JOIN = 57388
const LEFT = 57389
const RIGHT = 57390
const INNER = 57391
const OUTER = 57392
const CROSS = 57393
const NATURAL = 57394
const USE = 57395
const FORCE = 57396
const ON = 57397
const USING = 57398
const SUBQUERY_AS_EXPR = 57399
const LOWER_THAN_STRING = 57400
const ID = 57401
const AT_ID = 57402
const AT_AT_ID = 57403
const STRING = 57404
const VALUE_ARG = 57405
const LIST_ARG = 57406
const COMMENT = 57407
const COMMENT_KEYWORD = 57408
const INTEGRAL = 57409
const HEX = 57410
const BIT_LITERAL = 57411
const FLOAT = 57412
const HEXNUM = 57413
const NULL = 57414
const TRUE = 57415
const FALSE = 57416
const LOWER_THAN_CHARSET = 57417
const CHARSET = 57418
const UNIQUE = 57419
const KEY = 57420
const OR = 57421
const PIPE_CONCAT = 57422
const XOR = 57423
const AND = 57424
const NOT = 57425
const BETWEEN = 57426
const CASE = 57427
const WHEN = 57428
const THEN = 57429
const ELSE = 57430
const END = 57431
const LE = 57432
const GE = 57433
const NE = 57434
const NULL_SAFE_EQUAL = 57435
const IS = 57436
const LIKE = 57437
const REGEXP = 57438
const IN = 57439
const ASSIGNMENT = 57440
const SHIFT_LEFT = 57441
const SHIFT_RIGHT = 57442
const DIV = 57443
const MOD = 57444
const UNARY = 57445
const COLLATE = 57446
const BINARY = 57447
const UNDERSCORE_BINARY = 57448
const INTERVAL = 57449
const BEGIN = 57450
const START = 57451
const TRANSACTION = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const WORK = 57455
const CONSISTENT = 57456
const SNAPSHOT = 57457
const CHAIN = 57458
const NO = 57459
const RELEASE = 57460
const PRIORITY = 57461
const QUICK = 57462
const BIT = 57463
const TINYINT = 57464
const SMALLINT = 57465
const MEDIUMINT = 57466
const INT = 57467
const INTEGER = 57468
const BIGINT = 57469
const INTNUM = 57470
const REAL = 57471
const DOUBLE = 57472
const FLOAT_TYPE = 57473
const DECIMAL = 57474
const NUMERIC = 57475
const DECIMAL_VALUE = 57476
const TIME = 57477
const TIMESTAMP = 57478
const DATETIME = 57479
const YEAR = 57480
const CHAR = 57481
const VARCHAR = 57482
const BOOL = 57483
const CHARACTER = 57484
const VARBINARY = 57485
const NCHAR = 57486
const TEXT = 57487
const TINYTEXT = 57488
const MEDIUMTEXT = 57489
const LONGTEXT = 57490
const BLOB = 57491
const TINYBLOB = 57492
const MEDIUMBLOB = 57493
const LONGBLOB = 57494
const JSON = 57495
const ENUM = 57496
const GEOMETRY = 57497
const POINT = 57498
const LINESTRING = 57499
const POLYGON = 57500
const GEOMETRYCOLLECTION = 57501
const MULTIPOINT = 57502
const MULTILINESTRING = 57503
const MULTIPOLYGON = 57504
const INT1 = 57505
const INT2 = 57506
const INT3 = 57507
const INT4 = 57508
const INT8 = 57509
const SQL_SMALL_RESULT = 57510
const SQL_BIG_RESULT = 57511
const SQL_BUFFER_RESULT = 57512
const LOW_PRIORITY = 57513
const HIGH_PRIORITY = 57514
const DELAYED = 57515
const CREATE = 57516
const ALTER = 57517
const DROP = 57518
const RENAME = 57519
const ANALYZE = 57520
const ADD = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const CONSTRAINT = 57531
const SPATIAL = 57532
const FULLTEXT = 57533
const FOREIGN = 57534
const KEY_BLOCK_SIZE = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const MAXVALUE = 57544
const PARTITION = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const STATUS = 57551
const VARIABLES = 57552
const ROLE = 57553
const PROXY = 57554
const AVG_ROW_LENGTH = 57555
const STORAGE = 57556
const DISK = 57557
const MEMORY = 57558
const CHECKSUM = 57559
const COMPRESSION = 57560
const DATA = 57561
const DIRECTORY = 57562
const DELAY_KEY_WRITE = 57563
const ENCRYPTION = 57564
const ENGINE = 57565
const MAX_ROWS = 57566
const MIN_ROWS = 57567
const PACK_KEYS = 57568
const ROW_FORMAT = 57569
const STATS_AUTO_RECALC = 57570
const STATS_PERSISTENT = 57571
const STATS_SAMPLE_PAGES = 57572
const DYNAMIC = 57573
const COMPRESSED = 57574
const REDUNDANT = 57575
const COMPACT = 57576
const FIXED = 57577
const COLUMN_FORMAT = 57578
const AUTO_RANDOM = 57579
const RESTRICT = 57580
const CASCADE = 57581
const ACTION = 57582
const PARTIAL = 57583
const SIMPLE = 57584
const CHECK = 57585
const ENFORCED = 57586
const RANGE = 57587
const LIST = 57588
const ALGORITHM = 57589
const LINEAR = 57590
const PARTITIONS = 57591
const SUBPARTITION = 57592
const SUBPARTITIONS = 57593
const TYPE = 57594
const ANY = 57595
const SOME = 57596
const EXTERNAL = 57597
const LOCALFILE = 57598
const URL = 57599
const S3OPTION = 57600
const PREPARE = 57601
const DEALLOCATE = 57602
const PROPERTIES = 57603
const PARSER = 57604
const VISIBLE = 57605
const INVISIBLE = 57606
const BTREE = 57607
const HASH = 57608
const RTREE = 57609
const BSI = 57610
const ZONEMAP = 57611
const LEADING = 57612
const BOTH = 57613
const TRAILING = 57614
const UNKNOWN = 57615
const EXPIRE = 57616
const ACCOUNT = 57617
const UNLOCK = 57618
const DAY = 57619
const NEVER = 57620
const SECOND = 57621
const ASCII = 57622
const COALESCE = 57623
const COLLATION = 57624
const HOUR = 57625
const MICROSECOND = 57626
const MINUTE = 57627
const MONTH = 57628
const QUARTER = 57629
const REPEAT = 57630
const REVERSE = 57631
const ROW_COUNT = 57632
const WEEK = 57633
const REVOKE = 57634
const FUNCTION = 57635
const PRIVILEGES = 57636
const TABLESPACE = 57637
const EXECUTE = 57638
const SUPER = 57639
const GRANT = 57640
const OPTION = 57641
const REFERENCES = 57642
const REPLICATION = 57643
const SLAVE = 57644
const CLIENT = 57645
const USAGE = 57646
const RELOAD = 57647
const FILE = 57648
const TEMPORARY = 57649
const ROUTINE = 57650
const EVENT = 57651
const SHUTDOWN = 57652
const NULLX = 57653
const AUTO_INCREMENT = 57654
const APPROXNUM = 57655
const SIGNED = 57656
const UNSIGNED = 57657
const ZEROFILL = 57658
const ADMIN_NAME = 57659
const RANDOM = 57660
const SUSPEND = 57661
const ATTRIBUTE = 57662
const HISTORY = 57663
const REUSE = 57664
const CURRENT = 57665
const OPTIONAL = 57666
const FAILED_LOGIN_ATTEMPTS = 57667
const PASSWORD_LOCK_TIME = 57668
const UNBOUNDED = 57669
const SECONDARY = 57670
const USER = 57671
const IDENTIFIED = 57672
const CIPHER = 57673
const ISSUER = 57674
const X509 = 57675
const SUBJECT = 57676
const SAN = 57677
const REQUIRE = 57678
const SSL = 57679
const NONE = 57680
const PASSWORD = 57681
const MAX_QUERIES_PER_HOUR = 57682
const MAX_UPDATES_PER_HOUR = 57683
const MAX_CONNECTIONS_PER_HOUR = 57684
const MAX_USER_CONNECTIONS = 57685
const FORMAT = 57686
const VERBOSE = 57687
const CONNECTION = 57688
const LOAD = 57689
const INFILE = 57690
const TERMINATED = 57691
const OPTIONALLY = 57692
const ENCLOSED = 57693
const ESCAPED = 57694
const STARTING = 57695
const LINES = 57696
const DATABASES = 57697
const TABLES = 57698
const EXTENDED = 57699
const FULL = 57700
const PROCESSLIST = 57701
const FIELDS = 57702
const COLUMNS = 57703
const OPEN = 57704
const ERRORS = 57705
const WARNINGS = 57706
const INDEXES = 57707
const SCHEMAS = 57708
const NAMES = 57709
const GLOBAL = 57710
const SESSION = 57711
const ISOLATION = 57712
const LEVEL = 57713
const READ = 57714
const WRITE = 57715
const ONLY = 57716
const REPEATABLE = 57717
const COMMITTED = 57718
const UNCOMMITTED = 57719
const SERIALIZABLE = 57720
const LOCAL = 57721
const CURRENT_TIMESTAMP = 57722
const DATABASE = 57723
const CURRENT_TIME = 57724
const LOCALTIME = 57725
const LOCALTIMESTAMP = 57726
const UTC_DATE = 57727
const UTC_TIME = 57728
const UTC_TIMESTAMP = 57729
const REPLACE = 57730
const CONVERT = 57731
const SEPARATOR = 57732
const CURRENT_DATE = 57733
const CURRENT_USER = 57734
const CURRENT_ROLE = 57735
const SECOND_MICROSECOND = 57736
const MINUTE_MICROSECOND = 57737
const MINUTE_SECOND = 57738
const HOUR_MICROSECOND = 57739
const HOUR_SECOND = 57740
const HOUR_MINUTE = 57741
const DAY_MICROSECOND = 57742
const DAY_SECOND = 57743
const DAY_MINUTE = 57744
const DAY_HOUR = 57745
const YEAR_MONTH = 57746
const SQL_TSI_HOUR = 57747
const SQL_TSI_DAY = 57748
const SQL_TSI_WEEK = 57749
const SQL_TSI_MONTH = 57750
const SQL_TSI_QUARTER = 57751
const SQL_TSI_YEAR = 57752
const SQL_TSI_SECOND = 57753
const SQL_TSI_MINUTE = 57754
const RECURSIVE = 57755
const CONFIG = 57756
const MATCH = 57757
const AGAINST = 57758
const BOOLEAN = 57759
const LANGUAGE = 57760
const WITH = 57761
const QUERY = 57762
const EXPANSION = 57763
const ADDDATE = 57764
const BIT_AND = 57765
const BIT_OR = 57766
const BIT_XOR = 57767
const CAST = 57768
const COUNT = 57769
const APPROX_COUNT_DISTINCT = 57770
const APPROX_PERCENTILE = 57771
const CURDATE = 57772
const CURTIME = 57773
const DATE_ADD = 57774
const DATE_SUB = 57775
const EXTRACT = 57776
const GROUP_CONCAT = 57777
const MAX = 57778
const MID = 57779
const MIN = 57780
const NOW = 57781
const POSITION = 57782
const SESSION_USER = 57783
const STD = 57784
const STDDEV = 57785
const STDDEV_POP = 57786
const STDDEV_SAMP = 57787
const SUBDATE = 57788
const SUBSTR = 57789
const SUBSTRING = 57790
const SUM = 57791
const SYSDATE = 57792
const SYSTEM_USER = 57793
const TRANSLATE = 57794
const TRIM = 57795
const VARIANCE = 57796
const VAR_POP = 57797
const VAR_SAMP = 57798
const AVG = 57799
const JSON_EXTRACT = 57800
const ROW = 57801
const OUTFILE = 57802
const HEADER = 57803
const MAX_FILE_SIZE = 57804
const FORCE_QUOTE = 57805
const UNUSED = 57806

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"S3OPTION",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7231

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	21, 431,
	-2, 412,
	-1, 68,
	199, 586,
	-2, 633,
	-1, 85,
	226, 289,
	227, 289,
	-2, 310,
	-1, 366,
	21, 432,
	-2, 395,
	-1, 441,
	94, 1313,
	105, 1313,
	124, 1313,
	-2, 1125,
	-1, 471,
	21, 432,
	-2, 395,
	-1, 631,
	58, 1465,
	-2, 1472,
	-1, 639,
	58, 1466,
	-2, 1480,
	-1, 641,
	58, 1462,
	-2, 1482,
	-1, 642,
	58, 1463,
	-2, 1483,
	-1, 647,
	58, 1464,
	-2, 1489,
	-1, 648,
	58, 1467,
	-2, 1490,
	-1, 649,
	58, 1468,
	-2, 1491,
	-1, 650,
	58, 888,
	-2, 1492,
	-1, 651,
	58, 889,
	-2, 1493,
	-1, 652,
	58, 890,
	-2, 1494,
	-1, 654,
	58, 1469,
	-2, 1496,
	-1, 655,
	58, 908,
	-2, 1497,
	-1, 656,
	58, 907,
	-2, 1498,
	-1, 659,
	58, 1470,
	-2, 1501,
	-1, 660,
	58, 1471,
	-2, 1502,
	-1, 666,
	58, 970,
	-2, 1313,
	-1, 667,
	58, 979,
	-2, 1338,
	-1, 668,
	58, 983,
	-2, 1377,
	-1, 669,
	58, 994,
	-2, 1437,
	-1, 670,
	58, 996,
	-2, 1447,
	-1, 671,
	58, 984,
	-2, 1452,
	-1, 672,
	58, 992,
	-2, 1456,
	-1, 673,
	58, 973,
	-2, 1457,
	-1, 832,
	1, 612,
	60, 612,
	482, 612,
	-2, 619,
	-1, 972,
	21, 431,
	-2, 816,
	-1, 1019,
	124, 1135,
	-2, 1133,
	-1, 1021,
	124, 530,
	-2, 1130,
	-1, 1022,
	124, 531,
	-2, 1131,
	-1, 1234,
	1, 613,
	60, 613,
	482, 613,
	-2, 619,
	-1, 1322,
	58, 1037,
	-2, 1454,
	-1, 1323,
	58, 1038,
	-2, 1455,
	-1, 1492,
	56, 352,
	59, 352,
	-2, 722,
	-1, 1818,
	79, 619,
	120, 619,
	156, 619,
	159, 619,
	-2, 670,
	-1, 1820,
	260, 783,
	-2, 764,
	-1, 1850,
	56, 352,
	59, 352,
	-2, 723,
	-1, 1929,
	79, 619,
	120, 619,
	156, 619,
	159, 619,
	-2, 671,
	-1, 1957,
	260, 783,
	-2, 765,
	-1, 2354,
	59, 645,
	60, 645,
	-2, 619,
	-1, 2358,
	59, 645,
	60, 645,
	-2, 619,
	-1, 2370,
	59, 649,
	60, 649,
	-2, 619,
	-1, 2373,
	59, 650,
	60, 650,
	-2, 619,
}

const yyPrivate = 57344

const yyLast = 21420

var yyAct = [...]int{
	815, 1325, 2360, 2358, 2357, 2365, 2335, 806, 2204, 676,
	2284, 1994, 2324, 695, 2268, 2242, 1282, 2269, 1969, 2176,
	2180, 2157, 1915, 1925, 1218, 902, 802, 1812, 102, 1992,
	1993, 1278, 2017, 319, 325, 608, 325, 2164, 105, 674,
	1326, 867, 1977, 599, 367, 1871, 366, 439, 1913, 2006,
	837, 1843, 329, 809, 1634, 1976, 1623, 839, 323, 22,
	1638, 1468, 1958, 1495, 1864, 887, 549, 1874, 1882, 101,
	538, 395, 1507, 707, 63, 1886, 861, 1643, 1277, 1824,
	1639, 1196, 1001, 630, 1191, 1711, 1701, 675, 1719, 1570,
	1690, 1653, 1241, 440, 466, 1192, 1649, 1016, 1632, 1010,
	335, 102, 1019, 1011, 311, 1409, 63, 685, 1002, 62,
	1395, 1533, 1313, 880, 864, 1264, 1506, 1465, 862, 846,
	447, 30, 3, 1240, 1470, 551, 1933, 1235, 805, 825,
	817, 800, 1193, 397, 1327, 1324, 677, 623, 442, 1339,
	444, 884, 468, 312, 905, 792, 1203, 322, 15, 1227,
	315, 481, 1280, 30, 320, 6, 1224, 22, 321, 5,
	848, 908, 847, 939, 821, 799, 591, 431, 446, 1304,
	394, 824, 63, 854, 520, 575, 338, 337, 12, 1917,
	1808, 7, 4, 2249, 1455, 98, 2024, 1921, 1811, 812,
	1004, 1210, 1200, 324, 500, 1442, 93, 1985, 1450, 2231,
	609, 1197, 577, 332, 445, 622, 2221, 97, 97, 536,
	27, 87, 69, 519, 1208, 452, 451, 453, 96, 30,
	1467, 465, 97, 392, 27, 87, 69, 310, 1457, 327,
	2256, 568, 793, 569, 797, 1596, 869, 870, 97, 97,
	27, 87, 69, 416, 432, 450, 15, 560, 97, 578,
	559, 562, 563, 6, 757, 94, 94, 5, 796, 562,
	563, 384, 2254, 1466, 2272, 2273, 850, 754, 402, 808,
	94, 517, 513, 2018, 2019, 2020, 2021, 777, 811, 2246,
	2015, 1626, 2110, 1627, 2113, 1628, 94, 756, 2027, 1813,
	1437, 475, 881, 455, 484, 2179, 94, 1804, 1662, 97,
	877, 1832, 583, 1204, 1839, 417, 788, 2085, 1225, 448,
	1664, 584, 1654, 474, 2003, 1617, 1870, 1869, 504, 1990,
	515, 516, 1974, 1447, 473, 1615, 514, 325, 1658, 102,
	503, 2088, 1987, 334, 2258, 2282, 363, 326, 363, 364,
	2230, 364, 1212, 2079, 795, 1659, 1660, 94, 2351, 2366,
	1316, 1317, 1318, 2291, 2253, 470, 472, 444, 471, 418,
	1661, 1314, 2206, 449, 2178, 508, 2298, 2228, 2073, 810,
	491, 1538, 1317, 1318, 1481, 1482, 1483, 1484, 386, 2345,
	368, 2271, 2165, 2166, 2167, 2169, 2168, 2042, 383, 382,
	63, 63, 446, 509, 395, 2202, 2203, 2041, 2206, 365,
	2260, 2261, 2212, 68, 1479, 95, 2367, 587, 511, 377,
	2233, 2234, 558, 557, 2361, 454, 1656, 1209, 493, 2336,
	2030, 467, 1571, 85, 539, 561, 333, 2108, 445, 542,
	1473, 570, 794, 495, 440, 440, 440, 30, 30, 603,
	603, 537, 525, 576, 512, 1443, 1291, 540, 541, 1201,
	543, 500, 819, 380, 1620, 544, 325, 626, 626, 328,
	486, 485, 1866, 1865, 2327, 601, 601, 477, 478, 546,
	759, 1526, 2064, 375, 443, 1287, 1647, 506, 389, 390,
	391, 1289, 1288, 605, 484, 423, 581, 872, 775, 507,
	510, 2142, 579, 580, 873, 2068, 1286, 625, 625, 871,
	603, 420, 603, 474, 421, 381, 760, 492, 2333, 2288,
	1853, 505, 1675, 1629, 807, 408, 1838, 611, 895, 552,
	489, 311, 408, 553, 957, 755, 1535, 376, 586, 1496,
	565, 566, 1445, 1444, 425, 424, 2259, 1436, 1431, 2177,
	63, 603, 1256, 1216, 832, 1187, 920, 784, 395, 562,
	563, 838, 763, 63, 607, 102, 2036, 487, 469, 828,
	479, 554, 63, 1487, 814, 1315, 2232, 818, 522, 855,
	855, 1198, 1198, 2328, 1679, 603, 102, 2086, 1198, 385,
	1655, 562, 563, 882, 1665, 1618, 1537, 524, 1657, 440,
	853, 603, 410, 499, 1648, 409, 843, 804, 1612, 410,
	30, 555, 409, 597, 598, 1916, 1807, 820, 896, 30,
	1211, 842, 1199, 1986, 1451, 833, 603, 548, 901, 102,
	102, 573, 574, 851, 852, 1991, 917, 786, 801, 876,
	766, 585, 888, 70, 70, 789, 783, 906, 888, 888,
	841, 857, 827, 780, 310, 904, 761, 779, 70, 621,
	486, 485, 614, 615, 616, 617, 618, 619, 620, 907,
	903, 903, 610, 752, 70, 70, 494, 782, 921, 826,
	781, 778, 564, 762, 70, 567, 798, 803, 594, 595,
	596, 974, 1488, 844, 845, 2066, 883, 1472, 878, 2065,
	556, 443, 2069, 2070, 2325, 2326, 2322, 813, 1329, 1328,
	1644, 1647, 1614, 826, 2143, 2145, 2146, 2147, 2144, 458,
	463, 464, 770, 771, 1195, 592, 590, 900, 835, 2311,
	973, 834, 1469, 2216, 849, 70, 593, 2116, 981, 960,
	961, 962, 963, 964, 957, 1809, 1476, 1477, 858, 893,
	894, 1688, 1621, 856, 801, 860, 859, 983, 1433, 1293,
	1475, 1402, 1613, 972, 476, 1779, 879, 1008, 1008, 1013,
	1410, 890, 891, 892, 1194, 1400, 1401, 1399, 975, 976,
	977, 978, 1463, 914, 915, 916, 913, 387, 823, 898,
	1021, 899, 1781, 897, 1334, 2075, 422, 589, 838, 445,
	913, 1410, 603, 1576, 979, 1908, 916, 913, 774, 2074,
	1828, 1823, 1022, 2059, 1768, 2153, 773, 997, 965, 966,
	958, 959, 960, 961, 962, 963, 964, 957, 1784, 1648,
	102, 102, 947, 2344, 1641, 2356, 1337, 2341, 1642, 1645,
	446, 2308, 1907, 2292, 102, 1242, 1338, 2190, 1189, 2187,
	2152, 63, 1650, 1758, 1755, 1756, 1757, 2186, 2159, 1789,
	319, 1788, 1787, 1785, 914, 915, 916, 913, 1258, 2281,
	1007, 1221, 1223, 2343, 906, 419, 445, 2265, 460, 461,
	462, 914, 915, 916, 913, 1238, 2137, 991, 426, 2136,
	1646, 1246, 914, 915, 916, 913, 907, 2135, 30, 914,
	915, 916, 913, 1558, 1219, 1220, 603, 2132, 2126, 413,
	2123, 1247, 1248, 1249, 2122, 2025, 1283, 2011, 2151, 2149,
	626, 1786, 102, 2010, 1000, 2009, 1020, 2139, 1185, 1309,
	1186, 1311, 1298, 958, 959, 960, 961, 962, 963, 964,
	957, 888, 888, 888, 1988, 1014, 1190, 1015, 1557, 1335,
	1336, 408, 1285, 2150, 2148, 914, 915, 916, 913, 2005,
	625, 2004, 2138, 1835, 1305, 1306, 1307, 1308, 1663, 1236,
	914, 915, 916, 913, 1608, 764, 1301, 2264, 1252, 1989,
	1254, 2158, 1250, 1230, 997, 1290, 1332, 1836, 1284, 924,
	925, 926, 927, 928, 929, 930, 922, 363, 1303, 1374,
	364, 1926, 1251, 1253, 1419, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1319, 2247, 1260,
	1404, 1405, 1837, 2210, 1255, 1259, 849, 1579, 410, 2209,
	1578, 409, 2197, 1411, 2185, 1414, 2183, 2140, 1790, 1791,
	2133, 2370, 1294, 1295, 1296, 1421, 2129, 2128, 1734, 2127,
	2106, 2087, 2061, 914, 915, 916, 913, 1302, 914, 915,
	916, 913, 2026, 407, 829, 830, 831, 1403, 1425, 2342,
	2022, 411, 914, 915, 916, 913, 2007, 1924, 1330, 1331,
	1922, 1333, 968, 1919, 971, 1397, 1624, 1369, 1370, 1371,
	1372, 1373, 1846, 1834, 1379, 1380, 1381, 1382, 969, 970,
	967, 2319, 956, 955, 965, 966, 958, 959, 960, 961,
	962, 963, 964, 957, 2084, 956, 955, 965, 966, 958,
	959, 960, 961, 962, 963, 964, 957, 1833, 1830, 1806,
	1413, 1415, 1416, 1412, 1797, 1652, 914, 915, 916, 913,
	1420, 1619, 1422, 1423, 1722, 1529, 1581, 956, 955, 965,
	966, 958, 959, 960, 961, 962, 963, 964, 957, 1215,
	1454, 1741, 1745, 1747, 1749, 1751, 1752, 1754, 1424, 1758,
	1755, 1756, 1757, 723, 722, 1736, 1737, 1738, 1739, 1720,
	1721, 1742, 1213, 1723, 993, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1740, 1214, 954, 1438, 953,
	765, 2012, 2349, 1744, 1746, 1748, 1750, 1753, 603, 1894,
	603, 2237, 603, 914, 915, 916, 913, 474, 1893, 914,
	915, 916, 913, 914, 915, 916, 913, 1460, 1452, 1667,
	822, 914, 915, 916, 913, 2236, 1448, 1735, 1892, 603,
	914, 915, 916, 913, 404, 1585, 406, 416, 1541, 1584,
	1492, 403, 401, 400, 412, 405, 1498, 414, 415, 2217,
	914, 915, 916, 913, 2101, 1458, 1459, 1503, 818, 1541,
	2375, 2097, 474, 102, 102, 102, 102, 370, 371, 372,
	373, 2096, 1796, 1508, 474, 102, 1523, 1545, 2369, 2368,
	369, 1490, 1778, 1911, 1486, 1508, 1449, 1909, 1462, 1906,
	1772, 840, 603, 396, 914, 915, 916, 913, 1206, 2352,
	102, 102, 22, 1898, 914, 915, 916, 913, 1499, 1961,
	1863, 1524, 914, 915, 916, 913, 1847, 63, 1283, 2348,
	2347, 613, 1818, 1441, 1799, 1439, 801, 1700, 1771, 1446,
	914, 915, 916, 913, 1274, 1546, 1206, 2339, 1206, 2338,
	1680, 1531, 1532, 1964, 1712, 1713, 2287, 2286, 1461, 1959,
	914, 915, 916, 913, 1972, 1973, 840, 826, 1478, 1588,
	1960, 1236, 1485, 1491, 30, 1586, 1497, 1583, 1542, 2090,
	2279, 1543, 1544, 2090, 2274, 1502, 1527, 1504, 1500, 1582,
	1501, 1509, 1510, 1511, 1512, 1505, 1300, 2262, 1520, 1522,
	1521, 15, 2251, 2250, 1965, 2090, 2226, 1580, 6, 1687,
	1565, 1550, 5, 2090, 2225, 2090, 2224, 1530, 2090, 2223,
	1552, 1553, 1554, 1555, 1556, 1770, 1560, 2215, 2214, 1547,
	1561, 1562, 1563, 1564, 2105, 2104, 1674, 1536, 1539, 1494,
	1008, 1540, 1600, 1008, 1769, 1525, 1603, 914, 915, 916,
	913, 1568, 1569, 603, 2103, 2102, 1418, 1743, 1573, 2099,
	2100, 1577, 1417, 1606, 2099, 2098, 914, 915, 916, 913,
	1765, 1245, 2095, 612, 1589, 474, 2090, 2089, 888, 1541,
	1773, 2310, 972, 1493, 888, 1607, 1637, 1541, 1971, 1442,
	1640, 102, 914, 915, 916, 913, 1426, 1597, 1567, 1819,
	474, 1541, 1759, 1595, 102, 1242, 1764, 1678, 1800, 1602,
	1590, 1637, 63, 1541, 1549, 1967, 1229, 1397, 445, 1274,
	1566, 1541, 1548, 1599, 1575, 1245, 1440, 1494, 914, 915,
	916, 913, 1668, 1435, 1434, 1429, 1428, 1966, 1968, 1763,
	1228, 1616, 1601, 1598, 1604, 1592, 1704, 1591, 1610, 1605,
	1245, 1244, 1273, 1762, 1611, 1206, 1205, 500, 1669, 1670,
	1671, 914, 915, 916, 913, 768, 767, 97, 1681, 1682,
	87, 69, 1432, 911, 1686, 914, 915, 916, 913, 791,
	1676, 790, 1407, 497, 1300, 498, 1274, 498, 1197, 1698,
	603, 1217, 1706, 1188, 547, 1673, 603, 1677, 1672, 588,
	1699, 1974, 1760, 2371, 2078, 2321, 2317, 1685, 2315, 1766,
	1767, 1684, 1695, 1962, 2299, 94, 601, 909, 2296, 1232,
	603, 1761, 601, 500, 2294, 1709, 97, 1780, 2189, 2174,
	2162, 102, 1793, 1792, 2160, 2155, 2117, 1795, 1683, 1794,
	1704, 1873, 102, 914, 915, 916, 913, 914, 915, 916,
	913, 1822, 956, 955, 965, 966, 958, 959, 960, 961,
	962, 963, 964, 957, 2082, 2081, 1777, 1774, 1708, 1776,
	2080, 2077, 1805, 2072, 94, 2057, 550, 1783, 1883, 1875,
	603, 603, 1887, 1817, 1890, 102, 1850, 1880, 1798, 1801,
	914, 915, 916, 913, 1707, 1879, 1859, 1841, 474, 1816,
	1829, 1398, 94, 1803, 1802, 1489, 601, 1844, 1464, 1508,
	1427, 490, 1292, 1406, 63, 1862, 914, 915, 916, 913,
	1243, 999, 1283, 1842, 1826, 998, 996, 995, 1953, 1821,
	1825, 994, 1825, 1820, 1827, 914, 915, 916, 913, 888,
	992, 1855, 1858, 444, 1851, 1860, 940, 989, 988, 986,
	985, 1854, 1852, 1861, 1910, 984, 982, 1237, 952, 951,
	950, 1849, 1848, 1261, 1857, 1266, 1269, 1270, 1271, 1267,
	1856, 1268, 1272, 949, 948, 946, 945, 944, 1877, 1878,
	2359, 943, 942, 1266, 1269, 1270, 1271, 1267, 1867, 1268,
	1272, 1935, 1881, 941, 938, 1885, 2304, 937, 936, 1876,
	956, 955, 965, 966, 958, 959, 960, 961, 962, 963,
	964, 957, 935, 934, 933, 932, 931, 1884, 787, 1895,
	758, 502, 1691, 1692, 2302, 2270, 1694, 1480, 1299, 501,
	474, 1930, 1897, 1697, 1978, 1980, 1696, 1978, 1978, 1514,
	1899, 1637, 1888, 1901, 1891, 1903, 1513, 2355, 1517, 1515,
	1430, 888, 474, 1518, 1516, 1519, 1237, 1270, 1271, 1219,
	1220, 2028, 1453, 1900, 521, 1904, 1905, 1902, 50, 1896,
	838, 29, 28, 1631, 1226, 1918, 1912, 1979, 496, 1630,
	1984, 1276, 836, 2239, 1955, 1329, 1328, 533, 534, 531,
	532, 1975, 1981, 1982, 1927, 529, 530, 527, 528, 307,
	572, 2000, 308, 309, 571, 370, 371, 372, 373, 1983,
	1184, 1997, 523, 2316, 2194, 2192, 1998, 1999, 369, 369,
	2001, 1939, 2120, 2118, 1852, 2115, 2114, 2112, 1923, 1815,
	1814, 1703, 1943, 526, 1702, 1534, 840, 2306, 2305, 2305,
	2008, 1609, 2032, 1551, 488, 2306, 874, 1275, 398, 35,
	1, 1202, 1932, 1831, 1666, 1651, 1934, 1936, 1938, 2013,
	1940, 1941, 1942, 1944, 1945, 1946, 1948, 1949, 1950, 1951,
	545, 388, 1375, 535, 772, 457, 603, 483, 769, 482,
	480, 1408, 1340, 708, 1003, 102, 1009, 2156, 2238, 2283,
	2188, 2035, 2241, 785, 1980, 694, 2107, 1625, 2014, 2109,
	1954, 2016, 1844, 2033, 2034, 1456, 2037, 2038, 2039, 2040,
	1914, 2060, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2076, 2062, 1975, 1207,
	2058, 518, 1593, 1594, 1952, 720, 2083, 711, 987, 713,
	753, 459, 710, 1840, 2121, 1474, 2092, 374, 456, 399,
	2091, 1931, 2002, 2094, 1810, 444, 2093, 1868, 1889, 2111,
	1872, 2364, 2354, 2334, 2314, 2205, 2154, 955, 965, 966,
	958, 959, 960, 961, 962, 963, 964, 957, 1947, 2350,
	2252, 2297, 2290, 2201, 2029, 1937, 339, 2134, 474, 875,
	582, 474, 474, 474, 1283, 429, 2175, 2119, 340, 2229,
	2161, 474, 378, 1231, 379, 1234, 1233, 2124, 2125, 1320,
	923, 1396, 63, 2130, 2131, 990, 980, 2163, 628, 1574,
	2171, 2172, 2173, 684, 678, 1471, 2182, 2170, 2199, 1970,
	1528, 2181, 34, 33, 32, 603, 603, 912, 1017, 709,
	2184, 104, 1257, 1018, 1622, 2198, 2193, 2191, 2195, 2196,
	2023, 2243, 2200, 693, 692, 691, 690, 689, 1265, 1263,
	1262, 601, 601, 866, 865, 910, 102, 2267, 2266, 2219,
	2220, 1920, 2071, 474, 2141, 2067, 2063, 2211, 2207, 2208,
	1929, 1928, 1956, 1957, 1963, 474, 1718, 1714, 1716, 1717,
	1715, 2213, 1782, 1710, 1635, 1636, 1633, 1693, 1689, 1005,
	2245, 1012, 2222, 816, 99, 863, 1996, 903, 11, 10,
	776, 2218, 9, 2244, 2227, 14, 21, 20, 2235, 19,
	58, 57, 56, 55, 18, 8, 54, 53, 2248, 1587,
	52, 17, 16, 47, 48, 2255, 2257, 45, 44, 43,
	42, 41, 1775, 40, 39, 46, 38, 2263, 37, 36,
	67, 66, 65, 64, 2275, 2276, 2277, 2278, 23, 2285,
	24, 25, 2289, 956, 955, 965, 966, 958, 959, 960,
	961, 962, 963, 964, 957, 26, 956, 955, 965, 966,
	958, 959, 960, 961, 962, 963, 964, 957, 77, 76,
	78, 74, 72, 75, 2303, 2300, 2301, 73, 2245, 2313,
	71, 31, 2280, 13, 2293, 474, 2295, 474, 2307, 2309,
	2, 2244, 2318, 2312, 2320, 0, 807, 0, 807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2329,
	2285, 2330, 474, 0, 0, 2337, 0, 0, 0, 2340,
	0, 0, 0, 807, 2346, 0, 0, 0, 0, 2323,
	956, 955, 965, 966, 958, 959, 960, 961, 962, 963,
	964, 957, 2332, 0, 0, 2353, 0, 0, 0, 0,
	0, 2363, 0, 2362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2374, 2373, 2372, 2363, 1130, 1172, 0,
	0, 1118, 0, 1080, 1132, 1054, 1069, 1140, 1070, 1071,
	1105, 1033, 1089, 228, 1067, 0, 1121, 1025, 1057, 1058,
	1027, 1064, 1028, 1055, 1082, 173, 1053, 1092, 198, 1138,
	0, 0, 257, 212, 0, 0, 1085, 1123, 1087, 1110,
	1079, 1106, 1041, 1099, 1133, 1068, 1103, 1134, 0, 0,
	0, 0, 0, 829, 830, 831, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 1102, 1127, 1066, 0,
	158, 1131, 1086, 1104, 0, 0, 1026, 1100, 0, 1031,
	1034, 1139, 1125, 1061, 1062, 0, 0, 0, 0, 0,
	0, 0, 1083, 1088, 1107, 1076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1059, 0, 1096, 0, 0,
	0, 1036, 1032, 0, 1081, 0, 147, 262, 276, 156,
	253, 289, 161, 260, 152, 227, 249, 0, 1171, 149,
	274, 259, 209, 192, 193, 148, 0, 244, 171, 184,
	168, 225, 0, 1129, 301, 167, 292, 1035, 284, 151,
	1166, 283, 224, 271, 275, 210, 204, 150, 273, 208,
	203, 196, 175, 188, 236, 202, 237, 189, 214, 213,
	215, 1150, 1151, 1152, 1153, 1154, 1162, 1163, 0, 1167,
	1168, 1169, 1040, 0, 1060, 1108, 0, 1024, 1116, 1124,
	1078, 286, 1126, 1075, 1074, 1157, 0, 1156, 261, 1158,
	1159, 197, 1122, 1056, 1065, 302, 1063, 247, 230, 1128,
	1095, 1170, 245, 200, 272, 238, 277, 263, 285, 241,
	239, 143, 264, 170, 211, 153, 154, 166, 172, 174,
	176, 177, 220, 221, 233, 252, 265, 266, 267, 169,
	162, 246, 163, 186, 164, 144, 254, 165, 145, 234,
	270, 1155, 182, 242, 207, 146, 206, 235, 269, 268,
	293, 299, 300, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1164, 0,
	1165, 298, 180, 1023, 281, 0, 226, 1119, 1029, 1039,
	1037, 1072, 1097, 1098, 222, 297, 1112, 1115, 1113, 1141,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 258, 279, 291, 1173, 1174, 1175, 1176, 0,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 282, 1073, 1047,
	1084, 290, 1050, 1048, 1111, 1049, 1101, 1143, 216, 217,
	218, 219, 183, 0, 160, 1093, 1077, 1144, 1145, 1146,
	1147, 1148, 1149, 1052, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 1117, 223, 190, 255, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 205, 1046, 1051,
	1045, 1090, 1091, 1135, 1136, 1137, 1109, 1038, 1120, 1042,
	1044, 1043, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 1094, 142, 0, 199, 1142, 240, 178,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 731, 737, 1160, 1161, 294,
	295, 296, 280, 0, 0, 0, 679, 0, 0, 0,
	629, 723, 722, 696, 705, 0, 0, 155, 697, 1572,
	704, 698, 702, 701, 699, 700, 0, 666, 0, 0,
	0, 0, 0, 0, 627, 683, 0, 687, 0, 0,
	956, 955, 965, 966, 958, 959, 960, 961, 962, 963,
	964, 957, 0, 0, 0, 0, 0, 0, 680, 681,
	0, 0, 0, 0, 717, 0, 682, 0, 0, 719,
	0, 706, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 703,
	715, 672, 167, 670, 714, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 712, 0, 0, 286, 0,
	0, 730, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 673, 0, 247, 230, 740, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1377, 1376, 1378, 298, 180,
	0, 281, 728, 226, 739, 724, 725, 726, 729, 732,
	733, 668, 671, 734, 736, 738, 741, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 718, 216, 217, 218, 219, 667,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 747, 727, 746, 748, 749,
	745, 750, 751, 735, 688, 0, 743, 742, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 121, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 721, 0, 0, 294, 295, 296, 280,
	97, 0, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 731, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 629, 723, 722, 696, 705, 0, 0, 155,
	697, 0, 704, 698, 702, 701, 699, 700, 0, 666,
	0, 0, 0, 0, 0, 0, 627, 683, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 681, 0, 0, 0, 0, 717, 0, 682, 0,
	0, 719, 0, 706, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 703, 715, 672, 167, 670, 714, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 0,
	286, 0, 0, 730, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 673, 0, 247, 230, 740, 0,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 728, 226, 739, 724, 725, 726,
	729, 732, 733, 668, 671, 734, 736, 738, 741, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 718, 216, 217, 218,
	219, 667, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 747, 727, 746,
	748, 749, 745, 750, 751, 735, 688, 0, 743, 742,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 70, 240, 178, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 121, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 721, 716, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 173, 889,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 731, 737, 0, 0, 0, 0, 0, 0, 885,
	0, 0, 679, 0, 0, 0, 629, 723, 722, 696,
	705, 0, 0, 155, 697, 0, 704, 698, 702, 701,
	699, 700, 0, 666, 0, 0, 0, 0, 0, 0,
	627, 683, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 681, 0, 0, 0, 0,
	717, 0, 682, 0, 0, 886, 0, 706, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 703, 715, 672, 167, 670,
	714, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 712, 0, 0, 286, 0, 0, 730, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 673, 0,
	247, 230, 740, 0, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 180, 0, 281, 728, 226,
	739, 724, 725, 726, 729, 732, 733, 668, 671, 734,
	736, 738, 741, 250, 0, 0, 0, 0, 0, 191,
	232, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 279, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	718, 216, 217, 218, 219, 667, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 179, 185,
	0, 187, 159, 231, 181, 288, 194, 0, 223, 190,
	255, 195, 201, 243, 287, 229, 248, 157, 278, 256,
	205, 747, 727, 746, 748, 749, 745, 750, 751, 735,
	688, 0, 743, 742, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 199,
	0, 240, 178, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 121, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 721,
	716, 0, 294, 295, 296, 280, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 173, 2331, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 731, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 0, 0, 0,
	629, 723, 722, 696, 705, 0, 0, 155, 697, 0,
	704, 698, 702, 701, 699, 700, 0, 666, 0, 0,
	0, 0, 0, 0, 627, 683, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 681,
	0, 0, 0, 0, 717, 0, 682, 0, 0, 719,
	0, 706, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 703,
	715, 672, 167, 670, 714, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 712, 0, 0, 286, 0,
	0, 730, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 673, 0, 247, 230, 740, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 728, 226, 739, 724, 725, 726, 729, 732,
	733, 668, 671, 734, 736, 738, 741, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 718, 216, 217, 218, 219, 667,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 747, 727, 746, 748, 749,
	745, 750, 751, 735, 688, 0, 743, 742, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 121, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 721, 716, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 173, 889, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 731,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 629, 723, 722, 696, 705, 0,
	0, 155, 697, 0, 704, 698, 702, 701, 699, 700,
	0, 666, 0, 0, 0, 0, 0, 0, 627, 683,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 681, 0, 0, 0, 0, 717, 0,
	682, 0, 0, 719, 0, 706, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 703, 715, 672, 167, 670, 714, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 712,
	0, 0, 286, 0, 0, 730, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 673, 0, 247, 230,
	740, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 728, 226, 739, 724,
	725, 726, 729, 732, 733, 668, 671, 734, 736, 738,
	741, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 718, 216,
	217, 218, 219, 667, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 747,
	727, 746, 748, 749, 745, 750, 751, 735, 688, 0,
	743, 742, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 121, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 721, 0, 0,
	294, 295, 296, 280, 716, 0, 0, 1559, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 173, 0, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 731,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 629, 723, 722, 696, 705, 0,
	0, 155, 697, 0, 704, 698, 702, 701, 699, 700,
	0, 666, 0, 0, 0, 0, 0, 0, 627, 683,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 681, 0, 0, 0, 0, 717, 0,
	682, 0, 0, 719, 0, 706, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 703, 715, 672, 167, 670, 714, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 712,
	0, 0, 286, 0, 0, 730, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 673, 0, 247, 230,
	740, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 728, 226, 739, 724,
	725, 726, 729, 732, 733, 668, 671, 734, 736, 738,
	741, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 718, 216,
	217, 218, 219, 667, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 747,
	727, 746, 748, 749, 745, 750, 751, 735, 688, 0,
	743, 742, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 121, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 721, 716, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 731, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 0, 0, 0, 629, 723,
	722, 696, 705, 0, 0, 155, 697, 0, 704, 698,
	702, 701, 699, 700, 0, 666, 0, 0, 0, 0,
	0, 0, 627, 683, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 681, 624, 0,
	0, 0, 717, 0, 682, 0, 0, 719, 0, 706,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 703, 715, 672,
	167, 670, 714, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 712, 0, 0, 286, 0, 0, 730,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	673, 0, 247, 230, 740, 0, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	728, 226, 739, 724, 725, 726, 729, 732, 733, 668,
	671, 734, 736, 738, 741, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 718, 216, 217, 218, 219, 667, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 747, 727, 746, 748, 749, 745, 750,
	751, 735, 688, 0, 743, 742, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	121, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 721, 716, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 731, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 629, 723, 722, 696, 705, 0, 0, 155,
	697, 0, 704, 698, 702, 701, 699, 700, 0, 666,
	0, 0, 0, 0, 0, 0, 627, 683, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 681, 0, 0, 0, 0, 717, 0, 682, 0,
	0, 719, 0, 706, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 703, 715, 672, 167, 670, 714, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 0,
	286, 0, 0, 730, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 673, 0, 247, 230, 740, 0,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 728, 226, 739, 724, 725, 726,
	729, 732, 733, 668, 671, 734, 736, 738, 741, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 718, 216, 217, 218,
	219, 667, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 747, 727, 746,
	748, 749, 745, 750, 751, 735, 688, 0, 743, 742,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 121, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 721, 716, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 228, 0, 0, 0,
	1321, 0, 0, 0, 686, 0, 0, 0, 173, 0,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 731, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 0, 0, 629, 723, 722, 696,
	705, 0, 0, 155, 697, 0, 704, 698, 702, 701,
	699, 700, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 683, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 681, 0, 0, 0, 0,
	717, 0, 682, 0, 0, 719, 0, 706, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 703, 715, 672, 167, 670,
	714, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 712, 0, 0, 286, 0, 0, 730, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 673, 0,
	247, 230, 740, 0, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 1322, 1323, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 180, 0, 281, 728, 226,
	739, 724, 725, 726, 729, 732, 733, 668, 671, 734,
	736, 738, 741, 250, 0, 0, 0, 0, 0, 191,
	232, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 279, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	718, 216, 217, 218, 219, 667, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 179, 185,
	0, 187, 159, 231, 181, 288, 194, 0, 223, 190,
	255, 195, 201, 243, 287, 229, 248, 157, 278, 256,
	205, 747, 727, 746, 748, 749, 745, 750, 751, 735,
	688, 0, 743, 742, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 199,
	0, 240, 178, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 121, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 721,
	716, 0, 294, 295, 296, 280, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 731, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 0, 0, 0,
	629, 723, 722, 696, 705, 0, 0, 155, 697, 0,
	704, 698, 702, 701, 699, 700, 0, 666, 0, 0,
	0, 0, 0, 0, 0, 683, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 681,
	0, 0, 0, 0, 717, 0, 682, 0, 0, 719,
	0, 706, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 703,
	715, 672, 167, 670, 714, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 712, 0, 0, 286, 0,
	0, 730, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 673, 0, 247, 230, 740, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 728, 226, 739, 724, 725, 726, 729, 732,
	733, 668, 671, 734, 736, 738, 741, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 718, 216, 217, 218, 219, 667,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 747, 727, 746, 748, 749,
	745, 750, 751, 735, 688, 0, 743, 742, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 121, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 721, 716, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 0, 173, 0, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 731,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 629, 723, 722, 696, 705, 0,
	0, 155, 697, 0, 704, 698, 702, 701, 699, 700,
	0, 666, 0, 0, 0, 0, 0, 0, 627, 683,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 681, 0, 0, 0, 0, 717, 0,
	682, 0, 0, 719, 0, 706, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 703, 715, 672, 167, 670, 714, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 712,
	0, 0, 286, 0, 0, 730, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 673, 0, 247, 230,
	740, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 728, 226, 739, 724,
	725, 726, 729, 732, 733, 668, 671, 734, 736, 738,
	741, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 718, 216,
	217, 218, 219, 667, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 747,
	727, 746, 748, 749, 745, 750, 751, 735, 688, 0,
	743, 742, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 121, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 721, 0, 0,
	294, 295, 296, 280, 97, 0, 27, 87, 69, 0,
	0, 0, 0, 0, 0, 0, 228, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 349, 353, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 0, 0, 301, 167, 292,
	0, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 302, 0,
	247, 230, 0, 0, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 304, 0, 305, 306,
	343, 342, 346, 1360, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 298, 180, 0, 281, 0, 226,
	352, 0, 0, 0, 0, 0, 0, 222, 297, 0,
	0, 0, 0, 250, 344, 0, 0, 0, 0, 191,
	232, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 279, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 216, 217, 218, 219, 314, 316, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 179, 185,
	0, 187, 159, 231, 181, 288, 194, 0, 223, 190,
	255, 195, 201, 243, 287, 229, 248, 157, 278, 256,
	205, 0, 347, 351, 354, 0, 355, 356, 0, 0,
	357, 358, 359, 0, 0, 361, 362, 0, 0, 0,
	0, 0, 1356, 0, 1353, 0, 0, 0, 1355, 1352,
	1354, 1358, 1359, 0, 0, 0, 1357, 142, 0, 199,
	70, 240, 178, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 228,
	0, 0, 294, 295, 296, 280, 0, 0, 0, 0,
	0, 173, 0, 0, 198, 0, 0, 0, 257, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 1644, 1647, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1363, 1364, 1365, 1366, 1367, 1368, 1361, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 262, 276, 156, 253, 289, 161, 260,
	152, 227, 249, 0, 0, 149, 274, 259, 209, 192,
	193, 148, 0, 244, 171, 184, 168, 225, 0, 0,
	301, 167, 292, 0, 284, 151, 0, 283, 224, 271,
	275, 210, 204, 150, 273, 208, 203, 196, 175, 188,
	236, 202, 237, 189, 214, 213, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 286, 0, 0,
	0, 1641, 0, 1640, 261, 1642, 1645, 197, 0, 0,
	0, 302, 0, 247, 230, 0, 0, 0, 245, 200,
	272, 238, 277, 263, 285, 241, 239, 143, 264, 170,
	211, 153, 154, 166, 172, 174, 176, 177, 220, 221,
	233, 252, 265, 266, 267, 169, 162, 246, 163, 186,
	164, 144, 254, 165, 145, 234, 270, 1646, 182, 242,
	207, 146, 206, 235, 269, 268, 293, 299, 300, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 180, 0,
	281, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	222, 297, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 191, 232, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 279,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 216, 217, 218, 219, 183, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 179, 185, 0, 187, 159, 231, 181, 288, 194,
	0, 223, 190, 255, 195, 201, 243, 287, 229, 248,
	157, 278, 256, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 199, 0, 240, 178, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 228, 0, 0, 294, 295, 296, 280, 918,
	0, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 919, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 914, 915, 916, 913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 0, 0, 301, 167, 292, 0, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 302, 0, 247, 230, 0, 0,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 222, 297, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 216, 217, 218,
	219, 183, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 228, 0, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 0, 173, 428, 0,
	198, 0, 0, 0, 257, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 436, 437, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 262,
	276, 156, 253, 289, 161, 260, 152, 227, 249, 0,
	0, 149, 274, 259, 209, 192, 193, 148, 0, 244,
	171, 184, 168, 225, 0, 0, 301, 167, 292, 410,
	284, 151, 409, 283, 224, 271, 275, 210, 204, 150,
	273, 208, 203, 196, 175, 188, 236, 202, 237, 189,
	214, 213, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 197, 0, 0, 0, 302, 0, 247,
	230, 0, 0, 0, 245, 200, 272, 238, 277, 263,
	285, 427, 239, 143, 264, 170, 211, 153, 154, 166,
	172, 174, 176, 177, 220, 221, 233, 252, 265, 266,
	267, 169, 162, 246, 163, 186, 164, 144, 254, 165,
	145, 234, 270, 0, 182, 242, 207, 146, 206, 235,
	269, 268, 293, 299, 300, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 180, 0, 281, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 222, 297, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 191, 232,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 279, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 430,
	216, 217, 218, 219, 183, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 179, 185, 0,
	187, 159, 231, 181, 288, 194, 0, 438, 433, 434,
	195, 201, 243, 287, 229, 248, 157, 278, 256, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 199, 0,
	240, 178, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 97, 0,
	0, 294, 295, 296, 280, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 1006, 0,
	103, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 0,
	0, 301, 167, 292, 0, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 302, 0, 247, 230, 0, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 222, 297, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 216, 217, 218, 219, 183,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 70, 240, 178, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 228, 0, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 0, 173, 0, 0, 198, 0,
	0, 0, 257, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 436, 437, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 262, 276, 156,
	253, 289, 161, 260, 152, 227, 249, 0, 0, 149,
	274, 259, 209, 192, 193, 148, 0, 244, 171, 184,
	168, 225, 0, 0, 301, 167, 292, 410, 284, 151,
	409, 283, 224, 271, 275, 210, 204, 150, 273, 208,
	203, 196, 175, 188, 236, 202, 237, 189, 214, 213,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 197, 0, 0, 0, 302, 0, 247, 230, 0,
	0, 0, 245, 200, 272, 238, 277, 263, 285, 241,
	239, 143, 264, 170, 211, 153, 154, 166, 172, 174,
	176, 177, 220, 221, 233, 252, 265, 266, 267, 169,
	162, 246, 163, 186, 164, 144, 254, 165, 145, 234,
	270, 0, 182, 242, 207, 146, 206, 235, 269, 268,
	293, 299, 300, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 180, 0, 281, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 222, 297, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 279, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 216, 217,
	218, 219, 183, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 0, 438, 433, 434, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 199, 0, 240, 178,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 228, 0, 0, 294,
	295, 296, 280, 0, 0, 0, 0, 0, 173, 606,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 604,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 602, 0, 0, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 0, 0, 301, 167, 292,
	0, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 302, 0,
	247, 230, 0, 0, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 180, 0, 281, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 222, 297, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 191,
	232, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 279, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 216, 217, 218, 219, 183, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 179, 185,
	0, 187, 159, 231, 181, 288, 194, 0, 223, 190,
	255, 195, 201, 243, 287, 229, 248, 157, 278, 256,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 199,
	0, 240, 178, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 228,
	0, 0, 294, 295, 296, 280, 0, 0, 0, 0,
	0, 173, 600, 0, 198, 0, 0, 0, 257, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 604, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 602, 0,
	0, 0, 147, 262, 276, 156, 253, 289, 161, 260,
	152, 227, 249, 0, 0, 149, 274, 259, 209, 192,
	193, 148, 0, 244, 171, 184, 168, 225, 0, 0,
	301, 167, 292, 0, 284, 151, 0, 283, 224, 271,
	275, 210, 204, 150, 273, 208, 203, 196, 175, 188,
	236, 202, 237, 189, 214, 213, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 197, 0, 0,
	0, 302, 0, 247, 230, 0, 0, 0, 245, 200,
	272, 238, 277, 263, 285, 241, 239, 143, 264, 170,
	211, 153, 154, 166, 172, 174, 176, 177, 220, 221,
	233, 252, 265, 266, 267, 169, 162, 246, 163, 186,
	164, 144, 254, 165, 145, 234, 270, 0, 182, 242,
	207, 146, 206, 235, 269, 268, 293, 299, 300, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 180, 0,
	281, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	222, 297, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 191, 232, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 279,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 216, 217, 218, 219, 183, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 179, 185, 0, 187, 159, 231, 181, 288, 194,
	0, 223, 190, 255, 195, 201, 243, 287, 229, 248,
	157, 278, 256, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 199, 0, 240, 178, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 228, 0, 0, 294, 295, 296, 280, 0,
	0, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2240, 0, 103, 723, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 0, 0, 301, 167, 292, 0, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 302, 0, 247, 230, 0, 0,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 222, 297, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 216, 217, 218,
	219, 183, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 228, 0, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 0, 173, 0, 0,
	198, 0, 0, 0, 257, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 604, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 602, 0, 0, 0, 147, 262,
	276, 156, 253, 289, 161, 260, 152, 227, 249, 0,
	0, 149, 274, 259, 209, 192, 193, 148, 0, 244,
	171, 184, 168, 225, 0, 0, 301, 167, 292, 0,
	284, 151, 0, 283, 224, 271, 275, 210, 204, 150,
	273, 208, 203, 196, 175, 188, 236, 202, 237, 189,
	214, 213, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 197, 0, 0, 0, 302, 0, 247,
	230, 0, 0, 0, 245, 200, 272, 238, 277, 263,
	285, 241, 239, 143, 264, 170, 211, 153, 154, 166,
	172, 174, 176, 177, 220, 221, 233, 252, 265, 266,
	267, 169, 162, 246, 163, 186, 164, 144, 254, 165,
	145, 234, 270, 0, 182, 242, 207, 146, 206, 235,
	269, 268, 293, 299, 300, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 180, 0, 281, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 222, 297, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 191, 232,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 279, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	216, 217, 218, 219, 183, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 179, 185, 0,
	187, 159, 231, 181, 288, 194, 0, 223, 190, 255,
	195, 201, 243, 287, 229, 248, 157, 278, 256, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 199, 0,
	240, 178, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 228, 0,
	0, 294, 295, 296, 280, 0, 0, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 604, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 0, 0, 301,
	167, 292, 0, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	302, 0, 247, 230, 0, 0, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 222,
	297, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 0, 216, 217, 218, 219, 183, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 228, 0, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 0, 173, 1297, 0, 198, 0, 0, 0,
	257, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 604, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 262, 276, 156, 253, 289,
	161, 260, 152, 227, 249, 0, 0, 149, 274, 259,
	209, 192, 193, 148, 0, 244, 171, 184, 168, 225,
	0, 0, 301, 167, 292, 0, 284, 151, 0, 283,
	224, 271, 275, 210, 204, 150, 273, 208, 203, 196,
	175, 188, 236, 202, 237, 189, 214, 213, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 197,
	0, 0, 0, 302, 0, 247, 230, 0, 0, 0,
	245, 200, 272, 238, 277, 263, 285, 241, 239, 143,
	264, 170, 211, 153, 154, 166, 172, 174, 176, 177,
	220, 221, 233, 252, 265, 266, 267, 169, 162, 246,
	163, 186, 164, 144, 254, 165, 145, 234, 270, 0,
	182, 242, 207, 146, 206, 235, 269, 268, 293, 299,
	300, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	180, 0, 281, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 222, 297, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 191, 232, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 279, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 216, 217, 218, 219,
	183, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 179, 185, 0, 187, 159, 231, 181,
	288, 194, 0, 223, 190, 255, 195, 201, 243, 287,
	229, 248, 157, 278, 256, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 199, 0, 240, 178, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 228, 0, 0, 294, 295, 296,
	280, 0, 0, 0, 0, 0, 173, 0, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 723, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 0, 0, 301, 167, 292, 0, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 302, 0, 247, 230,
	0, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	241, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 222, 297, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 216,
	217, 218, 219, 183, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 228, 0, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 0, 173,
	0, 0, 198, 0, 0, 0, 257, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1995, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 262, 276, 156, 253, 289, 161, 260, 152, 227,
	249, 0, 0, 149, 274, 259, 209, 192, 193, 148,
	0, 244, 171, 184, 168, 225, 0, 0, 301, 167,
	292, 0, 284, 151, 0, 283, 224, 271, 275, 210,
	204, 150, 273, 208, 203, 196, 175, 188, 236, 202,
	237, 189, 214, 213, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 197, 0, 0, 0, 302,
	0, 247, 230, 0, 0, 0, 245, 200, 272, 238,
	277, 263, 285, 241, 239, 143, 264, 170, 211, 153,
	154, 166, 172, 174, 176, 177, 220, 221, 233, 252,
	265, 266, 267, 169, 162, 246, 163, 186, 164, 144,
	254, 165, 145, 234, 270, 0, 182, 242, 207, 146,
	206, 235, 269, 268, 293, 299, 300, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 180, 0, 281, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 222, 297,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	191, 232, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 279, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 216, 217, 218, 219, 183, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 179,
	185, 0, 187, 159, 231, 181, 288, 194, 0, 223,
	190, 255, 195, 201, 243, 287, 229, 248, 157, 278,
	256, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	199, 0, 240, 178, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	228, 0, 0, 294, 295, 296, 280, 0, 0, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 0,
	0, 301, 167, 292, 0, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 302, 0, 247, 230, 0, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 222, 297, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 216, 217, 218, 219, 183,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 228, 0, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 0, 173, 0, 0, 198, 0,
	0, 0, 257, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 868,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 262, 276, 156,
	253, 289, 161, 260, 152, 227, 249, 0, 0, 149,
	274, 259, 209, 192, 193, 148, 0, 244, 171, 184,
	168, 225, 0, 0, 301, 167, 292, 0, 284, 151,
	0, 283, 224, 271, 275, 210, 204, 150, 273, 208,
	203, 196, 175, 188, 236, 202, 237, 189, 214, 213,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 197, 0, 0, 0, 302, 0, 247, 230, 0,
	0, 0, 245, 200, 272, 238, 277, 263, 285, 241,
	239, 143, 264, 170, 211, 153, 154, 166, 172, 174,
	176, 177, 220, 221, 233, 252, 265, 266, 267, 169,
	162, 246, 163, 186, 164, 144, 254, 165, 145, 234,
	270, 0, 182, 242, 207, 146, 206, 235, 269, 268,
	293, 299, 300, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 180, 0, 281, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 222, 297, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 279, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 216, 217,
	218, 219, 183, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 0, 223, 190, 255, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 199, 0, 240, 178,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 228, 0, 0, 294,
	295, 296, 280, 0, 0, 0, 0, 0, 173, 0,
	0, 198, 0, 0, 0, 257, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 604,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	262, 276, 156, 253, 289, 161, 260, 152, 227, 249,
	0, 0, 149, 274, 259, 209, 192, 193, 148, 0,
	244, 171, 184, 168, 225, 0, 0, 301, 167, 292,
	0, 284, 151, 0, 283, 224, 271, 275, 210, 204,
	150, 273, 208, 203, 196, 175, 188, 236, 202, 237,
	189, 214, 213, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 197, 0, 0, 0, 302, 0,
	247, 230, 0, 0, 0, 245, 200, 272, 238, 277,
	263, 285, 241, 239, 143, 264, 170, 211, 153, 154,
	166, 172, 174, 176, 177, 220, 221, 233, 252, 265,
	266, 267, 169, 162, 246, 163, 186, 164, 144, 254,
	165, 145, 234, 270, 0, 182, 242, 207, 146, 206,
	235, 269, 268, 293, 299, 300, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 180, 0, 281, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 222, 297, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 191,
	232, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 279, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 290, 0, 0, 0, 0, 0,
	0, 216, 217, 218, 219, 183, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 303, 179, 185,
	0, 187, 159, 231, 181, 288, 194, 0, 223, 190,
	255, 195, 201, 243, 287, 229, 248, 157, 278, 256,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 199,
	0, 240, 178, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 228,
	0, 0, 294, 295, 296, 280, 0, 0, 0, 0,
	0, 173, 0, 0, 198, 0, 0, 0, 257, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 262, 276, 156, 253, 289, 161, 260,
	152, 227, 249, 0, 0, 149, 274, 259, 209, 192,
	193, 148, 0, 244, 171, 184, 168, 225, 0, 0,
	301, 167, 292, 0, 284, 151, 0, 283, 224, 271,
	275, 210, 204, 150, 273, 208, 203, 196, 175, 188,
	236, 202, 237, 189, 214, 213, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 197, 0, 0,
	0, 302, 0, 247, 230, 0, 0, 0, 245, 200,
	272, 238, 277, 263, 285, 241, 239, 143, 264, 170,
	211, 153, 154, 166, 172, 174, 176, 177, 220, 221,
	233, 252, 265, 266, 267, 169, 162, 246, 163, 186,
	164, 144, 254, 165, 145, 234, 270, 0, 182, 242,
	207, 146, 206, 235, 269, 268, 293, 299, 300, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 180, 0,
	281, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	222, 297, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 191, 232, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 279,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 216, 217, 218, 219, 183, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	303, 179, 185, 0, 187, 159, 231, 181, 288, 194,
	0, 223, 190, 255, 195, 201, 243, 287, 229, 248,
	157, 278, 256, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 199, 0, 240, 178, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 228, 0, 0, 294, 295, 296, 280, 0,
	0, 0, 0, 0, 173, 0, 0, 198, 0, 0,
	0, 257, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 262, 276, 156, 253,
	289, 161, 260, 152, 227, 249, 0, 0, 149, 274,
	259, 209, 192, 193, 148, 0, 244, 171, 184, 168,
	225, 0, 0, 301, 167, 292, 0, 284, 151, 0,
	283, 224, 271, 275, 210, 204, 150, 273, 208, 203,
	196, 175, 188, 236, 202, 237, 189, 214, 213, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	197, 0, 0, 0, 302, 0, 247, 230, 0, 0,
	0, 245, 200, 272, 238, 277, 263, 285, 241, 239,
	143, 264, 170, 211, 153, 154, 166, 172, 174, 176,
	177, 220, 221, 233, 252, 265, 266, 267, 169, 162,
	246, 163, 186, 164, 144, 254, 165, 145, 234, 270,
	0, 182, 242, 207, 146, 206, 235, 269, 268, 293,
	299, 300, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 180, 0, 281, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 222, 297, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 191, 232, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 279, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	290, 0, 0, 0, 0, 0, 0, 216, 217, 218,
	219, 183, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 303, 179, 185, 0, 187, 159, 231,
	181, 288, 194, 0, 223, 190, 255, 195, 201, 243,
	287, 229, 248, 157, 278, 256, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 199, 0, 240, 178, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 228, 0, 0, 294, 295,
	296, 280, 0, 0, 0, 0, 0, 173, 0, 0,
	198, 0, 0, 0, 257, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 1310, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 262,
	276, 156, 253, 289, 161, 260, 152, 227, 249, 0,
	0, 149, 274, 259, 209, 192, 193, 148, 0, 244,
	171, 184, 168, 225, 0, 0, 301, 167, 292, 0,
	284, 151, 0, 283, 224, 271, 275, 210, 204, 150,
	273, 208, 203, 196, 175, 188, 236, 202, 237, 189,
	214, 213, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 197, 0, 0, 0, 302, 0, 247,
	230, 0, 0, 0, 245, 200, 272, 238, 277, 263,
	285, 241, 239, 143, 264, 170, 211, 153, 154, 166,
	172, 174, 176, 177, 220, 221, 233, 252, 265, 266,
	267, 169, 162, 246, 163, 186, 164, 144, 254, 165,
	145, 234, 270, 0, 182, 242, 207, 146, 206, 235,
	269, 268, 293, 299, 300, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 180, 0, 281, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 222, 297, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 191, 232,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 279, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	216, 217, 218, 219, 183, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 179, 185, 0,
	187, 159, 231, 181, 288, 194, 0, 223, 190, 255,
	195, 201, 243, 287, 229, 248, 157, 278, 256, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 199, 0,
	240, 178, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 1239, 0,
	0, 294, 295, 296, 280, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	198, 0, 0, 0, 257, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 262,
	276, 156, 253, 289, 161, 260, 152, 227, 249, 0,
	0, 149, 274, 259, 209, 192, 193, 148, 0, 244,
	171, 184, 168, 225, 0, 0, 301, 167, 292, 0,
	284, 151, 0, 283, 224, 271, 275, 210, 204, 150,
	273, 208, 203, 196, 175, 188, 236, 202, 237, 189,
	214, 213, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 197, 0, 0, 0, 302, 0, 247,
	230, 0, 0, 0, 245, 200, 272, 238, 277, 263,
	285, 241, 239, 143, 264, 170, 211, 153, 154, 166,
	172, 174, 176, 177, 220, 221, 233, 252, 265, 266,
	267, 169, 162, 246, 163, 186, 164, 144, 254, 165,
	145, 234, 270, 0, 182, 242, 207, 146, 206, 235,
	269, 268, 293, 299, 300, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 180, 0, 281, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 222, 297, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 191, 232,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 279, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 290, 0, 0, 0, 0, 0, 0,
	216, 217, 218, 219, 183, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 179, 185, 0,
	187, 159, 231, 181, 288, 194, 0, 223, 190, 255,
	195, 201, 243, 287, 229, 248, 157, 278, 256, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 199, 0,
	240, 178, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 228, 0,
	0, 294, 295, 296, 280, 0, 0, 0, 0, 0,
	173, 0, 0, 198, 0, 0, 0, 257, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 262, 276, 156, 253, 289, 161, 260, 152,
	227, 249, 0, 0, 149, 274, 259, 209, 192, 193,
	148, 0, 244, 171, 184, 168, 225, 0, 0, 301,
	167, 292, 0, 284, 151, 0, 283, 224, 271, 275,
	210, 204, 150, 273, 208, 203, 196, 175, 188, 236,
	202, 237, 189, 214, 213, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 1222,
	0, 0, 0, 261, 0, 0, 197, 0, 0, 0,
	302, 0, 247, 230, 0, 0, 0, 245, 200, 272,
	238, 277, 263, 285, 241, 239, 143, 264, 170, 211,
	153, 154, 166, 172, 174, 176, 177, 220, 221, 233,
	252, 265, 266, 267, 169, 162, 246, 163, 186, 164,
	144, 254, 165, 145, 234, 270, 0, 182, 242, 207,
	146, 206, 235, 269, 268, 293, 299, 300, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 180, 0, 281,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 222,
	297, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 191, 232, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 279, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 290, 0, 0, 0,
	0, 0, 0, 216, 217, 218, 219, 183, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 303,
	179, 185, 0, 187, 159, 231, 181, 288, 194, 0,
	223, 190, 255, 195, 201, 243, 287, 229, 248, 157,
	278, 256, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 199, 0, 240, 178, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 228, 0, 0, 294, 295, 296, 280, 0, 0,
	0, 0, 0, 173, 0, 0, 198, 0, 0, 0,
	257, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 262, 276, 156, 253, 289,
	161, 260, 152, 227, 249, 0, 0, 149, 274, 259,
	209, 192, 193, 148, 0, 244, 171, 184, 168, 225,
	0, 0, 301, 167, 292, 0, 284, 151, 0, 283,
	224, 271, 275, 210, 204, 150, 273, 208, 203, 196,
	175, 188, 236, 202, 237, 189, 214, 213, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 197,
	0, 0, 0, 302, 0, 247, 230, 0, 0, 0,
	245, 200, 272, 238, 277, 263, 285, 241, 239, 143,
	264, 170, 211, 153, 154, 166, 172, 174, 176, 177,
	220, 221, 233, 252, 265, 266, 267, 169, 162, 246,
	163, 186, 164, 144, 254, 165, 145, 234, 270, 0,
	182, 242, 207, 146, 206, 235, 269, 268, 293, 299,
	300, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	180, 0, 281, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 222, 297, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 191, 232, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 279, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 290,
	0, 0, 0, 0, 0, 0, 216, 217, 218, 219,
	183, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 303, 179, 185, 0, 187, 159, 231, 181,
	288, 194, 0, 223, 190, 255, 195, 201, 243, 287,
	229, 248, 157, 278, 256, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 142, 0, 199, 0, 240, 178, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 228, 0, 0, 294, 295, 296,
	280, 0, 0, 0, 0, 0, 173, 0, 0, 198,
	0, 0, 0, 257, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 262, 276,
	156, 253, 289, 161, 260, 152, 227, 249, 0, 0,
	149, 274, 259, 209, 192, 193, 148, 0, 244, 171,
	184, 168, 225, 0, 0, 301, 167, 292, 0, 284,
	151, 0, 283, 224, 271, 275, 210, 204, 150, 273,
	208, 203, 196, 175, 188, 236, 202, 237, 189, 214,
	213, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 197, 0, 0, 0, 302, 0, 247, 230,
	0, 0, 0, 245, 200, 272, 238, 277, 263, 285,
	330, 239, 143, 264, 170, 211, 153, 154, 166, 172,
	174, 176, 177, 220, 221, 233, 252, 265, 266, 267,
	169, 162, 246, 163, 186, 164, 144, 254, 165, 145,
	234, 270, 0, 182, 242, 207, 146, 206, 235, 269,
	268, 293, 299, 300, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 180, 0, 281, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 222, 297, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 191, 232, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 279, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 282, 0,
	0, 0, 290, 0, 0, 0, 0, 0, 0, 216,
	217, 218, 219, 183, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 303, 179, 185, 0, 187,
	159, 231, 181, 288, 194, 0, 223, 190, 255, 195,
	201, 243, 287, 229, 248, 157, 278, 256, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 199, 0, 240,
	178, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 228, 0, 0,
	294, 295, 296, 280, 0, 0, 0, 0, 100, 173,
	0, 0, 198, 0, 0, 0, 257, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 262, 276, 156, 253, 289, 161, 260, 152, 227,
	249, 0, 0, 149, 274, 259, 209, 192, 193, 148,
	0, 244, 171, 184, 168, 225, 0, 0, 301, 167,
	292, 0, 284, 151, 0, 283, 224, 271, 275, 210,
	204, 150, 273, 208, 203, 196, 175, 188, 236, 202,
	237, 189, 214, 213, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 197, 0, 0, 0, 302,
	0, 247, 230, 0, 0, 0, 245, 200, 272, 238,
	277, 263, 285, 241, 239, 143, 264, 170, 211, 153,
	154, 166, 172, 174, 176, 177, 220, 221, 233, 252,
	265, 266, 267, 169, 162, 246, 163, 186, 164, 144,
	254, 165, 145, 234, 270, 0, 182, 242, 207, 146,
	206, 235, 269, 268, 293, 299, 300, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 180, 0, 281, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 222, 297,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	191, 232, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 279, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 216, 217, 218, 219, 183, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 179,
	185, 0, 187, 159, 231, 181, 288, 194, 0, 223,
	190, 255, 195, 201, 243, 287, 229, 248, 157, 278,
	256, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	199, 0, 240, 178, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	228, 0, 0, 294, 295, 296, 280, 0, 0, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 0,
	0, 301, 167, 292, 0, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 302, 0, 247, 230, 0, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 222, 297, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 216, 217, 218, 219, 183,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 228, 0, 0, 294, 295, 296, 280,
	1279, 0, 0, 0, 0, 173, 0, 0, 198, 0,
	0, 0, 257, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 829, 830, 831, 1281, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 262, 276, 156,
	253, 289, 161, 260, 152, 227, 249, 0, 0, 149,
	274, 259, 209, 192, 193, 148, 0, 244, 171, 184,
	168, 225, 0, 0, 301, 167, 292, 0, 284, 151,
	0, 283, 224, 271, 275, 210, 204, 150, 273, 208,
	203, 196, 175, 188, 236, 202, 237, 189, 214, 213,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 197, 0, 0, 0, 302, 0, 247, 230, 0,
	0, 0, 245, 200, 272, 238, 277, 263, 285, 241,
	239, 143, 264, 170, 211, 153, 154, 166, 172, 174,
	176, 177, 220, 221, 233, 252, 265, 266, 267, 169,
	162, 246, 163, 186, 164, 144, 254, 165, 145, 234,
	270, 0, 182, 242, 207, 146, 206, 235, 269, 268,
	293, 299, 300, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 180, 0, 281, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 222, 297, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 191, 232, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 279, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 290, 0, 0, 0, 0, 0, 0, 216, 217,
	218, 219, 183, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 303, 179, 185, 0, 187, 159,
	231, 181, 288, 194, 0, 223, 190, 255, 195, 201,
	243, 287, 229, 248, 157, 278, 256, 205, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 198, 0, 0, 0, 257,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 199, 0, 240, 178,
	829, 830, 831, 1281, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	295, 296, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 262, 276, 156, 253, 289, 161,
	260, 152, 227, 249, 0, 0, 149, 274, 259, 209,
	192, 193, 148, 0, 244, 171, 184, 168, 225, 0,
	0, 301, 167, 292, 0, 284, 151, 0, 283, 224,
	271, 275, 210, 204, 150, 273, 208, 203, 196, 175,
	188, 236, 202, 237, 189, 214, 213, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 197, 0,
	0, 0, 302, 0, 247, 230, 0, 0, 0, 245,
	200, 272, 238, 277, 263, 285, 241, 239, 143, 264,
	170, 211, 153, 154, 166, 172, 174, 176, 177, 220,
	221, 233, 252, 265, 266, 267, 169, 162, 246, 163,
	186, 164, 144, 254, 165, 145, 234, 270, 0, 182,
	242, 207, 146, 206, 235, 269, 268, 293, 299, 300,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 180,
	0, 281, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 222, 297, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 191, 232, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	279, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 290, 0,
	0, 0, 0, 0, 0, 216, 217, 218, 219, 183,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 179, 185, 0, 187, 159, 231, 181, 288,
	194, 0, 223, 190, 255, 195, 201, 243, 287, 229,
	248, 157, 278, 256, 205, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 198, 0, 0, 0, 257, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 199, 0, 240, 178, 829, 830, 831,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 295, 296, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 262, 276, 156, 253, 289, 161, 260, 152, 227,
	249, 0, 0, 149, 274, 259, 209, 192, 193, 148,
	0, 244, 171, 184, 168, 225, 0, 0, 301, 167,
	292, 0, 284, 151, 0, 283, 224, 271, 275, 210,
	204, 150, 273, 208, 203, 196, 175, 188, 236, 202,
	237, 189, 214, 213, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 197, 0, 0, 0, 302,
	0, 247, 230, 0, 0, 0, 245, 200, 272, 238,
	277, 263, 285, 241, 239, 143, 264, 170, 211, 153,
	154, 166, 172, 174, 176, 177, 220, 221, 233, 252,
	265, 266, 267, 169, 162, 246, 163, 186, 164, 144,
	254, 165, 145, 234, 270, 0, 182, 242, 207, 146,
	206, 235, 269, 268, 293, 299, 300, 304, 0, 305,
	306, 0, 0, 0, 914, 915, 916, 913, 0, 0,
	0, 0, 0, 0, 0, 298, 180, 0, 281, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 222, 297,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	191, 232, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 1734, 0, 0, 0, 258, 279, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 290, 0, 1360, 0, 0,
	0, 0, 216, 217, 218, 219, 183, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 303, 179,
	185, 0, 187, 159, 231, 181, 288, 194, 0, 223,
	190, 255, 195, 201, 243, 287, 229, 248, 157, 278,
	256, 205, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 27, 87, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 1722, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 142, 0,
	199, 0, 240, 178, 0, 1741, 1745, 1747, 1749, 1751,
	1752, 1754, 51, 1758, 1755, 1756, 1757, 94, 0, 1736,
	1737, 1738, 1739, 1720, 1721, 1742, 1953, 1723, 0, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1740,
	0, 0, 0, 294, 295, 296, 280, 1744, 1746, 1748,
	1750, 1753, 0, 0, 0, 1237, 1356, 0, 1353, 0,
	0, 0, 1355, 1352, 1354, 1358, 1359, 0, 0, 0,
	1357, 0, 0, 0, 0, 0, 1953, 0, 0, 2031,
	0, 1735, 0, 0, 88, 89, 0, 90, 91, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1237, 350, 0, 349, 353,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 86, 95, 0, 49, 0, 0, 0, 363, 0,
	0, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 80, 79, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1363, 1364, 1365, 1366, 1367, 1368,
	1361, 1362, 350, 0, 349, 353, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 82, 83, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 364, 0, 0,
	1932, 0, 0, 0, 1934, 1936, 1938, 0, 1940, 1941,
	1942, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 59, 1939,
	0, 0, 84, 0, 60, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 343, 342, 346,
	0, 0, 0, 0, 0, 348, 0, 0, 1954, 0,
	1932, 1743, 0, 0, 1934, 1936, 1938, 352, 1940, 1941,
	1942, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 0, 0,
	0, 344, 0, 61, 0, 336, 0, 0, 0, 0,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 1931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 342, 346, 1947, 0, 0, 0,
	0, 348, 1952, 1937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 0, 70, 0, 0, 0, 1931,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 347,
	351, 354, 0, 355, 356, 0, 0, 357, 358, 359,
	0, 0, 361, 362, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 1937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 351, 354, 0, 355,
	356, 0, 0, 357, 358, 359, 0, 0, 361, 362,
}

var yyPact = [...]int{
	20869, -1000, -297, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18815, -1000, -1000,
	1547, -1000, 7924, 19268, 61, 19268, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 261,
	-1000, 18362, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 223,
	21006, 163, -1000, 1889, -1000, -1000, -1000, -1000, 181, 290,
	17909, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 862, 13, 290, 371, 377,
	400, 400, 9283, 1889, 238, 17, -1000, 683, 20869, 201,
	19268, -1000, 434, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1889, 1889, 19268, -72, 660, -1000, 228, 198, 289, 433,
	-1000, -1000, -1000, -1000, 1919, -1000, 19268, 1645, 19268, -1000,
	925, 190, 21092, 1838, 1518, 392, 1764, -1000, -1000, 1753,
	-1000, 19, -7, 165, -1000, -1000, 180, -1000, -1000, -1000,
	-1000, -1000, 72, -1000, 10, -1000, 1, -1000, -1000, -1000,
	-102, -1000, -1000, -1000, -1000, -183, 1821, 1881, 1606, 1903,
	1861, 1859, 1853, 1851, 11, 221, 221, 221, 230, 221,
	257, -1000, -1000, -1000, -1000, -1000, -1000, 332, -1000, -1000,
	-1000, -1000, 1525, 19268, -1000, 1608, 417, 417, 586, 186,
	-1000, -1000, -126, -132, 417, 417, -132, 33, -1000, 1869,
	1865, -1000, -1000, -1000, -1000, -1000, -1000, 223, 223, 241,
	-1000, -187, -1000, 359, -1000, 351, -1000, 276, 179, 1530,
	693, -1000, 621, 19268, 19268, 19268, 621, 621, 11107, 10654,
	430, -1000, 1881, 1606, -1000, 1403, 1261, 1606, 223, 223,
	223, 223, 223, 223, 223, 19268, 5596, 5596, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 229, 1752, -1000, 19268,
	1881, 1821, 1881, -1000, 428, 895, 1125, -1000, -1000, 228,
	1496, -1000, 636, -1000, -1000, -1000, -1000, 19268, 212, -1000,
	1100, 1750, -1000, 280, 1516, 1554, -1000, 34, 8009, 15184,
	925, 15184, 19268, -1000, -1000, -1000, -1000, -104, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4, -1000,
	-1000, -288, 1821, 6060, -1000, -1000, 6060, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 252, 221, -1000, 1158, 692,
	15184, 925, 992, 19268, 221, 241, -1000, 19268, 1525, 1843,
	19268, 1910, 6988, 1910, 19268, -1000, -1000, 417, 417, -1000,
	586, 586, -1000, -1000, -107, 1910, 1910, -118, 19268, 19268,
	221, -1000, -1000, 1158, 15184, 14731, -1000, -154, 368, 353,
	361, -1000, -1000, 1929, -1000, -1000, 1488, 274, 10201, 227,
	15184, 3734, -1000, -1000, 621, 621, 621, 3734, 3734, 398,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19268, 1821, -1000,
	-1000, -1000, -1000, -1000, 1158, 15184, 925, 19268, 19268, 19268,
	20475, -1000, 1548, -1000, -1000, 8830, 422, 6060, 885, 1748,
	-1000, -1000, 1747, 1746, 1745, 1744, 1730, 1729, 1726, -1000,
	1678, -1000, -1000, 1725, 1714, 1713, 1709, -1000, -1000, -1000,
	-1000, -1000, -1000, 1708, -1000, -1000, -1000, 1707, 1678, -1000,
	-1000, 1706, 1705, 1692, 1691, 1690, -1000, -1000, -1000, -1000,
	-1000, -1000, 1124, 1122, 986, -1000, -1000, -1000, -1000, 3270,
	6988, 6988, 6988, 6988, -1000, -1000, 1634, 6060, 1688, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7452, -1000, 1687, 1682,
	1681, 1680, 1679, 1678, 1672, 1109, 1663, 1659, 1658, 6988,
	1657, 1653, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1548, -1000, -286, -1000, 9748, 19268, 19268, -1000,
	1821, -1000, 1821, 2371, -1000, 1877, -1000, 228, 99, -1000,
	-1000, -1000, -1000, -1000, -1000, 421, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1524, -1000, 19268, -1000, -1000,
	34, 15184, 652, -1000, -1000, -1000, -1000, -1000, -1000, 142,
	-1000, -1000, 129, -1000, 248, -44, 1486, -1000, -1000, 12,
	126, 67, 1107, -1000, 1127, 419, 1522, -1000, 863, 17456,
	19268, -26, -1000, 1834, 1471, -1000, -44, 1488, 1553, -1000,
	-1000, -1000, 1811, 19268, 17003, -1000, 1652, 1481, -1000, -1000,
	6060, -1000, -1000, 1910, 1910, 1910, 417, 20475, 586, 19268,
	586, -1000, -1000, 586, -1000, 418, -1000, 19268, -26, 1471,
	1728, 1517, -1000, -1000, -1000, -1000, 1842, 19721, 238, -1000,
	-1000, 364, 340, 347, 925, 245, -1000, -1000, 1488, -1000,
	-1000, -1000, 1644, 655, -1000, -1000, 6988, -1000, 800, -1000,
	3734, 3734, 3734, -1000, -1000, 12919, -1000, -1000, -1000, 1519,
	1488, 1763, 1515, -1000, 1515, -1000, -1000, -1000, 1910, 5596,
	-1000, 14731, -1000, 6060, 6060, 6060, 6060, -1000, 16543, -1000,
	16090, -1000, 275, 6524, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 6060, 1849, 1849, 1849, 6060, 672, 6060, 6060, -1000,
	766, 8048, 1849, 1849, 1849, 1849, 1849, -1000, 2798, 1849,
	1849, 1849, 1849, -1000, -1000, 6988, 6988, 6988, 6988, 6988,
	6988, 6988, 6988, 6988, 6988, 6988, 6988, 1633, 663, 6988,
	6988, 6988, 1261, 1643, 1513, -1000, -1000, -1000, -1000, -1000,
	670, 800, 6060, 20672, 6060, 6060, 6060, -1000, 1392, 1386,
	-1000, -1000, 6060, -1000, 6060, 6988, 6060, -1000, 1849, 1093,
	1910, 1427, -1000, 1642, -1000, 1466, 1802, -1000, 414, 1503,
	-1000, 654, 1464, -1000, -1000, -1000, -1000, 413, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -73, -1000, -1000, 19268, 1100, 1456,
	652, 1420, -1000, 244, 409, 408, -1000, 15184, 8, 15184,
	-1000, 15184, -1000, -1000, 178, -1000, 19268, 1819, -1000, -1000,
	-1000, 1085, -300, -149, 6060, 6060, 19268, 6060, -1000, -1000,
	-1000, 1608, 686, 1640, -116, 628, -1000, 394, 15184, 176,
	-1000, 1762, 92, -1000, 1811, -1000, 443, -1000, 1637, 19268,
	1458, -1000, 405, 20869, -1000, 19268, 800, -1000, -1000, -1000,
	1910, -1000, 417, -1000, 417, 586, 19268, -1000, -1000, -116,
	394, 19268, 14731, 14731, 14731, 14731, -1000, 1791, 1784, -1000,
	1794, 1793, 1800, 19268, 14731, 19268, -1000, -1000, -1000, 20098,
	-1000, -1000, -1000, -1000, 1375, 1889, -1000, -1000, -1000, 336,
	1488, 15184, 1070, 227, -1000, -1000, -1000, -1000, -1000, 19268,
	19268, 1908, -1000, 1450, 1710, -1000, 712, 712, 705, -1000,
	-1000, 402, -1000, -1000, 296, -1000, -1000, -1000, -1000, -1000,
	1634, -1000, -1000, -1000, 1371, 1418, 800, 6060, -1000, -1000,
	6060, 6060, 1248, 6060, 1359, 1452, 1444, -1000, 1341, 1918,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6060,
	6060, 6060, 6060, 6060, 878, 5132, -1000, -1000, -1000, 6060,
	6060, 6060, 6060, 700, 1950, -1000, 617, 617, 407, 407,
	407, 407, 407, 813, 813, -1000, -1000, -1000, 3270, 1633,
	6988, 6988, 6988, 207, 2234, 2784, -1000, 6060, 701, -1000,
	6060, 961, -1000, 1337, 1121, 1319, 1307, -1000, -1000, 1179,
	1305, 2160, 1299, 6060, 1441, 1908, -286, 4662, 197, 19268,
	-286, 19268, 19268, 4662, -1000, 19268, 2371, 894, -1000, -1000,
	-1000, 1916, 15184, 925, 486, 640, -1000, 9, -1000, 136,
	250, 1066, -1000, 256, 648, 1011, -90, -83, 800, 800,
	389, -1000, 1840, 1833, 8377, 773, -1000, -1000, 1060, -1000,
	243, -1000, -1000, -1000, 293, 7, 888, 240, -1000, 1157,
	19268, -1000, -1000, -1000, -1000, -1000, 628, 628, 628, 8377,
	201, 1370, 388, 14731, 19268, -1000, 14278, 1280, -1000, -1000,
	1910, 1910, 417, -1000, 773, 243, 1340, -1000, 647, 1757,
	1761, 1757, -1000, -1000, -1000, -1000, 1781, -1000, 1778, -1000,
	-1000, 1340, -1000, 1608, -1000, -1000, -1000, 1420, 1267, -1000,
	-1000, -1000, -1000, 1906, 1901, 15637, -1000, -1000, -1000, -1000,
	-1000, 6060, 1624, 1598, 1555, 1013, 1432, -1000, -1000, -1000,
	-1000, 6060, 1551, 1483, 1469, 1436, 1400, -1000, 6060, 6060,
	789, 1374, 1355, 1268, 1230, 1410, -1000, 207, 2234, 2147,
	-1000, 6988, 6988, 1222, 662, -1000, 6060, 691, 697, 12013,
	-1000, 6060, -1000, -1000, -1000, 12013, -1000, 6988, -1000, 1212,
	1059, 1906, -1000, 1264, 1439, -1000, -286, -1000, -1000, 1427,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15184,
	-1000, 135, -1000, -1000, -1000, -1000, -1000, -1000, -59, -1000,
	19268, 1054, 121, -1000, 641, -290, -77, 1900, 1899, 19268,
	238, 19268, 1262, 1430, -1000, -1000, -1000, 20777, 620, -1000,
	19268, 720, 395, 221, 395, 719, 1632, -1000, -1000, -1000,
	1053, -46, -1000, -1000, 1052, 1018, 883, -1000, -1000, 942,
	393, -36, -1000, -1000, -1000, -1000, -1000, -1000, 1629, 12013,
	12466, 1017, 1256, 19721, 14731, 14278, 1275, -1000, 386, -1000,
	-1000, -1000, -1000, 1910, -1000, -1000, 1890, 19268, 4662, -1000,
	-1000, 6060, 1628, -1000, 6060, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 6060, 6060, -1000, -1000, 800, -1000, -1000, -1000,
	1250, -1000, 320, 320, -15, -1000, -1000, -1000, 1573, -1000,
	1611, 1611, 1573, 1573, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1627, 1619, -1000, 1573, 1610, 1610, 1573,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1614, 1614, 1616, 1614, -1000,
	1168, -1000, -1000, -1000, -1000, -1000, 1148, 1139, 6060, -1000,
	-1000, -1000, -1000, -1000, -1000, 6988, -1000, -1000, -1000, -1000,
	800, 6060, 1243, -1000, 1573, 1611, -1000, 1573, 1610, 1573,
	320, 320, 1229, 772, 1227, 1684, -1000, 1223, -1000, -1000,
	4662, 1427, 1420, -1000, -1000, -118, 120, -1000, 1011, 1008,
	-292, 1005, -1000, 1898, 1002, 926, -1000, 1608, 20980, 8377,
	1274, -1000, -1000, 19268, 19268, -1000, 19268, 19268, 221, 6060,
	-1000, -1000, 177, -1000, -1000, 38, -1000, -1000, 899, 284,
	-1000, 13825, -1000, -1000, -1000, -1000, -1000, 4, 1910, 1275,
	386, -1000, -1000, 462, -1000, 1881, -1000, -1000, 800, 19268,
	800, 800, 1418, -1000, -1000, -1000, -1000, -1000, -19, -1000,
	-1000, -1000, -1000, 881, -1000, 879, -1000, -1000, -1000, 1001,
	1001, -1000, -1000, 845, -1000, -1000, -1000, 843, -1000, -1000,
	837, -1000, -1000, -1000, -1000, 1131, -1000, 800, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6060, -1000,
	-1000, -1000, -1000, -1000, -91, -93, -1000, 995, -1000, -1000,
	-294, 835, -1000, 987, -80, -1000, -1000, 1822, 200, 20930,
	-1000, 628, 628, 436, 628, 628, 628, 628, 160, 150,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 1607, -1000, -1000, 1274, -1000, -1000,
	728, 6988, -1000, -1000, 977, 12466, 437, 460, 1605, -1000,
	108, 718, 704, -1000, 19268, -1000, 1603, 1538, 74, 1602,
	-1000, 1597, 1596, 19268, 1044, 242, 976, -1000, -1000, 37,
	-1000, -1000, 1407, -1000, 1573, 6060, -1000, -118, 1890, -1000,
	-1000, 1402, -1000, -1000, 1211, 1201, 1395, -1000, 1390, 1194,
	1385, 1365, -1000, 980, 225, -88, -93, -1000, 1897, -84,
	1896, 1895, 633, -1000, 1568, -1000, -1000, 1893, 238, -1000,
	1892, 20980, -1000, 834, 830, 628, 628, 828, 974, 972,
	971, 628, 628, 827, 965, 20098, 817, 809, 806, 882,
	962, 456, 874, 873, 770, 19268, 1567, 906, -1000, -1000,
	2234, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 778, 1566, -1000, -1000, 1562, 13825, 100, 100,
	13825, 13825, 13825, 1561, 278, -1000, -61, -1000, -1000, -1000,
	13825, 1818, 966, -1000, 1881, -1000, -1000, -1000, -1000, 959,
	-1000, -1000, -1000, 777, -1000, 769, -1000, 1560, 767, -77,
	1885, -1000, 926, 1884, 926, 926, 957, 19268, 926, -1000,
	133, -1000, -1000, -1000, 12013, 12013, -1000, -1000, -1000, -1000,
	954, 948, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 171, 19268, 1358, -1000, 629, 1189,
	6060, -226, 13825, 1349, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1346, 1344, 1336, 13825, -1000, -1000, -1000, 106, -1000,
	130, -1000, -1000, 1818, -1000, -1000, 1165, 1141, 1848, 11560,
	-92, -1000, 943, -1000, 926, -1000, -1000, -302, 1333, -1000,
	-1000, 88, 204, 172, -1000, 253, -1000, -1000, -1000, -1000,
	-1000, -1000, 168, 1327, -1000, 906, 902, -1000, 807, 1760,
	-1000, 6, 1314, -1000, -1000, -1000, -1000, 1310, -1000, -1000,
	628, 794, 56, -1000, -1000, -1000, -1000, -1000, -1000, 19268,
	-1000, 1287, -1000, -1000, -1000, 385, -1000, -1000, -1000, -1000,
	-1000, 19268, 86, 763, 6988, 1556, 6988, 1550, 102, 1546,
	-1000, -1000, -1000, -1000, -1000, 278, -1000, -1000, 1759, 1731,
	1914, -1000, -1000, -1000, -1000, 130, 130, 130, 130, 5,
	761, -1000, 992, 1412, -1000, 625, -1000, 13372, 19268, -1000,
	1540, 1883, -1000, 1536, 19268, 1031, 19268, 1537, 602, 6988,
	-1000, -1000, 1922, -1000, 1915, 439, 439, -1000, -1000, -1000,
	19268, 4198, -1000, 384, -1000, 199, 97, -1000, 1279, -1000,
	1277, 19268, 757, 999, -1000, -1000, -1000, 788, 122, -1000,
	-1000, -1000, 800, 19268, 1260, -1000, 1130, 80, -1000, -1000,
	1239, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 199, 1799,
	-1000, 755, -1000, -1000, 1712, 192, -1000, -1000, 1712, 82,
	-1000, 183, -1000, -1000, 1219, -1000, 969, 1535, -1000, 82,
	20980, 6060, -1000, 20980, 1200, -1000,
}

var yyPgo = [...]int{
	0, 122, 2300, 182, 158, 154, 181, 2293, 1862, 1861,
	2291, 2290, 2287, 2283, 2282, 2281, 2280, 2279, 2278, 2265,
	2251, 2250, 2248, 2243, 2242, 2241, 2240, 178, 2239, 2238,
	2236, 2235, 2234, 2233, 2231, 2230, 2229, 2228, 2227, 2224,
	2223, 147, 2222, 1858, 2221, 2220, 2217, 2216, 2215, 150,
	2214, 2213, 2212, 2211, 2210, 2209, 2207, 2206, 2205, 2202,
	2200, 2199, 2198, 174, 53, 2196, 48, 58, 109, 196,
	73, 218, 205, 137, 76, 123, 169, 118, 2195, 2194,
	114, 24, 130, 2193, 46, 44, 35, 200, 103, 50,
	66, 94, 2191, 2189, 90, 2188, 2187, 98, 2186, 54,
	2185, 80, 41, 92, 25, 2184, 2183, 2182, 85, 2180,
	2179, 2178, 2177, 88, 2176, 64, 62, 2174, 2173, 2172,
	2171, 2170, 43, 2167, 51, 2166, 2165, 2164, 2162, 2161,
	2160, 2159, 12, 14, 17, 2158, 2157, 18, 2, 2155,
	161, 57, 86, 111, 2154, 380, 2153, 2150, 2149, 115,
	2148, 134, 2147, 2146, 2145, 2144, 2143, 11, 2141, 49,
	2140, 2135, 56, 2134, 2133, 47, 2132, 2131, 2129, 102,
	38, 61, 97, 2128, 2127, 78, 152, 16, 26, 0,
	144, 31, 2124, 2123, 2122, 193, 143, 160, 173, 125,
	268, 119, 2120, 2119, 60, 2115, 124, 2114, 112, 83,
	39, 2113, 87, 2109, 40, 89, 2108, 110, 2106, 135,
	1, 108, 2105, 163, 2101, 2100, 2099, 127, 2096, 2095,
	70, 126, 2094, 2093, 2092, 29, 2090, 30, 20, 2089,
	100, 176, 2088, 128, 95, 131, 129, 84, 165, 171,
	72, 116, 786, 113, 81, 19, 2086, 167, 2085, 244,
	166, 141, 2080, 2079, 177, 333, 145, 2076, 132, 7,
	2074, 2073, 8, 2072, 22, 2071, 2070, 2069, 2055, 6,
	2054, 2053, 2052, 3, 5, 2051, 4, 107, 45, 67,
	2050, 68, 75, 2048, 2047, 2044, 2042, 2039, 203, 2038,
	2037, 2035, 2033, 2032, 2031, 2030, 82, 2029, 2028, 2027,
	2025, 65, 2023, 2022, 2021, 2019, 2000, 32, 1995, 1991,
	23, 1989, 27, 1988, 1987, 1986, 13, 136, 1985, 1983,
	15, 1982, 1980, 9, 10, 1979, 1978, 55, 42, 37,
	79, 77, 1977, 21, 1976, 99, 1974, 1973, 139, 1972,
	105, 1971, 120, 170, 223, 1970, 151, 1969, 1968, 1967,
	1965, 1964, 1963, 1962, 777, 1961, 1960, 175, 63, 164,
	1945, 1944, 156, 1943, 117, 96, 91, 146, 1941, 149,
	1940, 1939, 1938, 162, 1937,
}

//line mysql_sql.y:7231
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 370, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 57, 326, 326, 325, 325, 324,
	324, 323, 323, 323, 322, 322, 322, 321, 321, 320,
	320, 319, 319, 317, 317, 318, 316, 315, 315, 313,
	313, 311, 311, 312, 312, 306, 306, 309, 309, 307,
	307, 307, 307, 310, 305, 305, 305, 304, 304, 56,
	56, 56, 244, 244, 55, 55, 258, 258, 258, 258,
	258, 256, 256, 256, 256, 256, 256, 255, 255, 254,
	254, 259, 259, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 50, 50, 50, 50,
	53, 54, 252, 252, 252, 252, 252, 253, 253, 253,
	51, 52, 52, 243, 243, 248, 248, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 251,
	251, 251, 250, 250, 249, 249, 44, 44, 44, 47,
	46, 242, 242, 242, 242, 242, 242, 242, 242, 45,
	45, 45, 45, 45, 45, 42, 42, 42, 42, 42,
	41, 41, 43, 43, 241, 241, 240, 60, 60, 60,
	60, 60, 60, 60, 59, 59, 62, 62, 61, 49,
	49, 49, 49, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 349, 349, 349, 351, 351, 183, 184, 371,
	182, 182, 182, 345, 345, 346, 347, 348, 348, 348,
	58, 7, 7, 39, 40, 369, 369, 288, 288, 196,
	196, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 291, 292, 192,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 31, 31, 38, 372, 372, 372, 36, 37, 287,
	287, 287, 35, 34, 33, 32, 32, 30, 30, 29,
	29, 189, 189, 191, 191, 187, 373, 373, 264, 264,
	190, 190, 28, 28, 28, 188, 188, 166, 186, 186,
	186, 6, 10, 10, 10, 10, 10, 10, 10, 10,
	16, 18, 238, 238, 235, 17, 13, 12, 15, 11,
	14, 5, 5, 5, 5, 8, 8, 9, 75, 75,
	103, 103, 358, 358, 354, 354, 355, 355, 355, 356,
	356, 357, 357, 4, 295, 295, 295, 295, 295, 295,
	334, 334, 334, 335, 93, 93, 88, 88, 296, 296,
	211, 336, 336, 303, 303, 302, 302, 301, 301, 91,
	91, 92, 92, 79, 79, 63, 63, 308, 308, 308,
	308, 314, 314, 285, 285, 129, 129, 160, 160, 161,
	161, 67, 67, 68, 68, 68, 68, 68, 68, 342,
	342, 344, 344, 343, 90, 90, 86, 86, 87, 87,
	87, 85, 85, 84, 83, 83, 82, 81, 81, 81,
	70, 70, 69, 69, 69, 69, 69, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 71,
	71, 350, 350, 350, 289, 289, 289, 294, 294, 142,
	142, 143, 143, 141, 141, 72, 72, 73, 73, 73,
	73, 140, 140, 139, 74, 74, 80, 76, 76, 78,
	78, 78, 78, 150, 150, 149, 149, 149, 149, 96,
	96, 148, 147, 147, 147, 95, 95, 94, 94, 89,
	89, 77, 77, 146, 374, 374, 144, 175, 175, 175,
	181, 181, 174, 174, 174, 174, 174, 185, 180, 180,
	176, 176, 177, 177, 177, 3, 3, 3, 3, 22,
	22, 22, 22, 26, 26, 352, 352, 19, 359, 362,
	360, 363, 363, 363, 364, 364, 364, 365, 365, 20,
	361, 366, 366, 366, 239, 239, 236, 237, 237, 234,
	233, 233, 233, 368, 368, 367, 367, 367, 178, 178,
	21, 230, 230, 231, 232, 232, 224, 224, 224, 224,
	25, 228, 228, 229, 229, 229, 229, 229, 225, 225,
	227, 227, 223, 223, 223, 223, 223, 24, 222, 222,
	220, 220, 218, 218, 219, 219, 217, 217, 217, 221,
	221, 23, 23, 65, 64, 64, 64, 64, 66, 163,
	163, 162, 162, 290, 290, 260, 260, 263, 263, 270,
	270, 271, 271, 269, 269, 276, 276, 275, 275, 274,
	274, 273, 273, 272, 272, 267, 267, 266, 266, 261,
	261, 261, 261, 261, 262, 262, 265, 265, 268, 268,
	120, 120, 121, 121, 121, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 332, 332, 333, 123, 123, 123,
	127, 127, 127, 127, 127, 127, 122, 122, 124, 124,
	104, 104, 102, 102, 97, 97, 98, 98, 99, 99,
	100, 100, 101, 101, 101, 101, 101, 101, 246, 246,
	330, 330, 331, 331, 327, 327, 327, 329, 329, 329,
	329, 329, 328, 328, 105, 158, 158, 158, 179, 179,
	179, 157, 157, 157, 119, 119, 118, 118, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 245, 245, 193, 193, 194, 194, 137, 135, 135,
	136, 136, 136, 136, 133, 134, 132, 132, 132, 132,
	132, 131, 131, 130, 130, 130, 226, 226, 128, 128,
	126, 126, 126, 125, 125, 125, 277, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 203, 203, 208, 208, 341, 341, 340, 106, 106,
	106, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	115, 115, 115, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 300, 300,
	300, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 156, 353, 353, 353, 337, 337, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 154, 154,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 212, 212, 213, 213, 297, 297, 297,
	297, 297, 297, 298, 298, 299, 299, 299, 299, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 201, 151, 151,
	151, 214, 209, 209, 210, 210, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 206, 206, 206, 206,
	206, 198, 198, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 205, 205, 207, 207, 216, 216, 216, 215,
	215, 215, 215, 215, 215, 215, 117, 117, 117, 117,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	108, 108, 108, 108, 112, 112, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	113, 113, 113, 113, 111, 111, 111, 111, 111, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 110, 159, 159, 278, 278, 281,
	281, 279, 279, 280, 282, 282, 282, 283, 283, 283,
	284, 284, 284, 286, 286, 165, 165, 165, 171, 171,
	164, 164, 172, 172, 173, 173, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 9, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 0,
	3, 0, 3, 0, 3, 0, 2, 1, 2, 3,
	4, 3, 3, 1, 0, 1, 1, 0, 1, 8,
	5, 7, 0, 3, 8, 5, 1, 3, 3, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 3, 1,
	4, 1, 3, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 6, 3, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 0, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 2, 4, 3, 1,
	1, 1, 1, 2, 3, 4, 7, 2, 3, 3,
	4, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 7, 7, 0, 3, 0, 2, 0,
	1, 1, 1, 1, 4, 2, 2, 3, 3, 4,
	5, 3, 4, 4, 2, 2, 2, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 5, 1, 1, 1, 5, 5, 0,
	1, 1, 2, 2, 3, 6, 7, 4, 4, 7,
	8, 0, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 1, 3, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 3, 1, 4, 6, 4, 4, 4,
	3, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 4, 3, 4, 5, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 4, 3, 0, 1, 2, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 11, 0, 1, 7, 1, 4,
	1, 3, 4, 3, 0, 1, 1, 0, 2, 7,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 5, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 10, 9, 2, 2, 6, 10, 5, 5, 1,
	3, 0, 3, 0, 1, 0, 6, 0, 4, 0,
	3, 1, 3, 4, 5, 0, 3, 1, 3, 2,
	3, 1, 2, 0, 6, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 6, 5, 0, 3, 0, 1,
	0, 1, 1, 3, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 4, 1, 3, 3, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 1, 7, 7, 7, 7, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 1, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 3, 5, 2, 2, 2, 2, 1,
	1, 2, 5, 6, 6, 6, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 5, 4, 4, 5, 5, 5, 5,
	4, 5, 5, 5, 5, 5, 5, 5, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 5, 4,
	6, 6, 7, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	4, 2, 3, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 3, 4, 3, 4, 1, 3, 4, 3, 4,
	1, 1, 1, 3, 4, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -370, -2, -1, -3, -4, -5, -6, -48, -59,
	-61, -62, -27, -7, -58, -41, -42, -44, -50, -55,
	-56, -57, -67, -22, -21, -20, -19, 12, -8, -9,
	-342, -10, -182, -183, -184, -371, -28, -29, -30, -32,
	-33, -34, -35, -36, -37, -38, -31, -40, -39, 195,
	-43, 53, -45, -46, -47, -51, -52, -53, -54, 309,
	315, 364, -68, -70, -23, -24, -25, -26, 191, 14,
	436, -11, -14, -12, -15, -13, -17, -18, -16, 213,
	212, 32, 276, 277, 313, 211, 192, 13, 125, 126,
	128, 129, 25, -69, 58, 193, -71, 10, 482, -79,
	33, -102, -179, 62, -167, -170, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 433, 230, 254, 257, 264, 125, 144, 138,
	166, 158, 133, 234, 235, 69, 128, 393, 79, 378,
	363, 131, 249, 251, 253, 256, 236, 154, 149, 248,
	232, 147, 237, 34, 238, 171, 239, 240, 438, 374,
	291, 380, 261, 361, 148, 375, 252, 377, 172, 176,
	385, 315, 142, 143, 382, 387, 170, 210, 37, 435,
	222, 388, 174, 169, 165, 396, 265, 263, 168, 141,
	164, 233, 42, 178, 177, 179, 357, 358, 359, 360,
	241, 242, 303, 384, 161, 150, 295, 134, 22, 391,
	217, 379, 316, 243, 258, 266, 173, 175, 224, 229,
	437, 228, 262, 389, 146, 221, 250, 216, 392, 135,
	309, 318, 244, 129, 255, 386, 395, 41, 331, 140,
	132, 207, 126, 226, 231, 245, 246, 247, 268, 267,
	259, 162, 223, 167, 139, 163, 127, 225, 394, 332,
	481, 293, 346, 160, 157, 227, 200, 390, 381, 130,
	350, 333, 155, 269, 478, 479, 480, 304, 290, 270,
	271, 153, 214, 373, 272, 274, 275, -43, -9, -8,
	-69, -70, -186, 23, 361, -49, 362, 195, 58, -179,
	-5, -4, -41, -67, -185, -179, 276, -185, 198, -179,
	228, 345, -288, 203, -255, -230, 229, -254, -231, -257,
	-232, 26, 192, 191, 225, 14, 193, 313, 199, 12,
	10, 314, 211, 13, 315, 317, 318, 321, 322, 323,
	36, 326, 327, 62, 65, 236, -84, -85, -145, 19,
	6, 7, 8, 9, -290, 292, 346, 228, -224, -222,
	272, 324, 208, 207, 80, 398, 197, -354, -355, 188,
	189, 190, -344, 430, -343, -179, 431, -165, -372, -287,
	381, 380, -190, 379, 372, 383, 374, 191, 79, 159,
	156, 199, 382, 37, 385, 386, 375, 292, 346, -354,
	130, 127, -242, 85, 135, 134, -242, 228, 35, -248,
	356, -247, -249, 385, 386, 396, 63, 64, 384, -165,
	-179, 79, -85, -145, -84, -68, -70, -342, 292, 346,
	228, 199, 198, 200, 398, 276, -289, -350, 26, -294,
	185, 186, 187, 27, 28, -1, -91, 220, -102, 124,
	-85, -84, -85, -157, -179, 363, 94, -49, -49, 362,
	-345, -346, -347, -349, 195, 362, 361, 124, 15, -185,
	56, -102, -231, 228, -255, -230, 30, 55, 59, 201,
	59, 55, 58, 311, 325, 346, 312, 324, 200, 228,
	325, 228, 372, 200, 316, 319, 320, 373, -304, 396,
	-63, 33, -87, 21, -71, -70, 20, 26, 27, 26,
	27, 26, 27, 26, 27, -352, 198, 430, -220, 203,
	-220, -220, 199, -220, 198, -356, 137, 59, -344, -90,
	58, -189, 102, -189, -373, 15, 104, 227, 226, 376,
	373, -264, 377, 378, -190, -189, -189, -190, 198, 200,
	398, 25, 25, -288, -288, -357, 202, 389, 436, 133,
	134, 135, -252, 26, 35, 355, -230, 228, 59, 94,
	23, -250, 94, 105, -249, -249, -249, -250, -250, -122,
	35, -178, 121, -179, 65, -122, 35, 124, -86, -87,
	-71, -70, 60, 60, -288, -288, -288, -288, -288, -288,
	-288, -185, -72, -73, 112, -204, -179, 86, -206, 62,
	-199, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 455, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 79, 361, 303, 346,
	155, 304, 153, 214, -200, -202, -323, -317, -197, 58,
	110, 111, 118, 87, -201, -277, 30, 89, 406, -152,
	-153, -154, -155, -156, -318, -316, 65, 70, 73, 76,
	77, 75, 74, 151, 72, 66, 123, -70, -337, -168,
	-293, -299, 197, -297, 156, 152, 12, 116, 356, 121,
	-300, 475, 64, 63, 297, 298, 299, 398, 294, 300,
	203, 47, 301, 302, 305, 405, 306, 48, 307, 296,
	218, 308, 409, 408, 410, 402, 399, 397, 400, 401,
	403, 404, -72, -295, 38, -67, 58, 25, 58, -179,
	-86, -63, -87, 124, 70, 65, -49, 60, 59, -348,
	76, 77, -351, 170, 162, -179, -60, 65, -3, -4,
	-5, -6, -27, -41, -67, -319, -317, 58, 26, 355,
	55, 15, -256, 198, 398, 310, 224, 200, -254, -238,
	-235, -233, -178, -231, -234, -233, -259, -157, 373, -64,
	365, 274, 477, -63, -204, -179, -83, -82, -204, 200,
	-220, -359, 62, 86, -239, -236, -233, -230, -177, 62,
	63, 64, -179, -220, -357, -343, 29, -89, -179, -141,
	16, -202, -141, -102, -189, -189, -191, -373, -187, -373,
	373, -141, -141, -264, -188, -179, -188, -220, -359, -239,
	-76, -74, -77, -78, -80, -144, -146, -102, 58, 390,
	391, 131, 134, 133, 7, -253, 355, 26, -230, -247,
	-243, 65, 356, -234, -251, 55, 121, -301, -204, 35,
	-250, -250, -250, -251, -251, 120, -179, -63, -359, -238,
	-230, -179, -104, -102, -104, -180, -177, -170, -140, 59,
	-139, 15, -174, 85, 82, 83, 84, -179, 29, 65,
	124, -204, 101, -215, 94, 95, 96, 97, 98, 99,
	100, 58, 58, 58, 58, 58, 58, 58, 58, -213,
	58, 58, 58, 58, 58, 58, 58, -213, 58, 58,
	58, 58, 58, 65, 65, 107, 106, 117, 110, 111,
	112, 113, 114, 115, 116, 108, 109, 104, 86, 102,
	103, 88, -70, -204, -210, -202, -202, -202, -202, -277,
	-208, -204, 58, -204, 58, 58, 58, -298, 58, 58,
	-212, -213, 58, 65, 58, 58, 58, -202, 58, 58,
	-140, -296, -211, -336, 476, -93, 60, -88, -179, -334,
	-335, -88, -92, -179, -63, -63, -172, -173, -164, -169,
	-176, -177, -170, 292, 196, 26, 85, 29, 31, 297,
	329, 88, 121, 20, 89, 156, 120, 299, 406, 298,
	191, 51, 408, 410, 409, 399, 397, 348, 352, 354,
	351, 398, 372, 35, 14, 32, 212, 27, 28, 114,
	193, 92, 93, 215, 30, 213, 77, 23, 54, 15,
	17, 18, 300, 347, 203, 202, 104, 365, 199, 49,
	12, 123, 33, 101, 349, 45, 81, 47, 102, 21,
	400, 401, 36, 364, 432, 219, 116, 301, 302, 52,
	86, 355, 75, 55, 82, 19, 50, 103, 194, 405,
	48, 353, 305, 307, 430, 306, 197, 383, 10, 296,
	407, 25, 211, 46, 198, 91, 201, 76, 218, 152,
	6, 80, 13, 53, 56, 402, 403, 404, 38, 90,
	16, 308, 436, 356, 366, 367, 368, 369, 370, 371,
	180, 181, 182, 183, 184, 260, 206, 204, 208, 209,
	476, 477, 185, 186, 287, 289, 159, 188, 189, 190,
	220, 137, 7, 334, 335, 336, 337, 339, 340, 341,
	342, 343, 344, 345, 23, -49, -346, 124, 59, -89,
	-256, -237, -234, -258, 112, 62, -244, 59, 436, 483,
	63, 201, -368, -367, 347, 60, 59, -305, 202, 405,
	65, 484, 275, 65, 59, 22, 124, 59, -81, 31,
	32, -102, 203, -102, -362, 334, 30, -369, 59, 35,
	-367, -223, 56, -218, -219, -217, -221, 35, -102, 15,
	-75, -103, -179, 58, 60, 59, -204, -141, -141, -141,
	-189, -180, -191, -186, -191, -187, 124, -166, -179, -362,
	-369, 25, -147, -148, -149, -150, 45, 49, 51, 46,
	47, 48, 52, 25, 59, -374, 29, -175, -181, 29,
	-176, 65, -177, -170, -68, -70, 132, 135, 135, 134,
	-230, 201, 58, 94, -251, -251, -251, 35, -178, 55,
	59, -141, -73, -74, -76, -204, -204, -204, -204, -179,
	65, -179, 112, -198, 86, 290, 75, 76, 77, -199,
	-216, 26, 270, 271, -209, -210, -204, -151, 27, 26,
	-151, -151, -204, -151, 112, -210, -210, 60, 70, -338,
	-339, 411, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 301, 296, 302, 300, 294, 308, 303, 304,
	155, 428, 429, 422, 423, 424, 425, 426, 427, -151,
	-151, -151, -151, -151, -204, -353, 288, 287, 289, -151,
	-151, -151, -151, -200, -200, -200, -200, -200, -200, -200,
	-200, -200, -200, -200, -200, -207, -214, -277, 58, 104,
	102, 103, 88, -202, -200, -200, 60, 59, -341, -340,
	90, -204, -338, -209, -204, -209, -209, 60, 60, -210,
	-209, -200, -209, -151, 65, -141, 59, 58, 60, 59,
	38, 124, 59, 94, 60, 59, 124, 363, -179, -317,
	60, -258, 59, 201, 124, 124, -235, 315, -178, -237,
	20, 436, -157, 33, 65, 484, -308, 377, -204, -204,
	-179, -82, -90, 86, 58, -364, 379, 336, -171, 94,
	-196, -195, 293, 36, -291, 356, 342, 343, -236, 228,
	55, 282, 283, 284, 285, -217, -165, 120, 239, 58,
	-102, -75, -179, 15, 59, -358, 124, -1, -179, -141,
	-189, -189, -191, -179, -364, -196, -241, -240, -157, -77,
	-77, -77, -77, 45, 45, 45, 50, 45, 50, 45,
	-149, -241, -80, -179, -181, 60, 135, -237, -192, 65,
	-243, -102, -102, -143, 17, 124, -198, 290, 75, -277,
	60, 59, -204, -204, -204, 29, -210, 60, 60, 60,
	60, 15, -204, -204, -204, -204, -204, 60, 15, 15,
	-204, -204, -204, -204, -204, -210, -207, -202, -200, -200,
	-205, 215, 85, -204, -203, -340, 92, -204, 59, 56,
	60, 15, 60, 60, 60, 56, 60, 59, 60, -204,
	59, -143, -211, -303, -302, -301, 38, -67, -88, -296,
	-179, -335, -301, -179, -172, -169, -177, -170, 70, 15,
	-234, -230, 112, 112, 62, 316, -244, 65, 335, 65,
	198, 94, -163, -162, 65, -314, 371, 366, 368, 124,
	29, 30, -97, -98, -99, -105, -100, -157, -194, -101,
	206, 204, 208, -331, 80, 209, 260, 81, 199, -365,
	69, -360, 65, -366, 69, 337, 123, 295, 35, 338,
	339, 353, 291, 70, 70, 344, -361, 62, -102, -171,
	-171, -171, -97, -91, 56, 124, -74, -103, -179, 112,
	60, -141, -141, -189, -365, -366, -141, 59, 94, -95,
	-94, 55, 56, -96, 55, -94, 45, 45, -141, -90,
	60, -142, 18, 20, -179, 112, -204, 60, 60, 60,
	-106, -108, 331, 332, -112, -109, -111, -110, -114, -113,
	156, 157, 121, 160, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 25, 214, 152, 153, 154, 155,
	172, 138, 158, 434, 180, 139, 181, 140, 182, 141,
	183, 142, 143, 184, 144, 147, 148, 149, 146, 60,
	-204, 60, 60, 60, 60, 60, -204, -204, 15, 60,
	60, 60, 60, 60, -205, 85, -202, -199, 60, 93,
	-204, 91, -107, -113, 121, 156, 214, 155, 154, 152,
	331, 332, -122, -204, -122, -200, 60, 65, -142, 60,
	59, -296, -237, -244, 356, -102, 65, 485, 59, 94,
	-285, 478, -312, 366, 20, 20, -67, -102, 60, 59,
	-108, -101, -179, 81, -330, -331, -220, -330, 81, 58,
	65, -363, 347, 65, 65, 70, 35, 70, 123, 340,
	-292, 58, -122, -124, -178, 121, 65, 60, -175, -74,
	-179, -141, -358, 124, -141, -85, -240, -301, -204, 58,
	-204, -204, -210, 60, -115, 143, 142, -115, -284, 332,
	331, -278, -280, 58, -279, 58, -279, -278, -278, 58,
	58, -278, -281, 58, -281, -278, -282, 58, -282, -283,
	58, -282, 60, 60, 60, -204, -199, -204, 60, -278,
	-279, -278, -281, -278, -115, -115, 60, 60, 23, 60,
	60, 60, -301, -66, -306, -264, 485, 59, -162, 65,
	-129, 479, 65, 20, 65, -310, 65, -90, -120, -121,
	-138, 329, 230, -221, 234, 69, 235, 363, 236, 199,
	238, 239, 240, 210, 241, 242, 243, 356, 244, 245,
	246, 247, 312, 6, 278, -99, -119, -118, -116, 75,
	86, 35, 329, -117, 69, 120, 253, 231, 254, -137,
	-193, 204, 80, 81, 317, -194, -327, -328, -179, -328,
	-179, -327, -327, -220, -204, 20, 436, 294, 35, 70,
	35, 341, -225, -227, -157, 58, -65, -64, -141, -141,
	-86, -89, -286, 333, 70, 70, -159, 65, -159, 70,
	70, 70, 60, -204, -313, 371, -309, -307, 366, 367,
	368, 369, 65, -160, 480, 70, 65, 368, 29, -260,
	220, 59, -138, -171, -171, -165, 120, -171, -171, -171,
	-171, 237, 237, -171, -171, -171, -171, -171, -171, -171,
	-171, -171, -171, -171, -171, -171, -171, 58, -116, 75,
	-200, 65, -124, -125, 35, 252, 248, -126, 35, 232,
	233, -128, 58, 260, 81, 81, -102, 58, 56, 269,
	58, 58, 58, -328, 60, 65, 335, 65, 294, 60,
	59, -278, -204, -66, -85, 60, 60, 60, 60, 59,
	60, 60, 60, 59, 60, 59, 60, -315, 202, -311,
	370, -307, 20, 368, 20, 20, 94, 58, 20, -67,
	20, -138, 70, 70, -171, -171, 70, 65, 65, 65,
	-171, -171, 70, 65, -181, 70, 70, 70, 70, 35,
	65, -127, 35, 248, 252, 249, 250, 251, 70, 35,
	70, 35, 70, 35, -179, 58, -332, -333, 65, 70,
	58, -226, 58, -225, -329, 282, 283, 284, 286, 285,
	-329, -225, -225, -225, 58, -246, -245, 261, 86, 356,
	-228, -227, -81, 60, -86, 65, 70, 70, -322, 58,
	70, -312, 20, -310, 20, -310, -310, 65, -161, -179,
	-310, -261, 262, 263, -262, -268, 265, -122, -122, 65,
	65, -123, 231, -104, 60, 59, 94, 60, -204, -131,
	-130, 432, -225, 60, 60, 60, 60, -225, 261, -229,
	210, 69, 436, 280, 281, -81, 60, 60, -326, 25,
	60, -321, -320, -158, -316, -179, 371, 65, -310, 485,
	60, 59, -266, 266, 58, -264, 58, -264, 81, 283,
	232, 233, 60, -333, 65, 60, -135, -136, -133, -134,
	55, 375, 258, 259, 60, -228, -228, -228, -228, 60,
	-171, 65, 279, -325, -324, -323, 60, 59, 124, -179,
	-263, 267, 70, -200, 58, -200, 58, -265, 264, 58,
	-245, -134, 55, -133, 55, 14, 13, -137, 70, -177,
	59, 94, -320, -179, -270, 58, 20, 60, -259, 60,
	-259, 58, 94, -200, -132, 255, 256, 25, 134, -132,
	-324, 35, -204, 124, -271, -269, 220, -262, 60, 60,
	-259, 70, 60, 75, 35, 257, -179, 60, 59, 62,
	-267, 268, 60, -269, -272, 38, 70, -276, -273, 58,
	-138, 222, -276, -138, -275, -274, 267, 223, 60, 59,
	62, 58, -274, -273, -210, 60,
}

var yyDef = [...]int{
	23, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 535, 536, 537, 538, 0, 341, 342,
	0, 321, 0, 0, 0, 0, 270, 271, 272, 273,
	274, 275, 276, 277, 278, 279, 280, 241, 242, 0,
	190, 186, 166, 167, 168, 126, 127, 128, 129, 247,
	0, 0, 411, -2, 539, 540, 541, 542, -2, 354,
	0, 322, 323, 324, 325, 326, 327, 328, 329, 230,
	231, 232, 227, 228, 229, -2, 0, 354, 179, 0,
	171, 171, 0, 431, 0, 0, 442, 464, 23, 389,
	0, 394, 722, 758, 759, 760, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 191, 343, 344,
	431, 431, 213, 0, 1338, 217, 0, 0, 0, 318,
	209, 210, 211, 212, 0, 527, 0, 206, 0, 185,
	1396, 0, 0, 0, 0, 0, 0, 87, 581, 89,
	583, 93, 95, 96, 99, 100, 101, 102, 103, 104,
	105, 106, 0, 108, 0, 110, 0, 113, 114, 115,
	0, 124, 125, 584, 585, 67, -2, 0, 0, 0,
	447, 450, 453, 456, 545, 610, 610, 610, 0, 610,
	0, 634, 587, 588, 589, 608, 609, 359, 355, 356,
	357, 358, 419, 0, 421, 424, 301, 301, 0, 0,
	292, 293, 0, 310, 301, 301, 310, 0, 1125, 0,
	0, 284, 285, 286, 290, 291, 311, 247, 247, 361,
	180, 181, 170, 0, 175, 0, 169, 1396, 0, 140,
	0, 145, 0, 1345, 1410, 1360, 0, 0, 1378, 0,
	164, -2, 426, 0, 432, 0, 431, 0, 247, 247,
	247, 247, 247, 247, 247, 0, 0, 0, 465, 466,
	461, 462, 463, 467, 468, 3, 0, 0, 393, 0,
	426, -2, 0, 214, 761, 0, 0, 218, 219, 0,
	0, 233, 0, 236, 222, 223, 224, 0, 0, 208,
	0, 0, 187, 0, 0, 0, 248, 81, 0, 0,
	0, 0, 0, 94, 123, 97, 98, 0, 118, 120,
	122, 121, 107, 119, 109, 111, 112, 117, 0, 68,
	414, 0, 395, 0, 444, 446, 0, 448, 449, 451,
	452, 454, 455, 457, 458, 0, 610, 546, 0, 0,
	0, 0, 0, 0, 610, 361, 360, 0, 420, 0,
	0, 473, 0, 473, 0, 306, 307, 301, 301, 294,
	303, 0, 308, 309, 0, 473, 473, 0, 0, 0,
	610, 1126, 1127, 0, 0, 0, 362, 0, 0, 173,
	0, 178, 130, 135, 133, 134, 136, 0, 0, 0,
	0, 0, 162, 163, 0, 0, 0, 0, 0, 153,
	156, 716, 717, 578, 579, 157, 158, 0, 395, 427,
	443, 445, 440, 441, 0, 0, 0, 0, 0, 0,
	0, 340, 481, 475, 477, 522, 31, 0, 1015, 758,
	1020, -2, 1473, 1474, 1475, 1476, 1477, 1478, 1479, -2,
	1481, -2, -2, 1484, 1485, 1486, 1488, -2, -2, -2,
	-2, -2, -2, 1495, -2, -2, -2, 1499, 1500, -2,
	-2, 1503, 1504, 1505, 1506, 1507, -2, -2, -2, -2,
	-2, -2, -2, -2, 1031, 829, 830, 831, 832, 0,
	0, 0, 0, 0, 839, 840, 0, 853, 0, 846,
	847, 848, 849, 850, 43, 44, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 1057, 1058, 1059, 978, 816, 0, 0,
	0, 963, 0, 953, 0, 991, 0, 0, 0, 0,
	0, 0, 45, 46, 969, 971, 972, 974, 975, 976,
	977, 980, 981, 982, 985, 986, 987, 988, 989, 990,
	993, 995, 965, 966, 967, 968, 957, 958, 959, 960,
	961, 962, 481, 363, 381, 365, 0, 370, 0, 723,
	395, 417, 395, 0, 215, 0, 220, 0, 0, 235,
	237, 238, 239, 225, 226, 319, 204, 205, 197, 198,
	199, 200, 201, 202, 203, 207, 41, 0, 188, 189,
	81, 0, 0, 82, 83, 84, 85, 86, 88, 72,
	332, 334, 570, 582, 0, 573, 0, 91, 116, 64,
	0, 0, 0, 415, 428, 31, 433, 434, 437, 0,
	0, 0, 548, 0, 245, 564, 0, 580, 602, 532,
	533, 534, -2, 0, 0, 422, 0, 0, 509, 281,
	0, 302, 282, 473, 473, 473, 301, 0, 303, 0,
	303, 297, 298, 0, 312, 315, 313, 0, 0, 245,
	486, 0, 487, 488, 484, 511, 514, 517, 0, 182,
	183, 0, 0, 177, 0, 0, 137, 138, 139, 146,
	141, 143, 0, 0, 147, 159, 160, 161, 387, 388,
	0, 0, 0, 151, 152, 0, 165, 413, 330, 331,
	335, 0, 337, 720, 338, 339, 528, 529, 473, 0,
	482, 0, 478, 0, 0, 0, 0, 523, 0, 525,
	0, 1010, 0, 0, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1002, 998, 998, 998, 0, 998, 0, 0, 938,
	0, 0, 998, 998, 998, 998, 998, 939, 0, 998,
	998, 998, 998, 952, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 1004, 0, 835, 836, 837, 838, 841,
	0, 854, 0, 0, 1002, 1002, 1002, 941, 0, 0,
	943, 954, 0, 947, 1002, 0, 1002, 951, 998, 0,
	473, 364, 378, 0, 382, 0, 0, 374, 376, 369,
	371, 0, 0, 391, 416, 418, 762, 0, 1132, -2,
	1134, -2, -2, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 0, 221, 234, 0, 0, 0,
	0, 75, 567, 0, 76, 80, 70, 0, 0, 0,
	572, 0, 569, 574, 0, 90, 0, 0, 65, 66,
	624, 0, 0, 397, 0, 0, 0, 0, 436, 438,
	439, 424, 0, 0, 554, 1128, 611, 249, 0, 0,
	566, 0, 0, 607, -2, 614, 0, 620, 0, 0,
	0, 348, 352, 23, 425, 0, 474, 283, 287, 288,
	473, 304, 301, 305, 301, 303, 0, 314, 317, 554,
	249, 0, 0, 0, 0, 0, 502, 0, 0, 501,
	0, 0, 0, 0, 0, 0, 515, 516, 518, 0,
	520, 521, 530, 531, 0, 431, 184, 172, 174, 0,
	132, 0, 0, 0, 148, 149, 150, 154, 155, 0,
	0, 471, 476, 483, 486, 1006, 1007, 1008, 1009, 524,
	526, 32, 479, 1011, 0, 1013, 1016, 1021, 1022, 1018,
	0, 1036, -2, -2, 0, 1003, 1004, 0, 999, 1000,
	0, 0, 0, 0, 0, 0, 0, 955, 0, 0,
	909, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 0,
	0, 0, 0, 0, 0, 0, 904, 905, 906, 0,
	0, 0, 0, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 1023, 1034, 1035, 0, 0,
	0, 0, 0, 1032, 1027, 0, 833, 0, 851, 855,
	0, 0, 997, 0, 1004, 0, 0, 964, 942, 0,
	0, 0, 0, 0, 0, 471, 381, 383, 0, 0,
	381, 0, 0, 0, 390, 0, 0, 0, 320, 42,
	240, 0, 0, 0, 0, 0, 333, 0, 571, 72,
	0, 0, 92, 0, 0, 631, 401, 0, 429, 430,
	32, 435, 0, 0, 724, 557, 555, 556, 0, 1129,
	561, 250, 251, 252, 253, 0, 0, 0, 565, 0,
	0, 603, 604, 605, 606, 615, 1128, 1128, 1128, 724,
	389, 0, -2, 0, 0, 350, 0, 0, 510, 295,
	473, 473, 301, 316, 557, 561, 473, 194, 0, 505,
	499, 0, 492, 503, 504, 495, 0, 497, 0, 493,
	494, 473, 485, 424, 519, 513, 176, 131, 0, 269,
	142, 336, 721, 469, 0, 0, 1012, 1014, 1017, 1019,
	891, 0, 0, 0, 0, 0, 0, 880, 874, 875,
	956, 0, 0, 0, 0, 0, 0, 899, 0, 0,
	0, 0, 0, 0, 0, 0, 1024, 1032, 1028, 0,
	1025, 0, 0, 1005, 0, 856, 0, 0, 0, 0,
	892, 0, 896, 940, 944, 0, 948, 0, 950, 0,
	0, 469, 379, 0, 384, 385, 381, 368, 375, 367,
	377, 372, 373, 392, 763, 1133, 1130, 1131, 216, 0,
	568, 72, 77, 78, 79, 73, 71, 575, 0, 577,
	0, 0, 0, 629, 0, 403, 53, 0, 0, 0,
	0, 0, 0, 725, 726, 728, 729, 0, 0, 731,
	785, 0, 740, 610, 740, 0, 0, 742, 743, 547,
	0, 0, 550, 559, 0, 0, 0, 255, 256, 0,
	0, 0, 268, 264, 265, 266, 246, 560, 0, 0,
	0, 0, 0, 517, 0, 0, 473, 349, 352, 353,
	423, 299, 296, 473, 243, 244, 431, 0, 0, 489,
	506, 0, 0, 490, 0, 491, 496, 498, 193, 512,
	144, 459, 0, 0, 33, 480, 1005, 876, 877, 878,
	0, 858, 870, 870, 1120, 1061, 1062, 1063, 1107, 1065,
	1111, 1111, 1107, 1107, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 0, 0, 1084, 1107, 1109, 1109, 1107,
	1104, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1114, 1114, 1117, 1114, 879,
	0, 898, 881, 882, 885, 883, 0, 0, 0, 897,
	886, 887, 873, 1001, 1026, 0, 1033, 1029, 834, 842,
	852, 0, 0, 861, 1107, 1111, 864, 1107, 1109, 1107,
	870, 870, 0, 0, 0, 0, 884, 0, 460, 380,
	0, 366, 74, 69, 576, 55, 0, 627, 631, 0,
	405, 0, 402, 0, 0, 0, 543, 424, -2, 0,
	-2, 730, 786, 752, 752, 741, 752, 752, 610, 0,
	558, 549, 0, 562, 563, 0, 257, 258, 0, 261,
	267, 0, 616, 617, 718, 719, 618, 0, 473, 473,
	-2, 346, 351, 0, 300, 426, 195, 196, 507, 0,
	500, 470, 472, 843, 859, 871, 872, 860, 1123, 1121,
	1122, 1064, 1108, 0, 1089, 0, 1090, 1091, 1092, 0,
	0, 1085, 1086, 0, 1087, 1088, 1080, 0, 1081, 1082,
	0, 1083, 895, 900, 901, 0, 1030, 857, 844, 862,
	863, 865, 866, 867, 868, 869, 845, 893, 0, 945,
	949, 903, 386, 24, 49, 0, 625, 0, 630, 632,
	407, 0, 404, 0, 398, 400, 63, 0, 635, -2,
	672, 1128, 1128, 0, 1128, 1128, 1128, 1128, 0, 0,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 0, 727, 754, -2, 766, 768,
	0, 0, 771, 772, 0, 0, 0, 0, 808, 778,
	0, 0, 1048, 1049, 0, 784, 0, 744, 753, 0,
	753, 0, 0, 752, 0, 0, 0, 254, 259, 0,
	262, 263, 0, 598, 1107, 0, 622, 55, 431, 347,
	192, 0, 1060, 1124, 0, 0, 0, 1105, 0, 0,
	0, 0, 902, 0, 47, 51, 56, 57, 0, 0,
	0, 0, 0, 396, 0, 406, 54, 0, 0, 621,
	0, 619, 674, 0, 0, 1128, 1128, 0, 0, 0,
	0, 1128, 1128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 767, 769,
	770, 773, 774, 775, 813, 814, 815, 776, 810, 811,
	812, 777, 0, 0, 1046, 1047, 806, 0, 0, 0,
	0, 0, 0, 0, 738, 551, 0, 553, 260, 591,
	0, 437, 0, 623, 426, 508, 1113, 1112, 1102, 0,
	1103, 1110, 1115, 0, 1118, 0, 894, 34, 0, 53,
	0, 58, 0, 0, 0, 0, 0, 0, 0, 544,
	668, 673, 675, 676, 0, 0, 679, 680, 681, 682,
	0, 0, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 710, 711, 712, 713, 714, 715, 695, 696,
	697, 698, 699, 700, 707, 0, 0, 704, 0, 0,
	0, 801, 0, 0, 745, 747, 748, 749, 750, 751,
	746, 0, 0, 0, 0, 737, 739, 781, 0, 552,
	590, 599, 600, 437, 345, 1106, 0, 0, 25, 0,
	0, 50, 0, 59, 0, 61, 62, 0, 0, 409,
	399, 657, 0, 0, 663, 0, 669, 677, 678, 683,
	684, 701, 0, 0, 703, 0, 0, 809, 0, 788,
	802, 0, 0, 591, 591, 591, 591, 0, 782, 592,
	1128, 0, 0, 596, 597, 601, 1116, 1119, 628, 0,
	35, 0, 37, 39, 40, 755, 48, 52, 60, 626,
	408, 0, 637, 0, 0, 0, 0, 0, 666, 0,
	708, 709, 702, 705, 706, 779, 787, 789, 790, 791,
	0, 803, 804, 805, 807, 732, 733, 734, 735, 0,
	0, 594, 0, 26, 27, 0, 36, 0, 0, 410,
	639, 0, 658, 0, 0, 0, 0, 0, 0, 0,
	780, 792, 0, 793, 0, 0, 0, 736, 593, 595,
	0, 0, 38, 756, 636, 0, 668, 659, 0, 661,
	0, 0, 0, 0, 794, 796, 797, 0, 0, 795,
	28, 29, 30, 0, 0, 641, 0, 655, 660, 662,
	0, 667, 665, 798, 800, 799, 757, 640, 0, 653,
	638, 0, 664, 642, -2, 0, 656, 643, -2, 0,
	651, 0, 644, 652, 0, 647, 0, 0, 646, 0,
	-2, 0, 648, -2, 0, 654,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 87, 3, 3, 3, 115, 107, 3,
	58, 60, 112, 110, 59, 111, 124, 113, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 482,
	95, 94, 96, 3, 483, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 117, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 484, 106, 485, 118,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 88, 89, 90, 91, 92, 93, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 108, 109, 114,
	116, 119, 120, 121, 122, 123, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:541
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:547
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:573
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:577
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:583
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:598
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:604
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:608
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:614
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:621
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:630
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:634
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:638
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:651
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:657
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:666
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:677
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:681
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:687
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:691
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:697
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:701
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:707
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:731
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//        	yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:750
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:754
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:763
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:771
		{
			yyVAL.str = ""
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:775
		{
			yyVAL.str = yyDollar[3].str
		}
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:780
		{
			yyVAL.str = "\n"
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:784
		{
			yyVAL.str = yyDollar[3].str
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:793
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:817
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:821
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:827
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:833
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:851
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:868
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:891
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:895
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:899
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:914
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:927
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:951
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:955
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:965
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Users:      yyDollar[8].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:991
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:997
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1003
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1010
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1018
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1026
		{
			yyLOCAL = tree.OBJECT_TYPE_NONE
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1030
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1034
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1038
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1042
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1046
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1052
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1056
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1069
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1078
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1082
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1088
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1092
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1096
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1100
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1104
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1108
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1112
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1116
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1120
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1124
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1132
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1140
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1148
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1152
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1156
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1160
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1164
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1168
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1172
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1176
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1180
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1184
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1192
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1196
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1200
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1204
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1208
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1212
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1216
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1228
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1234
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1242
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1250
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1254
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1258
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1264
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1268
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1272
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1284
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1288
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1295
		{
			yyVAL.str = yyDollar[3].str
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1301
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1305
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1311
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1319
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1328
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1336
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1344
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1367
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1390
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1397
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1412
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1419
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1426
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1460
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1471
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1477
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1528
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1533
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1551
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1557
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1581
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1588
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1599
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1614
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1620
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1632
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1638
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1667
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1673
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1677
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1693
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1701
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1709
		{
			explainStmt := tree.NewExplainStmt(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1719
		{
			explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
			explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1755
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1767
		{
			yyVAL.str = yyDollar[1].str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1772
		{
			yyVAL.str = "true"
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1773
		{
			yyVAL.str = "false"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1774
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1790
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1822
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1826
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1835
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1851
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1867
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1871
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1887
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1891
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1895
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1899
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1917
		{
			yyVAL.item = nil
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1922
		{
			yyVAL.item = nil
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			yyLOCAL = &tree.ShowTarget{Target: yyDollar[2].str, Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1948
		{
			yyLOCAL = &tree.ShowTarget{Target: "charset", Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1968
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1978
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1987
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1991
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2013
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2045
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2063
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2080
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2085
		{
			yyVAL.str = ""
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2089
		{
			yyVAL.str = yyDollar[2].str
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2095
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2108
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2112
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2123
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2127
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2133
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2137
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2146
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2150
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2154
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2173
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2191
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2195
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2201
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2210
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2219
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2229
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2235
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2255
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2260
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2267
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2307
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2311
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2317
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2322
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2329
		{
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2331
		{
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2334
		{
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2343
		{
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2347
		{
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2352
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2361
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2368
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2374
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2382
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2389
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2396
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2419
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2423
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2429
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2442
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2448
		{
			yyVAL.str = yyDollar[1].str
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2452
		{
			yyVAL.str = yyDollar[3].str
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2458
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2462
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2468
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2473
		{
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2484
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2488
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2495
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2500
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2504
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2510
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2514
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2520
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2524
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2529
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2546
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2553
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2560
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2578
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2597
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2603
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2610
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2614
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2627
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2631
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2636
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2640
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2647
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2652
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2659
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2665
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2669
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2673
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2677
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2681
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2685
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2691
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2698
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2707
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2711
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2717
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2729
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2738
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2744
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2748
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2752
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2757
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2761
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2767
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2773
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2777
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2783
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2788
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2792
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2796
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2803
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2807
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2813
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2817
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2827
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2837
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2847
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2859
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2867
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2884
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2908
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2916
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2924
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2958
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2987
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2991
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2995
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3008
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3017
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3026
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3032
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3036
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3042
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3046
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3050
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3054
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3059
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3067
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3073
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3081
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3085
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3098
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3126
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3136
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3140
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3150
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3154
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3158
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3162
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3172
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3178
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3184
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3188
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3192
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3202
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3208
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3212
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3218
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3222
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3228
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3245
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3250
		{
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3251
		{
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3255
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3267
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3271
		{
			yyVAL.str = yyDollar[1].str
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3275
		{
			yyVAL.str = yyDollar[2].str
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3284
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3288
		{
			yyVAL.str = yyDollar[1].str
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3292
		{
			yyVAL.str = yyDollar[2].str
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3296
		{
			yyVAL.str = yyDollar[1].str
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3300
		{
			yyVAL.str = yyDollar[2].str
		}
	case 543:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3334
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3355
		{
		}
	case 547:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3372
		{
			yyVAL.str = yyDollar[1].str
		}
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3378
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3388
		{
			yyVAL.str = yyDollar[1].str
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3394
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3401
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3407
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3415
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3421
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3428
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3436
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3442
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3451
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3463
		{
			yyVAL.str = yyDollar[1].str
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3468
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3474
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3482
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3588
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3592
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3598
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3608
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3612
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3618
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3628
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3632
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3636
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3645
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3651
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3658
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:3664
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3686
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3690
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3696
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3713
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3717
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3721
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3725
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3731
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3750
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3754
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3776
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3780
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3788
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3792
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3798
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3802
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3808
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3813
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3818
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3822
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3826
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3830
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3834
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3840
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3854
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3858
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3867
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3873
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3877
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3883
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3887
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3891
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3896
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3900
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3906
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3917
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3928
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3935
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				ScanType:     tree.LOCAL,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3943
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				ScanType:     tree.LOCAL,
				CompressType: tree.AUTO,
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3955
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				ScanType:     tree.LOCAL,
				CompressType: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:3967
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				S3option: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:3976
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3988
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3992
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3997
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4001
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4007
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4011
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4020
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4034
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4047
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4053
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4057
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4063
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4072
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4086
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4092
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4096
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4102
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4109
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4118
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4122
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4131
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4136
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4140
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4150
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4154
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4165
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4173
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4181
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4189
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4200
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4210
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4220
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4224
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4229
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4233
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4242
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4248
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4252
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4256
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4262
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4266
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4270
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4274
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4278
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4282
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4286
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4290
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4294
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4298
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4302
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4306
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4310
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4314
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4318
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4322
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4326
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4330
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4334
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4338
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4342
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4346
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4350
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4354
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4358
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4362
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4366
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4370
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4374
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4381
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4385
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4391
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4396
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4400
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4404
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4410
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4414
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4418
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4422
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4426
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4430
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4444
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4448
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4457
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4462
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4468
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4475
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4479
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4485
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4489
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4495
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4505
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4511
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4520
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4529
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4552
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4561
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4571
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4579
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4585
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4589
		{
			yyVAL.str = yyDollar[1].str
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4599
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4605
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4611
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4625
		{
			yyVAL.str = ""
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:4632
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4638
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4642
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4646
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4657
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4661
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4665
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4674
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4680
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4684
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4690
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4694
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4698
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4702
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4706
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4710
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4714
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4718
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4722
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4726
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4730
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4734
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4738
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4748
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4757
		{
			yyVAL.str = ""
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4761
		{
			yyVAL.str = yyDollar[1].str
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4767
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4771
		{
			yyVAL.str = yyDollar[2].str
		}
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:4777
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4788
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4798
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4805
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4812
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4819
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4828
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4834
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4840
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4844
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4848
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4852
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4856
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4861
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4868
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4872
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4876
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4885
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4890
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4894
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:4910
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4916
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4920
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4924
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4928
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4932
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4936
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4940
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4944
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4948
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4952
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4956
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4960
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4964
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4970
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4974
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4978
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4982
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4986
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4990
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4994
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4998
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5002
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5006
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5010
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5014
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5019
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5035
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5044
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5048
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5052
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5056
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5060
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5069
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5078
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5084
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5088
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5094
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5104
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5121
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5138
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5151
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5164
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5176
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5190
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5205
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5220
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5237
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5252
		{
		}
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5258
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5267
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5275
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5283
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5292
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5301
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5310
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5319
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5328
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5337
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5346
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5355
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5364
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5373
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5382
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5398
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5406
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5414
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5422
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5430
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5439
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5447
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5456
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5465
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5473
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5481
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5490
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5500
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5521
		{
			yyVAL.str = yyDollar[1].str
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5557
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5569
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5583
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5591
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5598
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5605
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5617
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5625
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5636
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5645
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5654
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5662
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5672
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5680
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5688
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5702
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5708
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5712
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5731
		{
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5733
		{
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5773
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5783
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5787
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5791
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:5797
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5806
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5812
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5816
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5823
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5827
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5831
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5839
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5843
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5847
		{
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5851
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5855
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5860
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5865
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5871
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5875
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5879
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5883
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5890
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5894
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5900
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5904
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5908
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5912
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5916
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5920
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5924
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5928
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5938
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5944
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5948
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5955
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5959
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5963
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5969
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5973
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5977
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5981
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5985
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5989
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5993
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5999
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6003
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6007
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6011
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6017
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6021
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6034
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6039
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6043
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6047
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6051
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6065
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6069
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6083
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6089
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6100
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6105
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6111
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6123
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6135
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6147
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6160
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6173
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6199
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6212
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6225
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6238
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6251
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6264
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6277
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6292
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6315
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6352
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6400
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6417
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6429
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6444
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6464
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6484
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6500
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6513
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6526
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6539
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6552
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6564
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6576
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6588
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6600
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6612
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6624
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6636
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6648
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6660
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6673
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6688
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6711
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6716
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6722
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6729
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6733
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6738
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6742
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6748
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6754
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6761
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6768
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6777
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6784
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6791
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6800
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6804
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6808
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6814
		{
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6816
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6826
		{
			yyVAL.str = ""
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6830
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
